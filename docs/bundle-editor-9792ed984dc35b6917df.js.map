{"version":3,"sources":["webpack://App/webpack/bootstrap","webpack://App/./src/editor/TileInstance.js","webpack://App/./src/util/findNamed.js","webpack://App/./src/editor/loadInstanceJSON.js","webpack://App/./src/editor/Sidebar.js","webpack://App/./src/constants.js","webpack://App/./src/editor/EditorUI.js","webpack://App/./src/editor/EditorState.js","webpack://App/./src/editor/Cursor.js","webpack://App/./src/util/download.js","webpack://App/./src/editor/editor.js","webpack://App/./src/editor/Grid.js","webpack://App/./src/editor/default-tiles.js","webpack://App/./src/editor/prepareTiles.js","webpack://App/./src/util/threeJsThumbnailer.js","webpack://App/./src/util/loadScene.js","webpack://App/./src/util/inputToWFC.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","2","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","idCounter","TileInstance","scene","tile","position","rotation","material","x","y","indexes","this","id","clone","createObject","variants","variant","Math","random","newObject","scale","set","TILE_SIZE","copy","TAU","add","remove","findNamed","array","e","loadInstanceJSON","tiles","grid","instances","rawInstances","notFound","Set","raw","instance","Vector3","setTile","size","console","log","Sidebar","visible","setVisible","children","type","accessKey","className","cx","onClick","onFocusCapture","WATER","SAND","GRASS","FOREST","STONE","ICE","DIRT","UNDEFINED","MATERIAL_NAMES","CASE_NAMES","PI","PHI","sqrt","SelectButton","elem","index","active","ref","useRef","useEffect","current","appendChild","SizeBadge","memo","sizeX","sizeY","style","visibility","EditorUI","observer","editorState","download","clearAll","undo","canUndo","redo","canRedo","activeTileIndex","activeTile","dirty","toggleVisible","sizeZ","disabled","map","idx","selectTile","thumbnail","title","confirm","EditorState","action","bound","historyPos","historyEnd","observable","VALID_COLOR","Color","INVALID_COLOR","Cursor","raycaster","Raycaster","lineMat","LineBasicMaterial","color","linewidth","depthTest","opacity","transparent","points","border","Line","BufferGeometry","setFromPoints","insidePlane","Mesh","PlaneBufferGeometry","MeshBasicMaterial","cursor","Group","createCursorGeometry","valid","mouse","camera","setFromCamera","intersects","intersectObjects","group","substr","point","matOff","offX","offsets","offY","floor","z","setValid","objectX","objectY","filename","text","mediaType","element","document","createElement","setAttribute","encodeURIComponent","display","body","click","removeChild","container","renderer","light","controls","materials","uiContainer","cubeCamera","sky","skyParameters","getWidth","innerWidth","Vector2","onDocumentMouseMove","event","preventDefault","clientX","clientY","innerHeight","onWindowResize","aspect","updateProjectionMatrix","setSize","mainLoop","update","ghost","performance","now","render","raf","convertTimestamp","timestamp","Date","loadInstances","json","localStorage","getItem","JSON","parse","loadFromLocalStorage","getTime","inputData","info","getCurrentInstancesAsJSON","stringify","version","toISOString","timerId","history","debouncedSync","setDirty","clearTimeout","setTimeout","sync","setItem","onCanvasClick","ev","removed","offset","curr","indexOf","clearTile","removeObject","delete","addHistoryEntry","added","newEntry","updateHistory","onKeyDown","keyCode","shiftKey","ctrlKey","Promise","all","loadScene","then","prepareTiles","ground","_tiles","kid","find","Error","getElementById","WebGLRenderer","setPixelRatio","devicePixelRatio","outputEncoding","sRGBEncoding","domElement","Scene","PerspectiveCamera","up","lookAt","DirectionalLight","CubeCamera","background","renderTarget","Sky","uniforms","texture","theta","phi","cos","sin","updateSun","OrbitControls","maxPolarAngle","target","minDistance","maxDistance","enableDamping","dampingFactor","mouseButtons","MIDDLE","MOUSE","ROTATE","RIGHT","PAN","Grid","addEventListener","resolve","reject","ReactDOM","configure","enforceActions","reaction","clear","disposeMaterials","dispose","setOpacity","v","Output","KEY","numMaterials","Float64Array","dx","dy","rotateEvery","rotateCount","flag","geo","mat","side","DoubleSide","mesh","tmp","tx","ty","cleanFn","gridSize","rotationIndex","posX","posY","directions","clean","Uint32Array","lineDx","lineDy","pattern","DEFAULT_TILES","getMaxId","idCount","createEmptyThumbnail","canvas","width","thumbnailWidth","height","thumbnailHeight","ctx","getContext","lineWidth","strokeStyle","fillStyle","hw","hh","min","beginPath","moveTo","lineTo","rect","stroke","fillText","tilesGLTF","pos","filter","reachable","sort","a","b","forEach","Array","isArray","thumbNames","objects","names","top","left","alpha","images","box","Box3","expandByObject","max","isSmall","dist","pow","drawImage","thumbName","threeJsThumbnailer","thumbnails","th","unshift","colors","loader","GLTFLoader","url","onProgress","load","tmpMask","tileName","tileId","isNaN","inputToWFC","weightTargets","maxId","numInts","last","adjacencies","tileA","tileB","bit","numEntries","changed","numWeights","weights","numAdjacencies","right","bottom","fill","sum","emptyWeight"],"mappings":"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","file":"bundle-editor-9792ed984dc35b6917df.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonpApp\"] = window[\"webpackJsonpApp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([46,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { TILE_SIZE } from \"./Grid\";\n\nimport { Scene, Vector3 } from \"three\"\nimport { TAU } from \"../constants\";\n\n\nlet idCounter = 0;\n\nexport default class TileInstance\n{\n    scene;\n    tile;\n    position;\n    object = null;\n    indexes = null;\n\n    /**\n     *  Creates a new tile instance\n     *\n     * @param {Scene} scene             three.js scene\n     * @param {TileDefinition} tile     tile definition\n     * @param {Vector3} position        position of the tile\n     * @param {number} rotation         tile rotation (0-3)\n     * @param {Number} material         material index\n     * @param {Number} x                tile x\n     * @param {Number} y                tile y\n     */\n    constructor(scene, tile, position, rotation, material, x, y)\n    {\n        this.id = ++idCounter;\n\n        this.scene = scene;\n        this.tile = tile;\n        this.position = position.clone();\n        this.rotation = rotation;\n\n        this.material = material;\n        this.x = x;\n        this.y = y;\n\n        if (scene)\n        {\n            this.createObject();\n        }\n    }\n\n    createObject()\n    {\n        const { tile, scene, position, rotation } = this;\n        const { variants } = tile;\n\n        this.variant = Math.random() * variants.length|0;\n\n        const newObject = variants[this.variant].clone();\n        newObject.scale.set(TILE_SIZE, TILE_SIZE, TILE_SIZE)\n        newObject.position.copy(position)\n\n        newObject.rotation.y = TAU * rotation / 4;\n\n        this.object = newObject;\n        scene.add(newObject);\n    }\n\n    removeObject()\n    {\n        const { scene, object } = this;\n\n        if (object)\n        {\n            scene.remove(object);\n            this.object = null;\n        }\n    }\n\n}\n","/**\n * Finds a named element\n *\n * @param array     array of elements\n * @param name      name\n * @return {?Object} element or null\n */\nexport default function findNamed(array, name)\n{\n    for (let i = 0; i < array.length; i++)\n    {\n        const e = array[i];\n        if (e.name === name)\n        {\n            return e;\n        }\n    }\n    return null;\n}\n","import TileInstance from \"./TileInstance\";\nimport { Vector3, Scene } from \"three\";\nimport findNamed from \"../util/findNamed\";\n\n\n/**\n * Loads the input instance data from a JSON file\n *\n * @param {Object} data                     raw JSON data\n * @param {Array<TileDefinition>} tiles     array of tile definition\n * @param {Grid} grid                       grid instance\n * @param {Set<TileInstance>} [instances]   set of tile instances\n * @param {Scene} [scene]                   scene\n */\nexport default function loadInstanceJSON(data, tiles, grid, instances, scene)\n{\n    const { instances: rawInstances } = data;\n\n    const notFound = new Set();\n\n    for (let i = 0; i < rawInstances.length; i++)\n    {\n        const raw = rawInstances[i];\n\n        const tile = findNamed(tiles, raw.name);\n\n        if (tile)\n        {\n            const instance = new TileInstance(\n                scene,\n                tile,\n                new Vector3(raw.position[0], raw.position[1], raw.position[2]),\n                (Math.random() * 4)|0,\n                raw.material,\n                raw.x,\n                raw.y\n            );\n\n            instance.variant = (Math.random() * tile.variants.length)|0;\n\n            instance.indexes = grid.setTile(instance.material, instance.x, instance.y, instance.tile, instance.rotation, true);\n\n            if (instances)\n            {\n                instances.add(instance);\n            }\n        }\n        else\n        {\n            notFound.add(raw.name);\n        }\n    }\n\n    if (notFound.size > 0)\n    {\n        console.log(\"Could not find some tiles: \", notFound)\n    }\n\n}\n","import React from \"react\"\nimport cx from \"classnames\"\n\n\nconst Sidebar = ({ visible, setVisible, children }) => {\n\n    return (\n        <>\n            <button\n                type=\"button\"\n                accessKey=\"u\"\n                className={cx(\"btn btn-default toggle\", visible && \"visible\")}\n                onClick={() => setVisible(!visible)}\n            >\n                <i className=\"fas fa-arrows-alt-h\"/>\n\n            </button>\n            <div\n                className={ cx(\"sidebar\", visible && \"visible\") }\n                onFocusCapture={() => setVisible(true)}\n\n            >\n                <div className=\"container-fluid\">\n                    {\n                        children\n                    }\n                </div>\n            </div>\n        </>\n\n    );\n};\n\nexport default Sidebar;\n","export const WATER = 0;\nexport const SAND = 1;\nexport const GRASS = 2;\nexport const FOREST = 3;\nexport const STONE = 4;\nexport const ICE = 5;\nexport const DIRT = 6;\nexport const PACKED_ICE = 7;\nexport const UNDEFINED = 8;\n\nexport const MATERIAL_NAMES = [\n    \"Water\", // WATER\n    \"Sand\", // SAND\n    \"Grass\", // GRASS\n    \"Forest\", // FOREST\n    \"Stone\", // STONE\n    \"Ice\", // ICE\n    \"Dirt\", // DIRT\n    \"Packed_Ice\", // PACKED_ICE\n];\nexport const CASE_NAMES = [\n    null,\n    \"case-1\",\n    \"case-2\",\n    \"case-3\",\n    \"case-4\",\n    \"case-5-1\",\n    \"case-6\",\n    \"case-7\",\n    \"case-8\",\n    \"case-9\",\n    \"case-10-1\",\n    \"case-11\",\n    \"case-12\",\n    \"case-13\",\n    \"case-14\",\n    \"case-15\",\n    \"case-m1\",\n    \"case-m2\",\n    \"case-m3\",\n    \"case-m4\",\n    \"case-5-2\",\n    \"case-10-2\"\n];\nexport const GROUND_COLORS = {\n    [WATER]: [0, 0.4, 0.8],\n    [SAND]: [0.8, 0.8, 0],\n    [GRASS]: [0, 0.7, 0],\n    [DIRT]: [0.5, 0.3, 0.1],\n    [FOREST]: [0.2, 0.5, 0.3],\n    [STONE]: [0.5, 0.5, 0.5],\n    [ICE]: [1, 1, 1],\n    [PACKED_ICE]: [1, 1, 1],\n    [UNDEFINED]: [1, 0, 1]\n}\nconst GROUND_ROUGHNESS = {\n    [WATER]: 0,\n    [SAND]: 1,\n    [GRASS]: 1,\n    [DIRT]: 1,\n    [FOREST]: 1,\n    [STONE]: 0.4,\n    [ICE]: 0.9,\n    [PACKED_ICE]: 0.8,\n    [UNDEFINED]: 0\n}\n\n\nexport const TAU = Math.PI * 2;\n\nexport const PHI = (1 + Math.sqrt(5)) / 2;\n","import React, { memo, useEffect, useRef } from \"react\"\nimport cx from \"classnames\"\n// noinspection ES6UnusedImports\nimport STYLE from \"./ui.css\"\nimport { observer } from \"mobx-react-lite\";\nimport Sidebar from \"./Sidebar\";\n\nconst SelectButton = ({elem, index, active, onClick}) => {\n\n    const ref = useRef(null)\n\n    useEffect(() => {\n        ref.current.appendChild(elem);\n    }, [])\n\n    return (\n        <button\n            ref={ ref }\n            type=\"button\"\n            className={ cx(\"btn btn-sm m-1\", active === index ? \"btn-light\" : \"btn-default\") }\n            onClick={ onClick }\n        />\n    )\n}\n\n\nconst SizeBadge = memo(({sizeX, sizeY }) => {\n\n    return (\n        <span\n            className=\"badge badge-secondary ml-1\"\n            style={{\n                visibility: sizeX === 1 && sizeY === 1 && \"hidden\"\n            }}\n        >\n            {\n                sizeX + \"x\" + sizeY\n            }\n        </span>\n    )\n})\n\nconst EditorUI = observer(({ editorState, download, clearAll, undo, canUndo, redo, canRedo }) =>\n{\n    const { tiles, activeTileIndex, activeTile, dirty } = editorState;\n\n    return (\n        <>\n            <Sidebar\n                visible={ editorState.visible }\n                setVisible={ editorState.toggleVisible }\n            >\n\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <p className=\"form-control-plaintext border-bottom\">\n                                <strong>Island Rules Builder</strong>\n                            </p>\n                        </div>\n                    </div>\n                    <div className=\"row small\">\n                        <div className=\"col\">\n\n                            <strong>Selected:</strong>&nbsp;\n                            {\n                                activeTile.name\n                            }\n                            <SizeBadge sizeX={ activeTile.sizeX } sizeY={ activeTile.sizeZ }/>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-sm btn-secondary mr-1 mb-1\"\n                                disabled={!canUndo()}\n                                onClick={ undo }\n                            >\n                                <i\n                                    className=\"fas fa-undo mr-1\"\n                                />\n                                Undo\n                            </button>\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-sm btn-secondary mr-1 mb-1\"\n                                disabled={!canRedo()}\n                                onClick={ redo }\n                            >\n                                <i\n                                    className=\"fas fa-redo mr-1\"\n                                />\n                                Redo\n                            </button>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"tile-selector flex\">\n                            {\n                                tiles.map( (tile,idx) => (\n                                    <SelectButton\n                                        key={ idx }\n                                        index={idx}\n                                        active={ activeTileIndex }\n                                        onClick={() => editorState.selectTile(idx)}\n                                        elem={ tile.thumbnail }\n                                    />\n                                ))\n                            }\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <i\n                                className={ cx(\"fas mr-1\", dirty ? \"fa-spinner rotating\" : \"fa-check\", dirty ? \"text-muted\" : \"text-success\" ) }\n                                title={ dirty ? \"Write pending\" : \"Synched to localStorage\" }\n                            />\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-sm btn-secondary mr-1 mb-1\"\n                                onClick={ download }\n                                >\n                                Download JSON\n                            </button>\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-sm btn-danger mr-1 mb-1\"\n                                onClick={ () =>{\n                                    if (confirm(\"Do you really want to delete all tiles?\"))\n                                    {\n                                        clearAll();\n                                    }\n                                } }\n                                >\n                                Clear\n                            </button>\n                        </div>\n                    </div>\n            </Sidebar>\n        </>\n    )\n})\n\nexport default EditorUI\n","import { action, observable } from \"mobx\";\n\n\n/**\n * Observable editor state.\n *\n * Created and kept outside react, modified by react.\n */\nexport default class EditorState\n{\n    /**\n     * Creates a new instance\n     *\n     * @param tiles     tiles array\n     */\n    constructor(tiles)\n    {\n        this.tiles = tiles;\n    }\n\n    @observable\n    visible = true;\n\n    @observable\n    dirty = false;\n\n    @observable\n    historyPos = 0;\n    @observable\n    historyEnd = 0;\n\n    @observable\n    activeTileIndex = 0;\n\n    @action.bound\n    toggleVisible(value = !this.visible)\n    {\n        this.visible = value;\n    }\n\n    @action\n    updateHistory(historyPos, historyEnd = null)\n    {\n        this.historyPos = historyPos;\n        if (historyEnd !== null)\n        {\n            this.historyEnd = historyEnd;\n        }\n    }\n\n\n    @action.bound\n    selectTile(tile)\n    {\n        this.activeTileIndex = tile;\n    }\n\n    @action\n    setDirty(dirty)\n    {\n        this.dirty = dirty;\n    }\n\n    get activeTile()\n    {\n        const { activeTileIndex, tiles } = this;\n        return tiles[activeTileIndex];\n    }\n}\n\n","import {\n    Color, Group,\n    Line,\n    LineBasicMaterial,\n    Mesh,\n    MeshBasicMaterial,\n    PlaneBufferGeometry,\n    Raycaster,\n    Vector3\n} from \"three\";\nimport { BufferGeometry } from \"three/src/core/BufferGeometry\";\nimport { TAU } from \"../constants\";\nimport { TILE_SIZE } from \"./Grid\";\n\nconst VALID_COLOR = new Color(\"#fff\");\nconst INVALID_COLOR = new Color(\"#ff3c78\");\n\nfunction createCursorGeometry()\n{\n    const lineMat = new LineBasicMaterial({\n        color: 0x000000,\n        linewidth: 1.5,\n        depthTest: false,\n        opacity: 0.5,\n        transparent: true\n    });\n\n    const points = [];\n    points.push(new Vector3(-0.5, 0, -0.5));\n    points.push(new Vector3(0.5, 0, -0.5));\n    points.push(new Vector3(0.5, 0, 0.5));\n    points.push(new Vector3(-0.5, 0, 0.5));\n    points.push(new Vector3(-0.5, 0, -0.5));\n\n    const border = new Line(\n        new BufferGeometry().setFromPoints(points),\n        lineMat\n    );\n\n    const insidePlane = new Mesh(\n        new PlaneBufferGeometry(\n            1,\n            1\n        ),\n        new MeshBasicMaterial({\n            color: 0xffffff,\n            depthTest: false,\n            opacity: 0.2,\n            transparent: true\n        })\n    );\n    insidePlane.rotation.x = -TAU / 4;\n\n    const cursor = new Group();\n    cursor.add(insidePlane)\n    cursor.add(border)\n\n    return cursor;\n}\n\n/**\n * Encapsulates the cursor 3D objects and hold the current selection position etc\n */\nexport default class Cursor\n{\n    constructor(scene, grid, editorState)\n    {\n        this.grid = grid;\n        this.editorState = editorState;\n\n        this.raycaster = new Raycaster();\n        this.material = 0;\n        this.current = null;\n\n        this.object = createCursorGeometry();\n        this.valid = false;\n\n        scene.add( this.object );\n\n    }\n\n    setValid(valid)\n    {\n        this.valid = !!valid;\n        this.object.children[0].material.color = valid ? VALID_COLOR : INVALID_COLOR;\n        this.object.children[0].material.opacity = valid ? 0.2 : 0.8;\n    }\n\n    update(mouse, camera)\n    {\n        const { grid, raycaster, object, editorState } = this;\n\n        raycaster.setFromCamera( mouse, camera );\n\n        const intersects = raycaster.intersectObjects( grid.group.children );\n\n        if (intersects.length > 0)\n        {\n\n            if (this.current !== intersects[0].object)\n            {\n\n                //if ( INTERSECTED ) INTERSECTED.material.emissive.setHex( INTERSECTED.currentHex );\n                this.current = intersects[0].object;\n                this.material = +this.current.name.substr(1);\n            }\n\n            const { point } = intersects[0];\n            const { sizeX, sizeY, sizeZ } = editorState.activeTile;\n\n            const matOff = this.material * 2;\n\n            const offX = grid.offsets[matOff];\n            const offY = grid.offsets[matOff + 1];\n\n            // pos on current material (0 to grid.size - cursor_size )\n            const x = Math.floor((point.x - offX ) / TILE_SIZE) + grid.size/2;\n            const y = Math.floor((point.z - offY ) / TILE_SIZE) + grid.size/2;\n\n            const valid =  x + sizeX <= grid.size && y + sizeZ <= grid.size;\n            this.setValid(valid);\n\n            const objectX = offX + (x - grid.size/2) * TILE_SIZE + sizeX / 2;\n            const objectY = offY + (y - grid.size/2) * TILE_SIZE + sizeZ / 2;\n\n            if (object.position.x !== objectX || object.position.z !== objectY)\n            {\n                //console.log(\"Material\", this.material, \"pos\", x, y)\n\n                this.x = x;\n                this.y = y;\n\n                object.position.set(\n                    objectX,\n                    0,\n                    objectY\n                );\n            }\n\n            this.object.visible = true;\n        }\n        else\n        {\n            this.object.visible = false;\n            this.valid = false;\n            this.current = null;\n        }\n\n    }\n}\n","/**\n * HTML5 Helper function to trigger a text file download from javascript\n *\n * @param {string} filename         default filename for the client\n * @param {string} text             text context\n * @param {String} [mediaType]      media type to export file as (default \"text/plain\")\n */\nexport default function (filename, text, mediaType = \"text/plain\")\n{\n    const element = document.createElement(\"a\");\n    element.setAttribute(\"href\", \"data:\" + mediaType+ \";charset=utf-8,\" + encodeURIComponent(text));\n    element.setAttribute(\"download\", filename);\n    element.style.display = \"none\";\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n}\n","import raf from \"raf\"\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\n// noinspection ES6UnusedImports\nimport STYLE from \"../style.css\"\nimport {\n    CubeCamera,\n    DirectionalLight,\n    MOUSE,\n    PerspectiveCamera,\n    Scene,\n    sRGBEncoding,\n    Vector2,\n    Vector3,\n    WebGLRenderer\n} from \"three\"\nimport loadScene from \"../util/loadScene\";\nimport { MATERIAL_NAMES } from \"../constants\";\nimport Grid, { TILE_SIZE } from \"./Grid\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { Sky } from \"three/examples/jsm/objects/Sky\";\nimport EditorUI from \"./EditorUI\";\nimport EditorState from \"./EditorState\";\nimport { configure, reaction } from \"mobx\";\nimport \"mobx-react-lite/batchingForReactDom\"\nimport Cursor from \"./Cursor\";\nimport TileInstance from \"./TileInstance\";\n\nimport inputData from \"../../input.json\"\nimport download from \"../util/download\";\nimport loadInstanceJSON from \"./loadInstanceJSON\";\nimport prepareTiles from \"./prepareTiles\";\n\n\nconst TAU = Math.PI * 2;\n\nconst GRID_SIZE = 12;\n\n//////////////////////////////////////////////////////////////////////\n\nconst LOCAL_STORAGE_KEY =\"@fforw/islands:data\"\n\nconst HISTORY_LIMIT = 32;\nlet container, stats, grid;\nlet camera, scene, renderer, light;\nlet controls, water;\n\nlet instances = new Set();\n\nlet materials, cursor;\n\nlet uiContainer;\n\nconst sidebarWidth = 220;\n\n\nconst skyParameters = {\n    distance: 1000,\n    inclination: 0.1,\n    azimuth: 0.1\n};\n\nlet cubeCamera, sky;\n\nfunction getWidth()\n{\n    return window.innerWidth - (editorState.visible ?  sidebarWidth : 0);\n}\n\n\nlet mouse = new Vector2(100,0)\nfunction onDocumentMouseMove( event ) {\n\n    event.preventDefault();\n\n    mouse.x = ( event.clientX / getWidth() ) * 2 - 1;\n    mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\n\n}\n\nfunction onWindowResize()\n{\n\n    camera.aspect = getWidth() / window.innerHeight;\n    camera.updateProjectionMatrix();\n\n    renderer.setSize(getWidth(), window.innerHeight);\n\n}\n\nfunction mainLoop()\n{\n    cursor.update(mouse, camera);\n\n    if (ghost)\n    {\n        ghost.rotation.y = TAU * rotation / 4;\n        ghost.position.copy(cursor.object.position);\n    }\n\n    render();\n\n    if (controls)\n    {\n        controls.update()\n    }\n    raf(mainLoop);\n\n}\n\n\nfunction render()\n{\n\n    const time = performance.now() * 0.0001;\n\n    // sphere.position.y = Math.sin( time ) * 5 + 1;\n    // sphere.rotation.x = time * 0.5;\n    // sphere.rotation.z = time * 0.51;\n\n    renderer.render(scene, camera);\n}\n\nconst tiles = [];\nlet envMap;\n\nfunction updateSun()\n{\n\n    if (!sky)\n    {\n        return;\n    }\n\n    const theta = Math.PI * (skyParameters.inclination - 0.5);\n    const phi = 2 * Math.PI * (skyParameters.azimuth - 0.5);\n\n    light.position.x = skyParameters.distance * Math.cos(phi);\n    light.position.y = skyParameters.distance * Math.sin(phi) * Math.sin(theta);\n    light.position.z = skyParameters.distance * Math.sin(phi) * Math.cos(theta);\n\n    sky.material.uniforms[\"sunPosition\"].value = light.position.copy(light.position);\n    water && water.material.uniforms[\"sunDirection\"].value.copy(light.position).normalize();\n\n    cubeCamera.update(renderer, sky);\n\n}\n\n\n\n\nfunction convertTimestamp(data)\n{\n    const { timestamp } = data;\n\n    if (typeof timestamp === \"string\")\n    {\n        data.timestamp = new Date(timestamp);\n    }\n}\n\n\nconvertTimestamp(inputData);\n\nfunction loadFromLocalStorage()\n{\n    const json = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (!json)\n    {\n        return null;\n    }\n\n    const data = JSON.parse(json);\n    convertTimestamp(data);\n    return data;\n}\n\n\n\n\nfunction loadInstances()\n{\n    let data = loadFromLocalStorage();\n\n    if (!data || data.timestamp.getTime() < inputData.timestamp.getTime())\n    {\n        console.info(\"Loading input JSON\");\n        data = inputData;\n    }\n    else\n    {\n        console.info(\"Loading from localStorage\");\n    }\n\n    return loadInstanceJSON(data, tiles, grid, instances, scene);\n}\n\nfunction getCurrentInstancesAsJSON()\n{\n    return JSON.stringify(\n        {\n            version: 1,\n            timestamp: new Date().toISOString(),\n            instances: [ ... instances].map( i => ({\n                name: i.tile.name,\n                position: [\n                    i.position.x,\n                    i.position.y,\n                    i.position.z\n                ],\n                material: i.material,\n                //indexes: i.indexes,\n                x: i.x,\n                y: i.y\n            }))\n        },\n        null,\n        4\n    );\n}\n\nlet history = [];\n\nlet timerId;\n\nfunction debouncedSync()\n{\n    editorState.setDirty(true);\n\n    if (timerId)\n    {\n        clearTimeout(timerId);\n        timerId = null;\n    }\n\n    timerId = setTimeout(sync, 1000);\n}\n\nfunction sync()\n{\n    timerId = null;\n    editorState.setDirty(false);\n    localStorage.setItem(LOCAL_STORAGE_KEY, getCurrentInstancesAsJSON())\n}\n\n\nfunction onCanvasClick(ev)\n{\n    const { activeTile } = editorState;\n\n    if (cursor.valid)\n    {\n        const instance = activeTile.id !== 0 ? new TileInstance(\n            scene,\n            activeTile,\n            ghost.position,\n            rotation,\n            cursor.material,\n            cursor.x,\n            cursor.y\n        ) : null;\n\n        const removed = [];\n\n        const indexes = grid.setTile(cursor.material, cursor.x, cursor.y, activeTile, rotation, offset => {\n\n            for (let curr of instances)\n            {\n                if (curr.indexes.indexOf(offset) >= 0)\n                {\n                    grid.clearTile(curr);\n                    curr.removeObject();\n                    removed.push(curr);\n                    instances.delete(curr)\n                    break;\n                }\n            }\n        })\n\n        if (instance)\n        {\n            instance.indexes = indexes;\n            instances.add(instance);\n        }\n        addHistoryEntry(instance, removed);\n\n\n        debouncedSync();\n\n    }\n}\n\nfunction addHistoryEntry(added, removed)\n{\n    const newEntry = {\n        added,\n        removed\n    };\n\n    let { historyPos, historyEnd } = editorState;\n\n    if (editorState.historyPos < HISTORY_LIMIT)\n    {\n        history[historyPos++] = newEntry;\n        historyEnd = historyPos;\n\n        editorState.updateHistory(historyPos, historyEnd)\n    }\n    else\n    {\n        for (let i = 0; i < historyPos; i++)\n        {\n            history[i] = history[i + 1];\n        }\n        history[historyPos] = newEntry;\n    }\n\n    //console.log(\"after addHistoryEntry: newEntry = \", newEntry, \"grid.data = \",grid.data, \"history = \", history)\n\n}\n\nfunction canRedo()\n{\n    const { historyPos, historyEnd } = editorState;\n    return historyPos < historyEnd;\n}\n\nfunction canUndo()\n{\n    const { historyPos } = editorState;\n    return historyPos > 0;\n}\n\nfunction redo()\n{\n    let { historyPos } = editorState;\n\n    if (canRedo())\n    {\n        //console.log(\"REDO\", history, historyPos)\n\n        const { added, removed } = history[historyPos++];\n\n        if (added)\n        {\n            grid.setTile(added.material, added.x, added.y, added.tile, added.rotation, true);\n            added.createObject();\n\n            instances.add(added)\n        }\n\n        if (removed)\n        {\n            for (let i = 0; i < removed.length; i++)\n            {\n                const instance = removed[i];\n                grid.clearTile(instance);\n                instance.removeObject();\n\n                instances.delete(instance)\n            }\n        }\n\n        debouncedSync();\n\n        editorState.updateHistory(historyPos);\n\n    }\n}\n\n\nfunction undo()\n{\n    if (canUndo())\n    {\n        //console.log(\"UNDO\")\n\n        let { historyPos } = editorState;\n\n\n        const { added, removed } = history[--historyPos];\n\n        if (added)\n        {\n            grid.clearTile(added);\n            added.removeObject();\n            instances.delete(added)\n        }\n\n        if (removed)\n        {\n            for (let i = 0; i < removed.length; i++)\n            {\n                const instance = removed[i];\n                grid.setTile(instance.material, instance.x, instance.y, instance.tile, instance.rotation, true);\n                instance.createObject();\n                instances.add(instance)\n            }\n        }\n\n        debouncedSync();\n\n        editorState.updateHistory(historyPos);\n\n    }\n}\n\n\nfunction onKeyDown(ev)\n{\n    const { keyCode } = ev;\n\n    if (keyCode === 82) // R / shift-R\n    {\n         rotation = (rotation + (ev.shiftKey ? 1 : -1)) & 3;\n    }\n    else if (keyCode === 90 && ev.ctrlKey) // ctrl+Z / ctrl+shift+Z\n    {\n        if (ev.shiftKey)\n        {\n            redo();\n        }\n        else\n        {\n            undo();\n        }\n    }\n\n}\n\n\nPromise.all([\n    loadScene(\"assets/ground.glb\"),\n    loadScene(\"assets/tiles.glb\").then( prepareTiles )\n])\n    .then(([ ground, _tiles  ]) => {\n\n        tiles.push(...  _tiles);\n\n        console.log({tiles});\n\n        materials = MATERIAL_NAMES.map(n => {\n            const kid = ground.scene.children.find(kid => kid.name === n);\n            if (!kid)\n            {\n                throw new Error(\"Could not find \" + n);\n            }\n            return kid.material;\n        })\n\n\n        //dump(_tiles.scene, \"_tiles: \")\n        //console.log(materials);\n\n\n        document.title += \" Rule Editor\"\n\n        container = document.getElementById(\"container\");\n\n        renderer = new WebGLRenderer();\n        renderer.setPixelRatio(window.devicePixelRatio);\n        renderer.setSize(getWidth(), window.innerHeight);\n\n        renderer.outputEncoding = sRGBEncoding\n\n        container.appendChild(renderer.domElement);\n\n        uiContainer = document.createElement(\"div\");\n        uiContainer.setAttribute(\"id\", \"root\");\n        container.appendChild(uiContainer)\n\n        scene = new Scene();\n\n        camera = new PerspectiveCamera(55, getWidth() / window.innerHeight, 1, 20000);\n        camera.up.set(0,1,0);\n\n        const dist = 35;\n\n        camera.position.set(-dist, dist, 0);\n        camera.lookAt(new Vector3(0,0,0));\n        camera.updateProjectionMatrix();\n\n        light = new DirectionalLight(\"#fff8d5\", 1.4);\n        scene.add(light);\n\n        cubeCamera = new CubeCamera(0.2, 1, 512);\n        // cubeCamera.renderTarget.texture.generateMipmaps = true;\n        // cubeCamera.renderTarget.texture.minFilter = LinearMipmapLinearFilter;\n\n        scene.background = cubeCamera.renderTarget;\n\n        sky = new Sky();\n\n        const uniforms = sky.material.uniforms;\n\n        // uniforms[\"turbidity\"].value = 5;\n        // uniforms[\"rayleigh\"].value = 1.2;\n        // uniforms[\"luminance\"].value = 1;\n        // uniforms[\"mieCoefficient\"].value = 0.05;\n        // uniforms[\"mieDirectionalG\"].value = 0.9;\n\n        envMap = cubeCamera.renderTarget.texture\n\n\n        updateSun();\n\n\n        // stats = new Stats();\n        // container.appendChild( stats.dom );\n\n        // GUI\n\n        //const gui = new GUI();\n\n        // const folder = gui.addFolder( \"Sky\" );\n        // folder.add( skyParameters, \"inclination\", 0, 0.5, 0.0001 ).onChange( updateSun );\n        // folder.add( skyParameters, \"azimuth\", 0, 1, 0.0001 ).onChange( updateSun );\n        // folder.open();\n        //\n        // const uniforms = water.material.uniforms;\n        //\n        // const folder = gui.addFolder( \"Water\" );\n        // folder.add( uniforms.distortionScale, \"value\", 0, 8, 0.1 ).name( \"distortionScale\" );\n        // folder.add( uniforms.size, \"value\", 0.1, 10, 0.1 ).name( \"size\" );\n        // folder.add( uniforms.alpha, \"value\", 0.9, 1, .001 ).name( \"alpha\" );\n        // folder.open();\n\n\n        // const { children } = _tiles.scene;\n        //\n        // for (let i = 1; i < children.length; i++)\n        // {\n        //     const child = children[i];\n        //     console.log(\"ADD\", child)\n        //     scene.add(child.clone());\n        // }\n\n        // const plane = new PlaneBufferGeometry(1000,1000,1,1);\n        //\n        // planeMesh = new Mesh(plane, materials[0]);\n        // planeMesh.rotation.x = TAU/4;\n        // scene.add(planeMesh)\n\n\n        controls = new OrbitControls(camera, renderer.domElement);\n        //controls.maxPolarAngle = Math.PI * 0.45;\n        controls.maxPolarAngle = Math.PI;\n        controls.target.set(0, 0, 0);\n        controls.minDistance = 0.0;\n        controls.maxDistance = 1500.0;\n        controls.enableDamping = true;\n        controls.dampingFactor = 0.02;\n        controls.mouseButtons = {\n            MIDDLE: MOUSE.ROTATE,\n            RIGHT: MOUSE.PAN\n        }\n        controls.update();\n\n        grid = new Grid( GRID_SIZE, scene, materials);\n        cursor = new Cursor(scene, grid, editorState);\n        cursor.update(mouse,camera)\n\n        document.addEventListener( 'mousemove', onDocumentMouseMove, false );\n        document.addEventListener( 'keydown', onKeyDown, false );\n\n        window.addEventListener(\"resize\", onWindowResize, false);\n        container.addEventListener(\"click\", onCanvasClick, false);\n\n        loadInstances()\n\n        editorState.selectTile(1);\n\n        renderUI().then(mainLoop);\n    })\n\n\n// set MobX configuration\nconfigure({\n    enforceActions: \"observed\"\n});\n\nconst editorState = new EditorState(tiles);\n\nreaction(\n    () => editorState.visible,\n    onWindowResize\n)\n\nlet ghost;\nlet rotation = 0;\n\nreaction(\n    () => editorState.activeTileIndex,\n    () => {\n\n        const { activeTile, activeTileIndex } = editorState;\n        cursor.object.scale.set(activeTile.sizeX,activeTile.sizeY,activeTile.sizeZ);\n\n\n        if (ghost)\n        {\n            disposeMaterials(ghost);\n            scene.remove(ghost);\n        }\n\n        if (activeTileIndex === 0)\n        {\n            ghost = null;\n        }\n        else\n        {\n            ghost = tiles[activeTileIndex].variants[0].clone();\n            ghost.scale.set(TILE_SIZE, TILE_SIZE, TILE_SIZE)\n            setOpacity(ghost,0.2)\n\n            ghost.rotation.y = TAU * rotation / 4;\n\n            console.log({ghost})\n            scene.add(ghost)\n        }\n        console.log(\"ACTIVE\", activeTile)\n    }\n)\n\nfunction setOpacity(o, v)\n{\n    if (o.material)\n    {\n        o.material = o.material.clone();\n\n        o.material.transparent = v < 1;\n        o.material.opacity = v;\n    }\n\n    const { children } = o;\n    if (children)\n    {\n        for (let i = 0; i < children.length; i++)\n        {\n            setOpacity(children[i], v);\n        }\n    }\n}\n\nfunction disposeMaterials(o)\n{\n    if (o.material)\n    {\n        o.material.dispose();\n    }\n\n    const { children } = o;\n    if (children)\n    {\n        for (let i = 0; i < children.length; i++)\n        {\n            disposeMaterials(children[i]);\n        }\n    }\n}\n\nfunction clearAll()\n{\n    for (let curr of instances)\n    {\n        curr.removeObject();\n        grid.clearTile(curr);\n    }\n    addHistoryEntry(null, [ ... instances ])\n    instances.clear();\n    debouncedSync();\n}\n\nfunction renderUI()\n{\n    return new Promise(\n        (resolve, reject) => {\n            try\n            {\n                ReactDOM.render(\n                    <EditorUI\n                        editorState={ editorState }\n                        clearAll={ clearAll }\n                        download={ () => {\n                            download(\"input.json\", getCurrentInstancesAsJSON(), \"text/json\");\n                        }}\n                        undo={ undo }\n                        canUndo={ canUndo }\n                        redo={ redo }\n                        canRedo={ canRedo }\n                    />,\n                    uiContainer,\n                    resolve\n                );\n\n            }\n            catch(e)\n            {\n                reject(e);\n            }\n        }\n    );\n}\n\n\nclass Output\n{\n    KEY = LOCAL_STORAGE_KEY;\n\n    download = download;\n\n    get grid()\n    {\n        return grid;\n    }\n}\n\nexport default new Output()\n","import { DoubleSide, Group, Mesh, PlaneBufferGeometry, Scene } from \"three\";\nimport { DIRT, TAU } from \"../constants\";\nimport { tileName } from \"../util/inputToWFC\";\n\nexport const TILE_SIZE = 1;\n\nexport const numMaterials = DIRT;\n\nexport default class Grid\n{\n    /**\n     * Construct a new material grid.\n     *\n     * @param {Number} size         edge length of one material field (int)\n     * @param {Scene} [scene]         three.js scene\n     * @param {Array} [materials]     array with materials\n     */\n    constructor(size, scene, materials)\n    {\n        this.scene = scene;\n        this.size = size;\n\n        this.data = new Float64Array(size * size * numMaterials)\n\n        const offsets = new Float64Array(numMaterials * 2);\n        this.offsets = offsets;\n\n\n        let x = -size*TILE_SIZE/2;\n        let y = -size*TILE_SIZE/2;\n\n        let dx = 0;\n        let dy = size * TILE_SIZE;\n\n        let index = 0;\n        let rotateEvery = 1;\n        let rotateCount = rotateEvery;\n        let flag = false;\n\n            const group = new Group();\n            group.name = \"MaterialGrid\"\n\n            for (let curr = 0; curr < numMaterials; curr++)\n            {\n                offsets[index++] = x;\n                offsets[index++] = y;\n\n                //console.log(\"MATERIAL #\", curr, \"at\", x, y);\n\n                if (scene)\n                {\n                    const geo = new PlaneBufferGeometry(TILE_SIZE * size, TILE_SIZE * size, 1, 1);\n                    const mat = materials[curr].clone();\n                    mat.side = DoubleSide;\n                    const mesh = new Mesh(geo, mat);\n                    mesh.name = \"M\" + curr;\n                    mesh.position.set(x, y, 0);\n                    //mesh.rotation.y = -Math.PI\n                    group.add(mesh);\n                }\n\n\n                x += dx;\n                y += dy;\n\n                if (--rotateCount === 0)\n                {\n                    const tmp = dx;\n                    dx = -dy;\n                    dy = tmp;\n\n                    if (flag)\n                    {\n                        rotateEvery++;\n                    }\n                    flag = !flag;\n\n                    rotateCount = rotateEvery;\n                }\n            }\n\n            group.rotation.x = TAU/4;\n\n        if (scene)\n        {\n            this.group = group;\n\n            scene.add(group);\n        }\n\n    }\n\n\n    /**\n     * Sets or clears a tile or multi-tile in the grid. The given position must be a valid location to set a tile of that size.\n     *\n     * @param {Number} material                 material index\n     * @param {Number} tx                       x-position in material\n     * @param {Number} ty                       y-position in material\n     * @param {TileDefinition} tile             tile definition\n     * @param {Number} rotation                 tile rotation 0-3\n     * @param {function|boolean} [cleanFn]      callback to clean other tiles from a given offset. If not given, the method will clear the multi tile on that offset\n     */\n    setTile(material, tx, ty, tile, rotation, cleanFn = null)\n    {\n        const { size : gridSize } = this;\n        const { sizeX, sizeZ } = tile;\n\n        const rotationIndex = rotation * 2;\n\n        let posX = tx + offsets[rotationIndex] * (sizeX - 1);\n        let posY = ty + offsets[rotationIndex + 1] * (sizeZ - 1);\n\n        const dx = directions[rotationIndex];\n        const dy = directions[rotationIndex + 1];\n\n        const matOff = material * gridSize * gridSize;\n\n        const clean = !cleanFn;\n        const indexes = !clean && new Uint32Array(sizeX * sizeZ);\n\n        // correction of line plus rotated vector\n        const lineDx = - dx * sizeX - dy;\n        const lineDy = - dy * sizeZ + dx;\n\n\n        let index = 0;\n        for (let y = 0; y < sizeZ; y++)\n        {\n            for (let x = 0; x < sizeX; x++)\n            {\n                const offset = matOff + posX + posY * gridSize;\n\n                const value = tile.pattern[y * sizeX + x];\n\n                if (clean)\n                {\n                    if (this.data[offset] === value)\n                    {\n                        this.data[offset] = 0;\n                    }\n                }\n                else\n                {\n                    if (this.data[offset] !== value)\n                    {\n                        if (typeof cleanFn === \"function\")\n                        {\n                            cleanFn(offset);\n                        }\n                    }\n                    indexes[index++] = offset;\n                    this.data[offset] = value;\n                }\n\n                posX += dx;\n                posY += dy;\n            }\n            posX += lineDx;\n            posY += lineDy;\n        }\n\n        return indexes;\n    }\n\n    clearTile(instance)\n    {\n        this.setTile(instance.material, instance.x, instance.y, instance.tile, instance.rotation, null);\n    }\n}\n\nconst offsets = [\n    0,0,\n    1,0,\n    1,1,\n    0,1\n]\n\nconst directions = [\n    1,0,\n    0,1,\n    -1,0,\n    0,-1\n]\n","import { Object3D } from \"three\"\n\n/**\n * @typedef {Object} TileDefinition\n *\n * @property {Array<Object3D>} variants         imported variants objects for this tile\n * @property {Number} id                        tile id. For multi-tiles the id of the upper left tile in rotation 0.\n * @property {Number} size                      tile size. default is 1\n * @property {HTMLCanvasElement} thumbnail      generated thumbnail as canvas\n *\n */\n\n\n\nexport const DEFAULT_TILES = {\n        \"cactus\": {\n            \"variants\": [\"cactus_short\", \"cactus_tall\"],\n            \"colors\" : [ \"#0c0\"]\n        },\n        \"flower\": {\n            \"variants\": [\n                \"flower_purpleA\",\n                \"flower_purpleB\",\n                \"flower_purpleC\",\n                \"flower_redA\",\n                \"flower_redB\",\n                \"flower_redC\",\n                \"flower_yellowA\",\n                \"flower_yellowB\",\n                \"flower_yellowC\"\n            ],\n            \"colors\" : [ \"#ff0\"]\n        },\n        \"stone_large\": {\n            \"variants\": [\"stone_largeD\", \"stone_largeE\", \"stone_largeF\"],\n            \"colors\" : [ \"#eee\"]\n        },\n        \"stone_small\": {\n            \"variants\": [\"stone_smallD\"],\n            \"colors\" : [ \"#888\"]\n        },\n        \"palm_tree\": {\n            \"variants\": [\"tree_palmDetailedTall\", \"tree_palmShort\", \"tree_palmTall\"],\n            \"colors\" : [ \"#8c0\"]\n        },\n        \"pine\": {\n            \"variants\": [\"tree_pineRoundD\", \"tree_pineTallC_detailed\", \"tree_pineTallD\"],\n            \"colors\" : [ \"#480\"]\n        },\n        \"tree_plateau\": {\n            \"variants\": [\"tree_plateau\"],\n            \"colors\" : [ \"#482\"]\n        },\n        \"tree_tall_dark\": {\n            \"variants\": [\"tree_tall_dark\"],\n            \"colors\" : [ \"#360\"]\n        },\n        \"tree_thin\": {\n            \"variants\": [\"tree_thin\"],\n            \"colors\" : [ \"#684\"]\n        },\n        \"house\": {\n            \"variants\": [\"House\"],\n            \"sizeX\" : 3,\n            \"sizeY\" : 2,\n            \"sizeZ\" : 3,\n            \"reachable\": true,\n            \"colors\" : [\"#f00\"],\n\n            \"idCount\" : 1,\n\n            /**\n             * Complex pattern (negative values are local ids: -1 = id, -2 = id +1 etc)\n             */\n            \"pattern\" : [\n                0, 0, 0,\n                0,-1, 0,\n                0, 0, 0\n            ]\n        },\n        // \"cube\": {\n        //     \"variants\": [\"tree_thin\"],\n        //     \"colors\" : [ \"#684\"]\n        // },\n    }\n;\n\n","import { DEFAULT_TILES } from \"./default-tiles\";\nimport threeJsThumbnailer from \"../util/threeJsThumbnailer\";\n\n\nexport function getMaxId(tiles)\n{\n    return tiles[tiles.length - 1].id + tiles[tiles.length - 1].idCount;\n}\n\nfunction createEmptyThumbnail()\n{\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = thumbnailWidth;\n    canvas.height = thumbnailHeight;\n    const ctx = canvas.getContext(\"2d\");\n\n    ctx.lineWidth = 4;\n    ctx.strokeStyle = \"rgba(255,64,64,0.5)\";\n    ctx.fillStyle = \"#fff\";\n\n    const hw = thumbnailWidth * 0.5;\n    const hh = thumbnailHeight * 0.5;\n    const size = Math.min(hh,hw) * 0.3;\n\n    ctx.beginPath();\n    ctx.moveTo(-size + hw,-size + hh);\n    ctx.lineTo( size + hw, size + hh);\n    ctx.moveTo( size + hw,-size + hh);\n    ctx.lineTo(-size + hw, size + hh);\n    ctx.rect(0,0,thumbnailWidth,thumbnailHeight)\n    ctx.stroke();\n\n    ctx.fillText(\"None\", 4, thumbnailHeight - 4);\n    return canvas;\n}\n    \nconst thumbnailWidth = 40;\nconst thumbnailHeight = thumbnailWidth / 0.75;\n\nexport default function prepareTiles(tilesGLTF)\n{\n    const tiles = [];\n\n    let pos = 0;\n    for (let name in DEFAULT_TILES)\n    {\n        if (DEFAULT_TILES.hasOwnProperty(name))\n        {\n            const raw = DEFAULT_TILES[name];\n            const { variants, sizeX = 1, sizeY = 1, sizeZ = 1 } = raw;\n            tiles[pos] = {\n                id: -1,\n                name,\n                ... raw,\n                variants: tilesGLTF ? tilesGLTF.scene.children.filter(o => variants.indexOf(o.name) >= 0) : variants,\n                pattern: raw.pattern ? raw.pattern.slice() : null,\n                idCount: raw.idCount || 1,\n                sizeX,\n                sizeY,\n                sizeZ,\n                reachable: raw.reachable || false,\n                thumbnail: null\n            };\n            pos++;\n        }\n    }\n\n    tiles.sort((a, b) => a.name === b.name ? 0 : a.name < b.name ? -1 : 1);\n\n    // provide ids\n    let idCounter = 1;\n    tiles.forEach(t => {\n\n        const { name, idCount, pattern, sizeX, sizeZ } = t;\n\n        t.id = idCounter;\n        idCounter += idCount;\n\n        if (t.pattern)\n        {\n            if (!pattern || !Array.isArray(pattern))\n            {\n                throw new Error(\"Tile '\" + name + \"': tiles with idCount > 1 must define a pattern\");\n            }\n\n            const size = sizeX * sizeZ;\n            if (pattern.length !== size)\n            {\n                throw new Error(\"Tile '\" + name + \"': Pattern must be \" + sizeX + \" x \" + sizeZ + \" = \" + size + \" elements long: \" + pattern);\n            }\n\n            for (let i = 0; i < pattern.length; i++)\n            {\n                // if the pattern in the JSON is negative\n                if (pattern[i] < 0)\n                {\n                    // we use the local id backwards starting with -1 basically\n                    pattern[i] = -pattern[i] - 1 + t.id;\n                }\n\n            }\n        }\n        else\n        {\n            // create 1x1 \"pattern\"\n            t.pattern = [ t.id ];\n        }\n    });\n\n    if (tilesGLTF)\n    {\n        const thumbNames = [];\n        const objects = [];\n\n        tiles.forEach((t, idx) => {\n            thumbNames[idx] = t.name;\n            objects[idx] = t.variants[0];\n        });\n\n        //console.log({objects, thumbNames, tiles})\n\n        return threeJsThumbnailer(\n            objects,\n            thumbnailWidth,\n            thumbnailHeight,\n            thumbNames\n        ).then(thumbnails => {\n\n            thumbnails.forEach((th, idx) => tiles[idx].thumbnail = th);\n\n            tiles.unshift({\n                id: 0,\n                name: \"empty\",\n                variants: [],\n                idCount: 1,\n                sizeX: 1,\n                sizeY: 0.1,\n                sizeZ: 1,\n                thumbnail: createEmptyThumbnail(),\n                pattern: [0]\n            });\n\n            return tiles;\n        })\n    }\n    else\n    {\n        tiles.unshift({\n            id: 0,\n            name: \"empty\",\n            variants: [],\n            idCount: 1,\n            sizeX: 1,\n            sizeY: 0.1,\n            sizeZ: 1,\n            reachable:false,\n            colors: [\"#000\"],\n            thumbnail: null\n        });\n\n\n        return tiles;\n    }\n\n}\n","import { Box3, Color, DirectionalLight, Object3D, PerspectiveCamera, Scene, Vector3, WebGLRenderer } from \"three\"\n\n\n\n/**\n * Takes an array of three.js objects and resolves to an array of#\n * canvases containing thumbnails\n *\n * @param {Array<Object3D>} objects     array of objects\n * @param {Number} width                thumbnail image width\n * @param {Number} height               thumbnail image height\n * @param {Array<String>} [names]        optional array of names\n * @return {Promise<Array<HTMLCanvasElement>>}\n */\nexport default function threeJsThumbnailer(objects, width, height, names) {\n    return new Promise(\n        resolve => {\n\n            const canvases = [];\n\n            const container = document.createElement(\"div\");\n            document.body.appendChild(container)\n            container.style.position = \"absolute\";\n            container.style.top = \"0px\";\n            container.style.left = \"-10000px\";\n\n            const renderer = new WebGLRenderer({\n                alpha: true\n            });\n            renderer.setPixelRatio(window.devicePixelRatio);\n            renderer.setSize(width, height);\n\n            container.appendChild(renderer.domElement);\n\n            const scene = new Scene();\n            //scene.background = new Color(\"#888\")\n\n            const camera = new PerspectiveCamera(55, width / height, 0.1, 100);\n\n            const light = new DirectionalLight(\"#fff8d5\", 1.4);\n            light.position.set(0, 3, -1.5)\n            scene.add(light);\n\n            const images = [];\n\n            let current;\n            for (let i = 0; i < objects.length; i++)\n            {\n                if (current)\n                {\n                    scene.remove(current)\n                }\n\n                current = objects[i].clone();\n\n                const box = new Box3();\n                box.expandByObject(current)\n\n                const size = Math.max(\n                    box.max.x - box.min.x,\n                    box.max.y - box.min.y\n                )\n\n                const isSmall = size < 1.5;\n                const dist = isSmall ? Math.pow(size, 0.9) * 1.2 : size * 1.5;\n                camera.up.set(0, 1, 0);\n\n                //console.log(current.name, direction, box)\n                camera.position.set(0, box.max.y * (isSmall ? 1.1 : 0.9), -dist);\n                camera.lookAt(new Vector3(0, (box.max.y + box.min.y) / (isSmall ? 2 : 4), 0));\n                camera.updateProjectionMatrix();\n\n                current.position.set(0, 0, 0)\n                scene.add(current);\n\n                renderer.render(scene, camera);\n\n                const copy = document.createElement(\"canvas\")\n\n                copy.width = width;\n                copy.height = height;\n\n                const ctx = copy.getContext(\"2d\");\n                ctx.drawImage(\n                    renderer.domElement,\n                    0,0\n                );\n                ctx.strokeStyle = \"rgba(255,255,255,0.4)\";\n                ctx.fillStyle = \"#fff\";\n                ctx.lineWidth = 2;\n                ctx.beginPath();\n                ctx.rect(0,0,width, height)\n                ctx.stroke();\n\n                const thumbName = names ? names[i] : current.name;\n                ctx.fillText(thumbName, 4, height - 4)\n\n\n                // const img = new Image();\n                // img.src = renderer.domElement.toDataURL();\n                //\n                // images.push(img);\n                images.push(copy);\n            }\n\n            resolve(images);\n\n            scene.dispose();\n            renderer.dispose();\n\n            document.body.removeChild(container)\n        }\n    )\n}\n","\n// Instantiate a loader\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\n\nconst loader = new GLTFLoader();\n\nexport default function(url, onProgress = null)\n{\n    return new Promise(((resolve, reject) => {\n        // Load a glTF resource\n        loader.load(\n            // resource URL\n            url,\n            // called when the resource is loaded\n            resolve,\n            // called while loading is progressing\n            onProgress,\n            // called when loading has errors\n            reject\n        );\n\n    }))\n}\n","import Grid, { numMaterials } from \"../editor/Grid\";\nimport loadInstanceJSON from \"../editor/loadInstanceJSON\";\nimport { MATERIAL_NAMES } from \"../constants\";\nimport { getMaxId } from \"../editor/prepareTiles\";\n\n\n\nexport function tileName(tiles, tileId)\n{\n    for (let i = 0; i < tiles.length; i++)\n    {\n        const { name, id, idCount} = tiles[i];\n\n        if (tileId === id)\n        {\n            return name;\n        }\n\n        if (tileId > id && tileId < id + idCount)\n        {\n            return name + \"-\" + (tileId - id + 1);\n        }\n    }\n\n    if (isNaN(tileId))\n    {\n        debugger;\n    }\n\n    return \"ERR:\" + tileId;\n}\n\nlet tmpMask;\n\n\n\n\nexport default function inputToWFC(inputData, size, tiles, weightTargets)\n{\n    const maxId = getMaxId(tiles);\n\n    // how many ints do we need to express a bitmask of with all possible tile states?\n    const numInts = (maxId + 31) >> 5;\n\n    if (!tmpMask || tmpMask.length < numInts)\n    {\n        tmpMask = new Uint32Array(numInts);\n    }\n\n    const grid = new Grid(size);\n    loadInstanceJSON(inputData, tiles, grid);\n\n    let index = 0;\n    const last = size - 1;\n\n    const  add = (adjacencies, mat, tileA, tileB) =>\n    {\n        const index = tileB >> 5;\n        const bit = 1 << (tileB - (index << 5));\n\n        const offset = mat * numEntries * numInts + tileA * numInts + index;\n        const value = adjacencies[offset ];\n        const changed = value | bit;\n        if (value !== changed)\n        {\n            adjacencies[offset ] = changed;\n\n            //console.log(MATERIAL_NAMES[mat], \":\", tileName(tiles, tileA), \" -> \", tileName(tiles, tileB), { index, bit} )\n        }\n    }\n\n    const numEntries = maxId + 1;\n\n    const numWeights = numMaterials * numEntries;\n    const weights = new Uint32Array( numWeights);\n\n    const numAdjacencies = numMaterials * numEntries * numInts;\n    const adjacencies = new Uint32Array(numAdjacencies);\n\n    for (let mat = 0; mat < numMaterials; mat++)\n    {\n        for (let y=0; y < size; y++)\n        {\n            for (let x = 0; x < size; x++)\n            {\n                const tileId = grid.data[index];\n\n                if (tileId !== 0)\n                {\n                    weights[mat * numEntries + 1 + tileId]++;\n                }\n\n                const top = y === 0 ? 0 : grid.data[index - size];\n                const right = x === last ? 0 : grid.data[index + 1];\n                const bottom = y === last ? 0 : grid.data[index + size];\n                const left = x === 0 ? 0 : grid.data[index - 1];\n\n                add(adjacencies, mat, tileId, top)\n                add(adjacencies, mat, tileId, right)\n                add(adjacencies, mat, tileId, bottom)\n                add(adjacencies, mat, tileId, left)\n                index++;\n            }\n        }\n    }\n\n\n    index = 0;\n    for (let i=0; i < numMaterials; i++)\n    {\n        tmpMask.fill(0)\n        let sum = 0;\n        for (let j = 0; j < maxId; j++)\n        {\n            const value = weights[index + 1 + j];\n            if (value > 0 || j === 0)\n            {\n                sum += value;\n\n                const index = j >> 5;\n                const bit = 1 << (j - (index << 5));\n                tmpMask[index] |= bit;\n            }\n        }\n        const offset = i * numEntries * numInts + maxId * numInts;\n\n        if (sum === 0)\n        {\n            weights[index + 1] = 1;\n            weights[index] = 1;\n\n            tmpMask[0] |= 1;\n\n        }\n        else\n        {\n            const r = weightTargets[i] / ( 1- weightTargets[i])\n\n            const emptyWeight = sum * r;\n            weights[index + 1] = emptyWeight;\n            weights[index] = sum + emptyWeight;\n        }\n\n        adjacencies.set(tmpMask, offset);\n\n        index += numEntries\n    }\n\n\n    return {\n        weights,\n        adjacencies\n    };\n}\n"],"sourceRoot":""}