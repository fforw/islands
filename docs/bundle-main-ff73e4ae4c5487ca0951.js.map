{"version":3,"sources":["webpack://Demo/webpack/bootstrap","webpack://Demo/../src/index.js","webpack://Demo/../src/vector.js","webpack://Demo/./src/index.js","webpack://Demo/./src/loadScene.js","webpack://Demo/./src/loadTexture.js","webpack://Demo/./src/style.css"],"names":["f_x0","f_y0","f_x1","f_y1","f_x2","f_y2","f_x3","f_y3","f_count","f_outmostEdge","f_size","g_x","g_y","g_isEdge","g_count","g_edge0","g_edge1","g_edge2","g_edge3","g_edge4","g_edge5","g_size","t_n0","t_n1","t_n2","t_n3","t_isEdge","t_tile0","t_tile1","t_tile2","t_tile3","t_size","TAU","Math","SIXTH","limit","DEFAULT_CONFIG","width","height","numberOfRings","removeEdges","animatedEasing","renderFirstPassEdges","debug","weightFunction","dx","x1","dy","y1","edgeLength","maxIterations","animating","minTension","config","calculateNumberOfFaces","DIRECTIONS","Vector","faces","off","count","numTris","i","v0","v1","v2","pos","j","isOutmost","out","index","edge","length","stack","outmostEdge","targetIsOutmostFace","scaled","tmp","getEdgeStack","console","stackPos","eraseEdgesOfFaceInStack","success","code","x0","y0","findOtherEdge","otherIndex","otherEdge","x2","y2","outMostEdge","otherIsOutmostTri","tris","quads","tiles","numConnections","n0","n1","k","otherNode0","otherNode1","otherNode2","otherNode3","firstPassLen","numNodes","calculateNumNodes","nodes","tilePos","insertNode","isEdge","addTile","insertEdge","found","other","connect","firstEdgeIsOutmost","secondEdgeIsOutmost","m0x","m0y","m1x","m1y","m2x","m2y","cx","cy","n2","n3","n4","n5","n6","x3","y3","m3x","m3y","n7","n8","newTiles","connectTiles","graph","tension","edgeCount","centerX","centerY","sumWeight","weight","OrganicQuads","ctx","hw","hh","outerCount","relaxWeighted","updateConfig","createHexagonTriangles","start","removeRandomEdges","subdivide","sqrt","x","y","n","targetLength","EFFECTS","MAX_HEIGHT","QUARTER_HEIGHT","NOISE_SCALE","CLIFF_THRESHOLD","RANDOM_FACTOR","SIZE","FLAT_DISTANCE","DISTANCE_TO_ANGLE_FACTOR","PI","WATER","SAND","GRASS","DIRT","FOREST","STONE","GROUND_COLORS","container","stats","camera","scene","renderer","light","controls","water","sphere","td_cx","td_cy","td_cut0","td_cut1","td_cut2","td_cut3","td_size","tileData","heightMap","updateCentroids","organicQuads","tileDataPos","envMap","heightFn","z0","distance","heightLimit","cos","noise","noise2D","random","tmpHeight","Float64Array","cutCliffs","map","insert","a","b","h","key","v","undefined","heightIndexFactor","h_size","tileDataFactor","tileDataIndex","tileDataIndex0","tileDataIndex1","tileDataIndex2","tileDataIndex3","cutMask","abs","heightMapIndex","h_height","h_ground","log","JSON","stringify","findEdgeIndex","Error","walkRecursive","tileIndex","visited","has","add","tile0","tile1","tile2","tile3","ground","testWalkability","Set","createScene","graphUserData","SimplexNoise","checkNaN","value","msg","isNaN","addHeightMap","geometry","BufferGeometry","name","vertices","normals","colors","size","segments","halfSize","segmentSize","UNDEFINED_COLOR","getColor","hIdx","heightIndex0","heightIndex1","heightIndex2","heightIndex3","z1","z2","z3","ax","ay","az","bx","by","bz","cz","n0x","n0y","n0z","n1x","n1y","n1z","nx","ny","nz","f","push","col0","col1","col2","col3","setAttribute","Float32BufferAttribute","material","MeshStandardMaterial","vertexColors","side","FrontSide","roughness","mesh","Mesh","position","set","init","document","getElementById","WebGLRenderer","setPixelRatio","window","devicePixelRatio","setSize","innerWidth","innerHeight","appendChild","domElement","Scene","PerspectiveCamera","DirectionalLight","cubeCamera","CubeCamera","renderTarget","texture","generateMipmaps","minFilter","LinearMipmapLinearFilter","background","waterGeometry","PlaneBufferGeometry","Water","textureWidth","textureHeight","waterNormals","alpha","sunDirection","clone","normalize","sunColor","waterColor","distortionScale","fog","rotation","color","parameters","inclination","azimuth","sky","Sky","uniforms","updateSun","theta","phi","sin","z","copy","update","OrbitControls","maxPolarAngle","target","minDistance","maxDistance","enableDamping","dampingFactor","addEventListener","onWindowResize","aspect","updateProjectionMatrix","mainLoop","render","raf","time","performance","now","extractMarchingSquares","children","Map","kid","indexOf","Promise","all","loadScene","loadTexture","then","marchingSquares","marchingSquaresRaised","tWaterNormals","dump","obj","level","type","nextLevel","wrapS","wrapT","RepeatWrapping","loader","GLTFLoader","url","onProgress","resolve","reject","load","TextureLoader"],"mappings":"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","file":"bundle-main-ff73e4ae4c5487ca0951.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"main\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonpDemo\"] = window[\"webpackJsonpDemo\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./src/index.js\",\"vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import now from \"performance-now\"\nimport Vector from \"./vector\";\n\nexport const f_x0 = 0;\nexport const f_y0 = 1;\nexport const f_x1 = 2;\nexport const f_y1 = 3;\nexport const f_x2 = 4;\nexport const f_y2 = 5;\nexport const f_x3 = 6;\nexport const f_y3 = 7;\nexport const f_count = 8;\nexport const f_outmostEdge = 9;\nexport const f_size = 10;\n\nexport const g_x = 0;\nexport const g_y = 1;\nexport const g_isEdge = 2;\nexport const g_count = 3;\nexport const g_edge0 = 4;\nexport const g_edge1 = 5;\nexport const g_edge2 = 6;\nexport const g_edge3 = 7;\nexport const g_edge4 = 8;\nexport const g_edge5 = 9;\nexport const g_size = 10;\n\n\nexport const t_n0 = 0;\nexport const t_n1 = 1;\nexport const t_n2 = 2;\nexport const t_n3 = 3;\nexport const t_isEdge = 4;\nexport const t_tile0 = 5;\nexport const t_tile1 = 6;\nexport const t_tile2 = 7;\nexport const t_tile3 = 8;\nexport const t_size = 9;\n\nconst TAU = Math.PI * 2;\n\nconst SIXTH = TAU / 6;\n\nfunction calculateNumberOfFaces(limit)\n{\n    return 6 * (limit + 1) * (limit + 1);\n}\n\n\nconst DEFAULT_CONFIG = {\n    /** coordinate width */\n    width: 0,\n    /** coordinate height */\n    height: 0,\n    /** number of rings in the hexagon / number of base intersections of hexaxgon */\n    numberOfRings: 5,\n    /** how many percent of the edges shall we attempt to remove? */\n    removeEdges: 50,\n\n    /** if true, the graph will be layouted a bit with every render. If false, the graph relaxation happens at creation */\n    animatedEasing: true,\n\n    /** Set to true to render the original triangles, set to \"merged\" to render the merged triangles before subdivision */\n    renderFirstPassEdges: false,\n\n     /** Set to true to enable some debug logging */\n    debug : false,\n\n    weightFunction : (x0,y0,x1,y1) => {\n        const dx = x1 - x0;\n        const dy = y1 - y0;\n        return Math.sqrt(dx * dx + dy * dy);\n    },\n\n    /// MOSTLY INTERNAL CONFIG ////\n    \n    // calculated internally to match the height\n    edgeLength: 80,\n    // number of iterations until we give up (we will drop out due to having reached low energy most likely much sooner)\n    maxIterations: 100,\n    // set to false if the graph is done animated on animatedEasing : true\n    animating: true,\n\n    // Minimum energy at which we stop relaxing the graph\n    minTension: 2\n};\n\nfunction updateConfig(config)\n{\n    config.numFaces = calculateNumberOfFaces(config.numberOfRings)\n    config.firstPassLen = config.numFaces * f_size\n    config.firstPassNumEdges = config.numFaces * 3\n    config.edgeLength = ( Math.min(config.width, config.height) / (config.numberOfRings * 2 + 2)) | 0;\n    config.animating = config.animatedEasing;\n    config.relaxCount = 0;\n}\n\n\nfunction createHexagonTriangles(config)\n{\n\n    const limit = config.numberOfRings;\n\n    //console.log(\"createHexagonTriangles\", limit);\n\n    const DIRECTIONS = [\n        new Vector(\n            Math.cos(0) * config.edgeLength,\n            Math.sin(0) * config.edgeLength\n        ),\n        new Vector(\n            Math.cos(SIXTH) * config.edgeLength,\n            Math.sin(SIXTH) * config.edgeLength\n        ),\n        new Vector(\n            Math.cos(SIXTH * 2) * config.edgeLength,\n            Math.sin(SIXTH * 2) * config.edgeLength\n        ),\n        new Vector(\n            Math.cos(SIXTH * 3) * config.edgeLength,\n            Math.sin(SIXTH * 3) * config.edgeLength\n        ),\n        new Vector(\n            Math.cos(SIXTH * 4) * config.edgeLength,\n            Math.sin(SIXTH * 4) * config.edgeLength\n        ),\n        new Vector(\n            Math.cos(SIXTH * 5) * config.edgeLength,\n            Math.sin(SIXTH * 5) * config.edgeLength\n        )\n    ];\n\n    const faces = new Float64Array(config.firstPassLen);\n\n    let off = 0;\n\n    let count = 0;\n    let numTris = 1;\n    do\n    {\n        for (let i = 0; i < 6; i++)\n        {\n            const v0 = DIRECTIONS[i];\n            const v1 = DIRECTIONS[(i + 1) % 6];\n            const v2 = DIRECTIONS[(i + 2) % 6];\n\n            let pos = v0.copy().scale(count);\n\n            for (let j = 0; j < numTris; j++)\n            {\n                if (j & 1)\n                {\n                    faces[off + f_x0] = (pos.x) | 0;\n                    faces[off + f_y0] = (pos.y) | 0;\n                    faces[off + f_x1] = (pos.x + v1.x) | 0;\n                    faces[off + f_y1] = (pos.y + v1.y) | 0;\n                    faces[off + f_x2] = (pos.x + v2.x) | 0;\n                    faces[off + f_y2] = (pos.y + v2.y) | 0;\n                    faces[off + f_count] = 3;\n                    faces[off + f_outmostEdge] = -1;\n\n                    off += f_size;\n\n                    pos.add(v2);\n                }\n                else\n                {\n\n                    // All tris in the last row all have their edge #1 on the outer edge of the big hexagon\n                    const isOutmost = count === limit;\n\n                    faces[off + f_x0] = (pos.x) | 0;\n                    faces[off + f_y0] = (pos.y) | 0;\n                    faces[off + f_x1] = (pos.x + v0.x) | 0;\n                    faces[off + f_y1] = (pos.y + v0.y) | 0;\n                    faces[off + f_x2] = (pos.x + v1.x) | 0;\n                    faces[off + f_y2] = (pos.y + v1.y) | 0;\n                    faces[off + f_count] = 3;\n                    faces[off + f_outmostEdge] = isOutmost ? 1 : -1;\n\n                    off += f_size;\n                }\n            }\n        }\n\n        numTris += 2;\n\n    } while (count++ < limit);\n\n    return faces;\n}\n\n\nfunction findOtherEdge(faces, x0, y0, x1, y1, index, out)\n{\n    for (let i = 0; i < faces.length; i += f_size)\n    {\n        if (i === index)\n        {\n            continue;\n        }\n\n        // console.log(\"find\", x0, y0, x1, y1, \":\",\n        //     faces[i + f_x0], faces[i + f_y0],\n        //     faces[i + f_x1], faces[i + f_y1],\n        //     faces[i + f_x2], faces[i + f_y2],\n        //     faces[i + f_x3], faces[i + f_y3],\n        // );\n\n        const count = faces[i + f_count];\n        if (\n            faces[i + f_x0] === x1 && faces[i + f_y0] === y1 &&\n            faces[i + f_x1] === x0 && faces[i + f_y1] === y0\n        )\n        {\n            out.index = i;\n            out.edge = 0;\n            return;\n        }\n        if (\n            faces[i + f_x1] === x1 && faces[i + f_y1] === y1 &&\n            faces[i + f_x2] === x0 && faces[i + f_y2] === y0\n        )\n        {\n            out.index = i;\n            out.edge = 1;\n            return;\n        }\n\n        if (count === 3)\n        {\n            if (\n                faces[i + f_x2] === x1 && faces[i + f_y2] === y1 &&\n                faces[i + f_x0] === x0 && faces[i + f_y0] === y0\n            )\n            {\n                out.index = i;\n                out.edge = 2;\n                return;\n            }\n        }\n        else\n        {\n            if (\n                faces[i + f_x2] === x1 && faces[i + f_y2] === y1 &&\n                faces[i + f_x3] === x0 && faces[i + f_y3] === y0\n            )\n            {\n                out.index = i;\n                out.edge = 2;\n                return;\n            }\n\n            if (\n                faces[i + f_x3] === x1 && faces[i + f_y3] === y1 &&\n                faces[i + f_x0] === x0 && faces[i + f_y0] === y0\n            )\n            {\n                out.index = i;\n                out.edge = 3;\n                return;\n            }\n\n        }\n    }\n\n    out.index = -1;\n}\n\n\nconst out = {index: -1, edge: 0};\n\n\nfunction getEdgeStack(config, faces)\n{\n    const length = config.numFaces * 3;\n    const stack = new Int32Array(length);\n\n    let pos = 0;\n    for (let i = 0; i < config.firstPassLen; i += f_size)\n    {\n        const outmostEdge = faces[i + f_outmostEdge];\n\n        const targetIsOutmostFace = outmostEdge >= 0;\n        // we can't remove any of the outmost edges around the big hexagon (and we avoid having an edge triange as\n        // first merged triangle to simplify edge removal\n        if (!targetIsOutmostFace)\n        {\n            const scaled = i << 2;\n            stack[pos++] = scaled ;\n            stack[pos++] = scaled + 1;\n            stack[pos++] = scaled + 2;\n        }\n    }\n\n    // fisher-yates shuffle the stack\n    for (let i  = 0; i < pos - 2; i++)\n    {\n        const j = i + ((Math.random() * pos - i - 1)|0)\n        const tmp = stack[i];\n        stack[i] = stack[j];\n        stack[j] = tmp;\n    }\n    return stack.slice(0, pos);\n}\n\n\nfunction removeRandomEdges(config, faces)\n{\n    const count = (config.firstPassNumEdges * config.removeEdges / 100)|0;\n\n    //console.log(\"remove attempts\", count);\n\n    const stack = getEdgeStack(config, faces);\n\n    if (config.debug)\n    {\n        console.log(\"Shuffled stack\", [ ... stack.slice() ])\n    }\n\n    let stackPos = 0;\n\n\n    const eraseEdgesOfFaceInStack = index => {\n\n        for (let i = stackPos; i < stack.length; i++)\n        {\n            if ((stack[i] >>> 2) === index)\n            {\n                stack[i] = -1;\n            }\n        }\n    }\n\n\n\n    let success = 0;\n\n    // function printEdge(faces, otherIndex, outMostEdge)\n    // {\n    //     const count = faces[otherIndex + f_count];\n    //     const x0 = faces[otherIndex + outMostEdge * 2]\n    //     const y0 = faces[otherIndex + outMostEdge * 2 + 1]\n    //     const x1 = outMostEdge === count -1 ? faces[otherIndex] : faces[otherIndex + (outMostEdge + 1) * 2]\n    //     const y1 = outMostEdge === count -1 ? faces[otherIndex + 1] : faces[otherIndex + (outMostEdge + 1) * 2 + 1]\n    //\n    //\n    //     return x0 + \",\" + y0 + \",\" + x1 + \",\" + y1;\n    // }\n\n    for (let i = 0; i < count; i++)\n    {\n        let code;\n        do\n        {\n            if (stackPos === stack.length)\n            {\n                if (config.debug)\n                {\n                    config.debug && console.log(\"Ran out of removal candidates after successfully removing\", success, \"out of\", count);\n                }\n                // no more valid removals\n                return;\n            }\n            code = stack[stackPos++];\n        } while (code === -1);\n\n\n        const index = code >> 2;\n        const edge = code & 3;\n\n        const x0 = faces[index + edge * 2];\n        const y0 = faces[index + edge * 2 + 1];\n        const x1 = edge === 2 ? faces[index + f_x0] : faces[index + (edge + 1) * 2];\n        const y1 = edge === 2 ? faces[index + f_y0] : faces[index + (edge + 1) * 2 + 1];\n\n        findOtherEdge(faces, x0, y0, x1, y1, index, out)\n        if (out.index >= 0 && faces[out.index + f_count] === 3)\n        {\n            const {index: otherIndex, edge: otherEdge} = out;\n            const x2 = edge === 0 ? faces[index + f_x2] : faces[index + (edge - 1) * 2];\n            const y2 = edge === 0 ? faces[index + f_y2] : faces[index + (edge - 1) * 2 + 1];\n\n            // check if we're merging with an outmost face\n            const outMostEdge = faces[otherIndex + 9];\n            const otherIsOutmostTri = outMostEdge >= 0;\n\n            //const before = printEdge(faces, otherIndex, outMostEdge)\n            // if (otherIsOutmostTri)\n            // {\n            //     console.log(\"OUTMOST edge before split\", printEdge(faces, otherIndex, outMostEdge),\"EDGE CASE\", otherEdge, \"outMostEdge\", outMostEdge)\n            //     console.log(\"face before\", faces.slice(otherIndex, otherIndex + f_size))\n            // }\n\n            faces[otherIndex + 8] = 4;\n            switch (otherEdge)\n            {\n                case 2:\n                    faces[otherIndex + f_x3] = x2;\n                    faces[otherIndex + f_y3] = y2;\n                    break;\n                case 1:\n                    faces[otherIndex + f_x3] = faces[otherIndex + f_x2];\n                    faces[otherIndex + f_y3] = faces[otherIndex + f_y2];\n                    faces[otherIndex + f_x2] = x2;\n                    faces[otherIndex + f_y2] = y2;\n                    break;\n                case 0:\n                    faces[otherIndex + f_x3] = faces[otherIndex + f_x2];\n                    faces[otherIndex + f_y3] = faces[otherIndex + f_y2];\n                    faces[otherIndex + f_x2] = faces[otherIndex + f_x1];\n                    faces[otherIndex + f_y2] = faces[otherIndex + f_y1];\n                    faces[otherIndex + f_x1] = x2\n                    faces[otherIndex + f_y1] = y2;\n\n                    if (otherIsOutmostTri)\n                    {\n                        faces[otherIndex + f_outmostEdge] = 2;\n                    }\n\n                    break;\n\n            }\n            eraseEdgesOfFaceInStack(otherIndex)\n\n            // remove our face\n            faces[index + f_count] = 0;\n\n            success++;\n        }\n        eraseEdgesOfFaceInStack(index)\n\n    }\n\n    config.debug && console.log(\"Successfully removed\", success, \"out of\", count);\n\n    return success;\n}\n\n\nfunction calculateNumNodes(config, faces)\n{\n    let tris = 0;\n    let quads = 0;\n    for (let i = 0; i < config.firstPassLen; i += f_size)\n    {\n        const count = faces[i + f_count];\n\n        if (count === 3)\n        {\n            tris++;\n        }\n        else if (count === 4)\n        {\n            quads++;\n        }\n    }\n\n    //console.log({quads,tris})\n\n    // we divide each quad in 9 nodes and each tri into 7 nodes\n    return quads * 9 + tris * 7;\n}\n\n\n\nfunction connectTiles(config, tiles)\n{\n    const { length } = tiles;\n\n    for (let i=0; i < length; i += t_size)\n    {\n        let numConnections = 0;\n        for (let j = 0; j < 4; j++)\n        {\n            const n0 = tiles[i + t_n0 + j];\n            const n1 = j === 3 ? tiles[i + t_n0 ] : tiles[i + t_n0 + j + 1];\n\n            let otherIndex = -1;\n            for (let k=0; k < tiles.length; k += t_size)\n            {\n                if (k === i)\n                {\n                    continue;\n                }\n\n                const otherNode0 = tiles[k + t_n0];\n                const otherNode1 = tiles[k + t_n1];\n                const otherNode2 = tiles[k + t_n2];\n                const otherNode3 = tiles[k + t_n3];\n\n                // tile edges are all defined in clockwise order, the opposite edge must necessarily walk the two nodes in\n                // the opposite direction\n\n                if (\n                    otherNode1 === n0 && otherNode0 === n1 ||\n                    otherNode2 === n0 && otherNode1 === n1 ||\n                    otherNode3 === n0 && otherNode2 === n1 ||\n                    otherNode0 === n0 && otherNode3 === n1\n                )\n                {\n\n                    otherIndex = k;\n                    numConnections++;\n                    break;\n                }\n            }\n\n            tiles[i + t_tile0 + j] = otherIndex;\n        }\n        tiles[i + t_isEdge] = numConnections === 4 ? 0 : 1;\n    }\n\n    config.debug && console.log(\"TILE GRAPH\", tiles);\n}\n\n\nfunction subdivide(config, faces)\n{\n    const { firstPassLen } = config;\n\n    const numNodes = calculateNumNodes(config, faces);\n\n    const nodes = new Float64Array(numNodes * g_size);\n\n\n    const tiles = new Int32Array(((numNodes / 2)|0) * t_size);\n\n    let pos = 0;\n    let tilePos = 0;\n\n    const insertNode = (x0, y0, isEdge) => {\n\n        x0 |= 0;\n        y0 |= 0;\n\n        for (let i = 0; i < pos; i += g_size)\n        {\n            if (Math.abs(nodes[i] - x0) < 4 && Math.abs(nodes[i + 1] - y0) < 4)\n            {\n                // if we discover an odd face vertex touching the outmost edge, we will\n                // not register that because the odd tris are not marked as having an outmost edge, because they don't, they\n                // only have one vertices on the edge at most\n                // Later we might however return to that node within an outmost edge and we have to make sure that\n                // we take over the isEdge status from such a node\n                if (isEdge && !nodes[i + 2])\n                {\n                    nodes[i + 2] = 1;\n                }\n\n                return i;\n            }\n        }\n\n        const index = pos;\n\n        nodes[pos + g_x] = x0;\n        nodes[pos + g_y] = y0;\n        nodes[pos + g_isEdge] = isEdge ? 1 : 0;\n        nodes[pos + g_count] = 0;\n\n        pos += g_size;\n\n        return index;\n    }\n\n    const addTile = ((n0,n1,n2,n3) => {\n\n        //console.log(\"addTile\", n0, n1, n2, n3, tilePos)\n\n        tiles[tilePos + t_n0] = n0;\n        tiles[tilePos + t_n1] = n1;\n        tiles[tilePos + t_n2] = n2;\n        tiles[tilePos + t_n3] = n3;\n\n        tilePos += t_size;\n    });\n\n    const insertEdge = (n0, n1) => {\n        let count = nodes[n0 + g_count];\n\n        let found = false;\n        for (let i = 0; i < count; i++)\n        {\n            const other = nodes[n0 + g_edge0 + i];\n            if (other === n1)\n            {\n                found = true;\n                break;\n            }\n        }\n        if (!found)\n        {\n            if (count >= 6)\n            {\n                throw new Error(\"At most 6 edges per node\")\n            }\n\n            nodes[n0 + g_edge0 + count++] = n1;\n            nodes[n0 + g_count] = count;\n        }\n\n    }\n    const connect = (n0, n1) => {\n\n        insertEdge(n0, n1);\n        insertEdge(n1, n0);\n\n    }\n\n    for (let i = 0; i < firstPassLen; i += f_size)\n    {\n        const count = faces[i + f_count];\n\n        const x0 = faces[i + f_x0]\n        const y0 = faces[i + f_y0]\n        const x1 = faces[i + f_x1]\n        const y1 = faces[i + f_y1]\n        const x2 = faces[i + f_x2]\n        const y2 = faces[i + f_y2]\n\n        const outmostEdge = faces[i + f_outmostEdge ];\n\n        const firstEdgeIsOutmost = outmostEdge === 1;\n        const secondEdgeIsOutmost = outmostEdge === 2;\n\n        if (count === 3)\n        {\n            const m0x = (x0 + x1) / 2;\n            const m0y = (y0 + y1) / 2;\n            const m1x = (x1 + x2) / 2;\n            const m1y = (y1 + y2) / 2;\n            const m2x = (x2 + x0) / 2;\n            const m2y = (y2 + y0) / 2;\n\n            const cx = (x0 + x1 + x2) / 3\n            const cy = (y0 + y1 + y2) / 3\n\n            const n0 = insertNode(x0, y0);\n            const n1 = insertNode(m0x, m0y);\n            const n2 = insertNode(x1, y1, firstEdgeIsOutmost);\n            const n3 = insertNode(m1x, m1y, firstEdgeIsOutmost);\n            const n4 = insertNode(x2, y2, firstEdgeIsOutmost);\n            const n5 = insertNode(m2x, m2y);\n            const n6 = insertNode(cx, cy);\n\n            connect(n0, n1);\n            connect(n1, n6);\n            connect(n6, n5);\n            connect(n5, n0);\n\n            connect(n1, n2);\n            connect(n2, n3);\n            connect(n3, n6);\n            connect(n6, n1);\n\n            connect(n5, n6);\n            connect(n6, n3);\n            connect(n3, n4);\n            connect(n4, n5);\n\n            addTile(n0,n1,n6,n5);\n            addTile(n1,n2,n3,n6);\n            addTile(n5,n6,n3,n4);\n\n        }\n        else if (count === 4)\n        {\n            const x3 = faces[i + f_x3]\n            const y3 = faces[i + f_y3]\n\n            const m0x = (x0 + x1) / 2;\n            const m0y = (y0 + y1) / 2;\n            const m1x = (x1 + x2) / 2;\n            const m1y = (y1 + y2) / 2;\n            const m2x = (x2 + x3) / 2;\n            const m2y = (y2 + y3) / 2;\n            const m3x = (x3 + x0) / 2;\n            const m3y = (y3 + y0) / 2;\n\n            const cx = (x0 + x1 + x2 + x3) / 4\n            const cy = (y0 + y1 + y2 + y3) / 4\n\n            const n0 = insertNode(x0, y0);\n            const n1 = insertNode(m0x, m0y);\n            const n2 = insertNode(x1, y1, firstEdgeIsOutmost);\n            const n3 = insertNode(m1x, m1y, firstEdgeIsOutmost);\n            const n4 = insertNode(x2, y2, firstEdgeIsOutmost || secondEdgeIsOutmost);\n            const n5 = insertNode(m2x, m2y, secondEdgeIsOutmost);\n            const n6 = insertNode(x3, y3, secondEdgeIsOutmost);\n            const n7 = insertNode(m3x, m3y);\n            const n8 = insertNode(cx, cy);\n\n            connect(n0, n1);\n            connect(n1, n2);\n            connect(n2, n3);\n            connect(n3, n4);\n            connect(n4, n5);\n            connect(n5, n6);\n            connect(n6, n7);\n            connect(n7, n0);\n\n            connect(n8, n3);\n            connect(n8, n5);\n            connect(n8, n7);\n            connect(n8, n1);\n\n            addTile(n0,n1,n8,n7);\n            addTile(n1,n2,n3,n8);\n            addTile(n8,n3,n4,n5);\n            addTile(n7,n8,n5,n6);\n        }\n    }\n\n    //const fillRate = (pos / g_size) / numNodes;\n    //console.log(\"SUBDIVIDED: limit = \", numNodes, \", fill rate = \", fillRate);\n\n    console.log(\"TILES: buffer = \", tiles.length, \", used = \" + tilePos)\n\n    const newTiles = tiles.slice(0, tilePos);\n\n    connectTiles(config, newTiles);\n\n    return [nodes.slice(0, pos), newTiles];\n}\n\n\nfunction relaxWeighted(config, graph, maxIterations = 1)\n{\n\n    const {length} = graph;\n\n    for (let i = 0; i < maxIterations; i++)\n    {\n        let tension = 0;\n        for (let j = 0; j < length; j += g_size)\n        {\n            if (!graph[j + g_isEdge])\n            {\n                const x0 = graph[j + g_x]\n                const y0 = graph[j + g_y]\n                const edgeCount = graph[j + g_count]\n\n                let centerX = 0;\n                let centerY = 0;\n                let sumWeight = 0;\n\n                for (let k = 0; k < edgeCount; k++)\n                {\n                    const other = graph[j + 4 + k];\n\n                    const x1 = graph[other];\n                    const y1 = graph[other + 1];\n\n                    const weight = config.weightFunction(x0, y0, x1, y1);\n\n                    centerX += x1 * weight;\n                    centerY += y1 * weight;\n                    sumWeight += weight;\n                }\n\n                const x1 = centerX / sumWeight\n                const y1 = centerY / sumWeight;\n\n                const dx = x1 - x0;\n                const dy = y1 - y0;\n\n                graph[j + g_x] = x1;\n                graph[j + g_y] = y1;\n\n                tension += dx * dx + dy * dy;\n\n            }\n        }\n\n        if (tension < config.minTension)\n        {\n            config.debug && console.log(\"Reached minimal tension\", config.minTension, \"after\", config.relaxCount, \"iterations\")\n            return true;\n        }\n        config.relaxCount++;\n    }\n\n    if (!config.animatedEasing)\n    {\n        config.debug && console.log(\"Stopping after max iterations = \" + config.maxIterations)\n    }\n\n    return false;\n}\n\n\n/**\n * A hexagon filled with quads forming organic shapes.\n */\nclass OrganicQuads {\n    constructor(cfg)\n    {\n\n        const config = {\n            ...DEFAULT_CONFIG,\n            ...cfg\n        }\n\n        updateConfig(config)\n\n        this.config = config;\n\n        const faces = createHexagonTriangles(config);\n\n        if (config.renderFirstPassEdges)\n        {\n            this.faces = config.renderFirstPassEdges !== \"merged\" ? faces.slice() : faces;\n        }\n\n        const start = config.debug && now();\n\n        removeRandomEdges(config, faces)\n\n        config.debug && console.log(\"Edge removal in \" , now() - start, \"ms\")\n\n        const [graph, tiles] = subdivide(config, faces);\n        this.tiles = tiles;\n\n        if (!config.animating)\n        {\n            relaxWeighted(config, graph, config.maxIterations);\n        }\n        //console.log(\"GRAPH f_size\", graph.length / g_size, graph);\n        this.graph = graph;\n\n    }\n\n\n    render = ctx =>\n    {\n        const { config, graph, faces } = this;\n\n\n        ctx.save();\n\n        const hw = config.width / 2;\n        const hh = config.height / 2;\n\n        ctx.translate(hw, hh)\n\n        const {length} = graph;\n\n        ctx.fillStyle = \"#000\";\n        ctx.fillRect(-hw, -hh, config.width, config.height)\n\n        if (config.renderFirstPassEdges)\n        {\n\n            // draw original quads and tris\n\n            ctx.strokeStyle = \"#f00\";\n            ctx.lineWidth = 1;\n\n\n            let outerCount = 0;\n            for (let pos = 0; pos < config.firstPassLen; pos += f_size)\n            {\n                const count = faces[pos + f_count];\n\n                if (count >= 3)\n                {\n\n                    ctx.beginPath();\n                    ctx.moveTo(faces[pos + f_x0 ],faces[pos + f_y0]);\n\n                    for (let i = 1; i < count; i++)\n                    {\n                        ctx.lineTo(faces[pos + i*2],faces[pos +  i*2 + 1]);\n                    }\n\n                    ctx.closePath();\n                    ctx.stroke();\n\n                    const outmostEdge = faces[pos + f_outmostEdge];\n                    if (outmostEdge >= 0)\n                    {\n                        ctx.strokeStyle = \"#fe0\";\n                        ctx.beginPath();\n                        ctx.moveTo(faces[pos + outmostEdge * 2  ],faces[pos + outmostEdge * 2 + 1]);\n\n                        if (outmostEdge === count - 1)\n                        {\n                            ctx.lineTo(faces[pos + f_x0 ],faces[pos + f_y0]);\n                        }\n                        else\n                        {\n                            ctx.lineTo(faces[pos + (outmostEdge + 1 ) * 2  ],faces[pos + (outmostEdge + 1 ) * 2 + 1]);\n                        }\n                        ctx.stroke();\n                        ctx.strokeStyle = \"#f00\";\n\n                        outerCount++;\n\n                    }\n\n                }\n            }\n            //    console.log(\"Number of outer edges\", outerCount)\n\n            //console.log(\"DRAW EDGES\")\n        }\n\n        // ctx.strokeStyle = \"#fff\";\n        // ctx.lineWidth = 1;\n        //\n        //\n        // function drawEdge(x0, y0, node)\n        // {\n        //     const x1 = graph[node + g_x];\n        //     const y1 = graph[node + g_y];\n        //\n        //     ctx.beginPath();\n        //     ctx.moveTo(x0, y0);\n        //     ctx.lineTo(x1, y1);\n        //     ctx.stroke();\n        // }\n        //\n        //\n        // for (let i = 0; i < length; i += g_size)\n        // {\n        //     const x0 = graph[i + g_x];\n        //     const y0 = graph[i + g_y];\n        //     const edgeCount = graph[i + g_count];\n        //\n        //     for (let j = 0; j < edgeCount; j++)\n        //     {\n        //         drawEdge(x0, y0, graph[i + g_edge0 + j])\n        //     }\n        // }\n\n        //ctx.fillStyle = \"#f0f\";\n        //\n        // for (let i = 0; i < length; i += g_size)\n        // {\n        //     const x0 = graph[i + g_x];\n        //     const y0 = graph[i + g_y];\n        //     const isEdge = graph[i + g_isEdge];\n        //\n        //     if (isEdge)\n        //     {\n        //         ctx.fillRect(x0 - 4,  y0 - 4, 8, 8)\n        //     }\n        // }\n\n        // ctx.strokeStyle = \"#f00\";\n        // ctx.lineWidth = 4;\n        //\n        // for (let pos = 0; pos < config.firstPassLen; pos += f_size)\n        // {\n        //     const count = faces[pos + f_count];\n        //     const outmostEdge = faces[pos + f_outmostEdge];\n        //\n        //\n        //     const last = count - 1;\n        //     for (let i=0; i < count; i++)\n        //     {\n        //         if (i === outmostEdge)\n        //         {\n        //             ctx.strokeStyle = \"rgba(255,0,0,0.5)\";\n        //         }\n        //         else\n        //         {\n        //             ctx.strokeStyle = \"rgba(0,255,0,0.5)\";\n        //         }\n        //\n        //         ctx.beginPath();\n        //         ctx.moveTo(faces[pos + i * 2], faces[pos + i * 2 + 1]);\n        //         ctx.lineTo(\n        //             i === last ? faces[pos + f_x0 ] : faces[pos + (i+1) * 2],\n        //             i === last ? faces[pos + f_y0 ] : faces[pos + (i+1) * 2 + 1]\n        //         );\n        //         ctx.stroke();\n        //     }\n        // }\n\n        ctx.restore();\n\n        if (config.animating)\n        {\n            if (relaxWeighted(config, graph))\n            {\n                config.animating = false;\n            }\n            //            raf(redrawGraph)\n        }\n    }\n}\n\n\nexport {  Vector }\n\nexport default OrganicQuads\n","const sqrt = Math.sqrt;\n\nclass Vector\n{\n    constructor(x,y)\n    {\n        this.x = x;\n        this.y = y;\n    }\n\n    /**\n     * Returns a copy of this vector.\n     *\n     * @returns {Vector} copy\n     */\n    copy()\n    {\n        return new Vector(this.x,this.y);\n    }\n\n    /**\n     * Adds to this vector\n     *\n     * @param x     {number|Vector} x coordinate or a vector\n     * @param y     {number?} y coordinate, ignored if x is a vector\n     * @returns {Vector} this vector\n     */\n\n    add(x,y)\n    {\n        if (typeof x === \"number\")\n        {\n            this.x += x;\n            this.y += y;\n        }\n        else\n        {\n            this.x += x.x;\n            this.y += x.y;\n        }\n\n        return this;\n    }\n\n    /**\n     * Subtracts from this vector\n     *\n     * @param x     {number|Vector} x coordinate or a vector\n     * @param y     {number?} y coordinate, ignored if x is a vector\n     * @returns {Vector} this vector\n     */\n    subtract(x,y)\n    {\n        if (typeof x === \"number\")\n        {\n            this.x -= x;\n            this.y -= y;\n        }\n        else\n        {\n            this.x -= x.x;\n            this.y -= x.y;\n        }\n\n        return this;\n    }\n\n    /**\n     * Scales the vector by a planar number.\n     *\n     * @param n     scale\n     * @returns {Vector} this vector, scaled\n     */\n    scale(n)\n    {\n        this.x *= n;\n        this.y *= n;\n\n        return this;\n    }\n\n    /**\n     * Length of this vector\n     *\n     * @returns {number}    length\n     */\n    length()\n    {\n        const { x, y } = this;\n        return sqrt(x*x+y*y);\n    }\n\n    /**\n     * Scales the vector to normal length or a specified length\n     *\n     * @param targetLength      {number?} target length of the vector (default is 1, the normal vector length)\n     *\n     * @returns {Vector}\n     */\n    norm(targetLength = 1)\n    {\n        return this.scale(targetLength / this.length());\n    }\n\n    /**\n     * Rotate vector 90 degrees clockwise.\n     *\n     * @returns {Vector}\n     */\n    rotateClockwise()\n    {\n        const { x, y } = this;\n\n        //noinspection JSSuspiciousNameCombination\n        this.x = y;\n        this.y = -x;\n\n        return this;\n    }\n\n    /**\n     * Rotate vector 90 degrees counter clockwise.\n     *\n     * @returns {Vector}\n     */\n    rotateCounterClockwise()\n    {\n        const { x, y } = this;\n\n        this.x = -y;\n        //noinspection JSSuspiciousNameCombination\n        this.y = x;\n\n        return this;\n    }\n\n    /**\n     * Sets the coordinates of this vector\n     *\n     * @param x     {number|Vector} x coordinate or a vector\n     * @param y     {number?} y coordinate, ignored if x is a vector\n     * @returns {Vector} this vector\n     */\n    set(x,y)\n    {\n        if (typeof x === \"number\")\n        {\n            this.x = x;\n            this.y = y;\n        }\n        else\n        {\n            this.x = x.x;\n            this.y = x.y;\n        }\n\n    }\n}\n\nexport default Vector;\n","import React from \"react\"\nimport raf from \"raf\"\nimport SimplexNoise from \"simplex-noise\"\n// noinspection ES6UnusedImports\nimport STYLE from \"./style.css\"\nimport {\n    BufferGeometry,\n    CubeCamera,\n    DirectionalLight,\n    Float32BufferAttribute,\n    FrontSide,\n    LinearMipmapLinearFilter,\n    Mesh,\n    MeshStandardMaterial,\n    PerspectiveCamera,\n    PlaneBufferGeometry,\n    RepeatWrapping,\n    Scene,\n    WebGLRenderer\n} from \"three\"\n\nimport OrganicQuads, {\n    g_size,\n    g_x,\n    g_y, t_isEdge,\n    t_n0,\n    t_n1,\n    t_n2,\n    t_n3,\n    t_size,\n    t_tile0,\n    t_tile1,\n    t_tile2,\n    t_tile3\n} from \"@fforw/organic-quads\";\nimport loadScene from \"./loadScene\";\nimport { Water } from \"three/examples/jsm/objects/Water.js\";\nimport { Sky } from \"three/examples/jsm/objects/Sky.js\";\n\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport loadTexture from \"./loadTexture\";\n\n\nconst EFFECTS = false;\n\nconst MAX_HEIGHT = 300;\nconst QUARTER_HEIGHT = MAX_HEIGHT/4;\nconst NOISE_SCALE = 0.003;\nconst CLIFF_THRESHOLD = 16;\nconst RANDOM_FACTOR = 0.2;\n\n// size of the outer square around our big hexagon\nconst SIZE = 1000;\n\n// distance from the center at which the ground becomes flat\nconst FLAT_DISTANCE = 300;\n\n\n//////////////////////////////////////////////////////////////////////\n\nconst DISTANCE_TO_ANGLE_FACTOR = (Math.PI/2) / FLAT_DISTANCE;\n\nconst WATER = 0;\nconst SAND = 1;\nconst GRASS = 2;\nconst DIRT = 3;\nconst FOREST = 4;\nconst STONE = 5;\n\nconst GROUND_COLORS = {\n    [WATER] : [0,0.4,0.8],\n    [SAND] : [0.8,0.8,0],\n    [GRASS] : [0,0.5,0],\n    [DIRT] : [0.5,0.3,0.1],\n    [FOREST] : [0.2,0.4,0.3],\n    [STONE] : [0.5,0.5,0.5]\n}\n\nlet container, stats;\nlet camera, scene, renderer, light;\nlet controls, water, sphere;\n\n\nconst td_cx = 0;\nconst td_cy = 1;\nconst td_cut0 = 2;\nconst td_cut1 = 3;\nconst td_cut2 = 4;\nconst td_cut3 = 5;\nconst td_size = 6;\n\nlet tileData;\nlet heightMap;\n\nfunction updateCentroids()\n{\n    const { graph, tiles } = organicQuads;\n    const { length } = tiles;\n\n    let tileDataPos = 0;\n    for (let i=0; i < length; i += t_size)\n    {\n        const n0 = tiles[i + t_n0];\n        const n1 = tiles[i + t_n1];\n        const n2 = tiles[i + t_n2];\n        const n3 = tiles[i + t_n3];\n\n        tileData[tileDataPos + td_cx] = (graph[n0 + g_x] + graph[n1 + g_x] + graph[n2 + g_x] + graph[n3 + g_x]) / 4;\n        tileData[tileDataPos + td_cy] = (graph[n0 + g_y] + graph[n1 + g_y] + graph[n2 + g_y] + graph[n3 + g_y]) / 4;\n        tileData[tileDataPos + td_cut0] = -1;\n        tileData[tileDataPos + td_cut1] = -1;\n        tileData[tileDataPos + td_cut2] = -1;\n        tileData[tileDataPos + td_cut3] = -1;\n\n        tileDataPos += td_size;\n    }\n\n}\n\nlet organicQuads, envMap;\n\n\n\nfunction heightFn(x0, z0)\n{\n    const distance = Math.sqrt(x0 * x0 + z0 * z0);\n    const heightLimit = distance < FLAT_DISTANCE ?   Math.cos(distance * DISTANCE_TO_ANGLE_FACTOR) : 0;\n\n    return (QUARTER_HEIGHT + (noise.noise2D(x0 * NOISE_SCALE, z0 * NOISE_SCALE) - Math.random() * RANDOM_FACTOR) * QUARTER_HEIGHT) * heightLimit;\n}\n\n\nconst tmpHeight= new Float64Array(5);\n\nfunction cutCliffs()\n{\n\n    const { graph, tiles } = organicQuads;\n\n    const { length } = tiles;\n\n\n\n    const map = {};\n\n    const insert = (a,b) => {\n        if (a > b)\n        {\n            let h = a;\n            a=b;\n            b=h;\n        }\n\n        const key = a + \":\" + b;\n\n        const v = map[key];\n        map[key] =  v === undefined ? 1 : v + 1;\n    }\n\n    const heightIndexFactor = h_size / g_size;\n    const tileDataFactor = td_size / t_size;\n\n    for (let i = 0; i < length; i += t_size)\n    {\n        // find indizes for connected centroid (values might be -1 if on the edge\n        const tileDataIndex = i * tileDataFactor;\n        const tileDataIndex0 = tiles[i + t_tile0] * tileDataFactor;\n        const tileDataIndex1 = tiles[i + t_tile1] * tileDataFactor;\n        const tileDataIndex2 = tiles[i + t_tile2] * tileDataFactor;\n        const tileDataIndex3 = tiles[i + t_tile3] * tileDataFactor;\n\n        tmpHeight[0] = heightFn( tileData[tileDataIndex], tileData[tileDataIndex + 1] )\n\n        tmpHeight[1] = tileDataIndex0 >= 0 ? heightFn( tileData[tileDataIndex0 + td_cx], tileData[tileDataIndex0 + td_cy] ) : -1;\n        tmpHeight[2] = tileDataIndex1 >= 0 ? heightFn( tileData[tileDataIndex1 + td_cx], tileData[tileDataIndex1 + td_cy] ) : -1;\n        tmpHeight[3] = tileDataIndex2 >= 0 ? heightFn( tileData[tileDataIndex2 + td_cx], tileData[tileDataIndex2 + td_cy] ) : -1;\n        tmpHeight[4] = tileDataIndex3 >= 0 ? heightFn( tileData[tileDataIndex3 + td_cx], tileData[tileDataIndex3 + td_cy] ) : -1;\n\n        //console.log(\"HEIGHTS\", tmpHeight.slice())\n\n        // 4 bits for the 4 vertices involved in the quad. We always set two consecutive bits to cut all vertices\n        // involved in an edge where one of the vertices is cut. last bit wraps around to the first\n\n        let cutMask = 0;\n\n        if (tileDataIndex0 >= 0 && Math.abs(tmpHeight[0] - tmpHeight[1]) > CLIFF_THRESHOLD)\n        {\n            cutMask |= 3;\n        }\n\n        if (tileDataIndex1 >= 0 && Math.abs(tmpHeight[0] - tmpHeight[2]) > CLIFF_THRESHOLD)\n        {\n            cutMask |= 6;\n        }\n        if (tileDataIndex2 >= 0 && Math.abs(tmpHeight[0] - tmpHeight[3]) > CLIFF_THRESHOLD)\n        {\n            cutMask |= 12;\n        }\n        if (tileDataIndex3 >= 0 && Math.abs(tmpHeight[0] - tmpHeight[4]) > CLIFF_THRESHOLD)\n        {\n            cutMask |= 9;\n        }\n\n        if (cutMask !== 0)\n        {\n            let height = tmpHeight[0];\n            // if all edges are cut, keep using the centroid heightmap value,\n            // otherwise recalculate the height as average of the uncut points\n            if (cutMask !== 15)\n            {\n                height = 0;\n                let count = 0;\n                for (let j = 0 ; j < 4; j++)\n                {\n                    if ((cutMask & (1 << j)) === 0)\n                    {\n                        const heightMapIndex = tiles[i + t_n0 + j] * heightIndexFactor;\n                        height += heightMap[heightMapIndex + h_height];\n                        count++;\n                    }\n                }\n                height /= count;\n            }\n\n            for (let j = 0 ; j < 4; j++)\n            {\n                if (cutMask & (1 << j))\n                {\n                    const heightMapIndex = tiles[i + t_n0 + j] * heightIndexFactor;\n\n                    //console.log(\"Cutting connection from\", i / t_size , \" to #\" +tiles[i + t_tile0 + j] / t_size, \", new height = \", height )\n                    //console.log({tmpHeight, cutMask})\n\n                    insert(i / t_size,tiles[i + t_tile0 + j] / t_size)\n\n\n                    tileData[tileDataIndex + td_cut0 + j] = height;\n                    heightMap[heightMapIndex + h_ground] = STONE;\n\n                    const other = tiles[i + t_tile0 + j];\n\n                    // cut our connection to the other tile\n                    tiles[i + t_tile0 + j] = -1;\n\n\n                    // // and remove us from the other tile\n                    // for (let k = 0 ; k < 4; k++)\n                    // {\n                    //     if (tiles[other + t_tile0 + k] === i)\n                    //     {\n                    //         tiles[other + t_tile0 + k] = -1;\n                    //     }\n                    // }\n                }\n            }\n        }\n    }\n\n    console.log(\"CUT STATS\", JSON.stringify(map, null, 4))\n}\n\nconst h_height = 0;\nconst h_ground = 1;\nconst h_size = 3;\n\n\nfunction findEdgeIndex()\n{\n    const { tiles } = organicQuads;\n\n    const { length } = tiles;\n\n    for (let i = 0; i < length; i += t_size)\n    {\n        if (tiles[i + t_isEdge])\n        {\n            return i;\n        }\n    }\n    throw new Error(\"No edge!?\")\n}\n\n\nconst heightIndexFactor = h_size / g_size;\n\nfunction walkRecursive(tileIndex, visited)\n{\n\n    if (tileIndex >= 0 && !visited.has(tileIndex))\n    {\n        visited.add(tileIndex);\n\n\n        const { tiles } = organicQuads;\n\n        const tile0 = tiles[tileIndex + t_tile0];\n        const tile1 = tiles[tileIndex + t_tile1];\n        const tile2 = tiles[tileIndex + t_tile2];\n        const tile3 = tiles[tileIndex + t_tile3];\n\n        for (let i=0; i < 4; i++)\n        {\n            const heightMapIndex = tiles[tileIndex + t_n0 + i] * heightIndexFactor;\n            const ground = heightMap[heightMapIndex + h_ground];\n            if (ground !== STONE && !tiles[tileIndex + t_isEdge])\n            {\n                heightMap[heightMapIndex + h_ground] = GRASS;\n            }\n        }\n\n\n        walkRecursive(tile0, visited);\n        walkRecursive(tile1, visited);\n        walkRecursive(tile2, visited);\n        walkRecursive(tile3, visited);\n\n    }\n}\n\n\nfunction testWalkability()\n{\n    const tileIndex = findEdgeIndex();\n\n    console.log(\"Starting to walk at #\", tileIndex/t_size)\n\n    const visited = new Set();\n    walkRecursive(tileIndex, visited);\n}\n\n\nfunction createScene()\n{\n\n    organicQuads = new OrganicQuads({\n        numberOfRings: 6,\n        width: SIZE,\n        height: SIZE,\n        graphUserData: 1,\n        // weightFunction: (x0,y0,x1,y1) => {\n        //\n        //     const dx = x1 - x0;\n        //     const dy = y1 - y0;\n        //     const dz = heightFn(x0,y0) - heightFn(x1,y1);\n        //\n        //     return Math.sqrt(dx * dx + dy * dy + dz * dz);\n        //\n        // }\n    });\n\n\n    const { graph, tiles, config } = organicQuads;\n    const { length } = graph;\n\n    heightMap = new Float64Array(length/g_size * h_size);\n    let pos = 0;\n    for (let i=0; i < length; i += g_size)\n    {\n        heightMap[pos + h_height] = heightFn(graph[i + g_x], graph[i + g_y]);\n        heightMap[pos + h_ground] = SAND;\n\n        pos += h_size;\n    }\n\n    tileData = new Float64Array((organicQuads.tiles.length / t_size) * td_size);\n    updateCentroids()\n    cutCliffs()\n    testWalkability();\n}\n\nconst noise = new SimplexNoise();\n\n\nfunction checkNaN(value, msg)\n{\n    if (isNaN(value))\n    {\n        debugger;\n        throw new Error(msg + \": value is NaN\")\n    }\n}\n\n\nfunction addHeightMap()\n{\n    const geometry = new BufferGeometry();\n    geometry.name = \"Landscape-Debug\"\n\n    const vertices = [];\n    const normals = [];\n    const colors = [];\n\n    const size = 20;\n    const segments = 10;\n\n    const halfSize = size / 2;\n    const segmentSize = size / segments;\n\n    // generate vertices, normals and color data for a simple grid geometry\n    const { graph, tiles, config } = organicQuads;\n\n    const { length } = tiles;\n\n\n    console.log(\"Height map for \", length/t_size , \" tiles\");\n\n    const heightIndexFactor = h_size / g_size;\n\n    const UNDEFINED_COLOR = [1,0,1];\n\n\n    // const map = {};\n    //\n    // const insert = (a,b) => {\n    //     if (a > b)\n    //     {\n    //         let h = a;\n    //         a=b;\n    //         b=h;\n    //     }\n    //\n    //     const key = a + \":\" + b;\n    //\n    //     const v = map[key];\n    //     map[key] =  v === undefined ? 1 : v + 1;\n    // }\n\n    const getColor = (hIdx) => GROUND_COLORS[heightMap[hIdx + h_ground]] || UNDEFINED_COLOR;\n\n\n    let tileDataIndex = 0;\n    for (let i = 0; i < length; i += t_size)\n    {\n        // node indizes for our quad\n        const n0 = tiles[i + t_n0];\n        const n1 = tiles[i + t_n1];\n        const n2 = tiles[i + t_n2];\n        const n3 = tiles[i + t_n3];\n\n        // const e0 = tiles[i + t_tile0]\n        // const e1 = tiles[i + t_tile1]\n        // const e2 = tiles[i + t_tile2]\n        // const e3 = tiles[i + t_tile3]\n        // e0 >= 0 && insert(i * tileFactor, e0 * tileFactor)\n        // e1 >= 0 && insert(i * tileFactor, e1 * tileFactor)\n        // e2 >= 0 && insert(i * tileFactor, e2 * tileFactor)\n        // e3 >= 0 && insert(i * tileFactor, e3 * tileFactor)\n\n        // equivalent height map indizes\n        const heightIndex0 = n0 * heightIndexFactor;\n        const heightIndex1 = n1 * heightIndexFactor;\n        const heightIndex2 = n2 * heightIndexFactor;\n        const heightIndex3 = n3 * heightIndexFactor;\n\n\n\n        const x0 = graph[n0 + g_x];\n        const y0 = tileData[tileDataIndex + td_cut0] === -1 ? heightMap[heightIndex0 + h_height] : tileData[tileDataIndex + td_cut0];\n        //const y0 = heightMap[heightIndex0 + h_height];\n        const z0 = graph[n0 + g_y];\n\n        const x1 = graph[n1 + g_x];\n        const y1 = tileData[tileDataIndex + td_cut1] === -1 ? heightMap[heightIndex1 + h_height] : tileData[tileDataIndex + td_cut1];\n        //const y1 = heightMap[heightIndex1 + h_height];\n        const z1 = graph[n1 + g_y];\n\n        const x2 = graph[n2 + g_x];\n        const y2 = tileData[tileDataIndex + td_cut2] === -1 ? heightMap[heightIndex2 + h_height] : tileData[tileDataIndex + td_cut2];\n        //const y2 = heightMap[heightIndex2 + h_height]\n        const z2 = graph[n2 + g_y];\n\n        const x3 = graph[n3 + g_x];\n        const y3 = tileData[tileDataIndex + td_cut3] === -1 ? heightMap[heightIndex3 + h_height] : tileData[tileDataIndex + td_cut3];\n        //const y3 = heightMap[heightIndex3 + h_height];\n        const z3 = graph[n3 + g_y];\n\n        const ax = (x0 - x1);\n        const ay = (y0 - y1);\n        const az = (z0 - z1);\n        const bx = (x2 - x1);\n        const by = (y2 - y1);\n        const bz = (z2 - z1);\n        const cx = (x3 - x1);\n        const cy = (y3 - y1);\n        const cz = (z3 - z1);\n\n        // normal vector based on points 0, 1 and 2\n        const n0x = ay * bz - az * by;\n        const n0y = az * bx - ax * bz;\n        const n0z = ax * by - ay * bx;\n\n        // normal vector based on points 0, 1 and 3\n        const n1x = ay * cz - az * cy;\n        const n1y = az * cx - ax * cz;\n        const n1z = ax * cy - ay * cx;\n\n        // average and renormalize\n        let nx = (n0x + n1x)/2;\n        let ny = (n0y + n1y)/2;\n        let nz = (n0z + n1z)/2;\n\n        const f = 1 / Math.sqrt(nx*nx+ny*ny+nz*nz);\n        nx *= f;\n        ny *= f;\n        nz *= f;\n\n        vertices.push( x0, y0, z0);\n        vertices.push( x3, y3, z3);\n        vertices.push( x1, y1, z1);\n\n        vertices.push( x1, y1, z1);\n        vertices.push( x3, y3, z3);\n        vertices.push( x2, y2, z2);\n\n\n        normals.push( nx, ny, nz );\n        normals.push( nx, ny, nz );\n        normals.push( nx, ny, nz );\n\n        normals.push( nx, ny, nz );\n        normals.push( nx, ny, nz );\n        normals.push( nx, ny, nz );\n\n\n        // const cf = 4 / MAX_HEIGHT;\n        //\n        // colors.push( y3 * cf,1 - y3 * cf, 0);\n        // colors.push( y1 * cf,1 - y1 * cf, 0);\n        // colors.push( y1 * cf,1 - y1 * cf, 0);\n        // colors.push( y3 * cf,1 - y3 * cf, 0);\n        // colors.push( y2 * cf,1 - y2 * cf, 0);\n\n        const col0 = getColor(heightIndex0);\n        const col1 = getColor(heightIndex1);\n        const col2 = getColor(heightIndex2);\n        const col3 = getColor(heightIndex3);\n\n        colors.push(col0[0],col0[1],col0[2]);\n        colors.push(col3[0],col3[1],col3[2]);\n        colors.push(col1[0],col1[1],col1[2]);\n\n        colors.push(col1[0],col1[1],col1[2]);\n        colors.push(col3[0],col3[1],col3[2]);\n        colors.push(col2[0],col2[1],col2[2]);\n\n        tileDataIndex += td_size;\n\n    }\n\n    //const values = Object.values(map);\n    //console.log(\"SYMMETRY-CHECK\", map, values.filter(n => n === 1).length, \"of\", values.length);\n\n    //console.log(\"MAX DELTA\", max);\n\n    //\n    console.log({vertices, normals, colors})\n\n\n    geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n    geometry.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n    geometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n    const material = new MeshStandardMaterial({\n        vertexColors: true,\n        side: FrontSide,\n        roughness: 0.5\n    });\n\n    // material.onBeforeCompile = shader => {\n    //\n    //     const {vertexShader,fragmentShader,uniforms} = shader;\n    //\n    //     console.log(\"--- VERT:\\n\", vertexShader);\n    //     console.log(\"--- FRAG:\\n\", fragmentShader);\n    //     console.log({uniforms})\n    // };\n\n   const mesh = new Mesh( geometry, material );\n\n\n    mesh.position.set(0, 0.1, 0);\n\n    // var wireframe = new WireframeGeometry( geometry );\n    //\n    // var line = new LineSegments( wireframe );\n    // line.material.depthTest = false;\n    // line.material.opacity = 0.25;\n    // line.material.transparent = true;\n    //\n    //\n    // scene.add( line );\n    scene.add( mesh );\n\n}\n\n\nfunction init() {\n\n    createScene();\n\n    container = document.getElementById( \"container\" );\n\n    //\n\n    renderer = new WebGLRenderer();\n    renderer.setPixelRatio( window.devicePixelRatio );\n    renderer.setSize( window.innerWidth, window.innerHeight );\n    container.appendChild( renderer.domElement );\n\n    //\n\n    scene = new Scene();\n\n    camera = new PerspectiveCamera( 55, window.innerWidth / window.innerHeight, 1, 20000 );\n    camera.position.set( 250, 250, 1000 );\n\n    //\n\n    light = new DirectionalLight( \"#fff8d5\", 0.8 );\n    scene.add( light );\n\n    const cubeCamera = new CubeCamera(0.2, 1, 512);\n    cubeCamera.renderTarget.texture.generateMipmaps = true;\n    cubeCamera.renderTarget.texture.minFilter = LinearMipmapLinearFilter;\n\n    scene.background = cubeCamera.renderTarget;\n\n    // Water\n\n    const waterGeometry = new PlaneBufferGeometry(10000, 10000);\n    if (EFFECTS)\n    {\n        water = new Water(\n            waterGeometry,\n            {\n                textureWidth: 512,\n                textureHeight: 512,\n                waterNormals,\n                alpha: 0.6,\n                sunDirection: light.position.clone().normalize(),\n                sunColor: \"#fff8d5\",\n                waterColor: \"#000e1e\",\n                distortionScale: 2.5,\n                fog: true\n            }\n        );\n        water.rotation.x = - Math.PI / 2;\n        scene.add( water );\n    }\n    else\n    {\n        const material = new MeshStandardMaterial({\n            side: FrontSide,\n            color: \"#048\",\n            envMap: cubeCamera.renderTarget.texture,\n            roughness: 0.0\n        });\n\n        const mesh = new Mesh( waterGeometry, material );\n        mesh.rotation.x = - Math.PI / 2;\n        scene.add(mesh)\n    }\n\n\n    const parameters = {\n        distance: 1000,\n        inclination: 0.05,\n        azimuth: 0.25\n    };\n\n    // Skybox\n\n    let sky;\n    if (EFFECTS)\n    {\n        sky = new Sky();\n\n        const uniforms = sky.material.uniforms;\n\n        uniforms[ \"turbidity\" ].value = 5;\n        uniforms[ \"rayleigh\" ].value = 1.5;\n        uniforms[ \"luminance\" ].value = 1;\n        uniforms[ \"mieCoefficient\" ].value = 0.05;\n        uniforms[ \"mieDirectionalG\" ].value = 0.9;\n\n\n        envMap = cubeCamera.renderTarget.texture\n\n        updateSun();\n    }\n    else\n    {\n        envMap = null;\n    }\n\n    function updateSun() {\n\n        const theta = Math.PI * (parameters.inclination - 0.5);\n        const phi = 2 * Math.PI * (parameters.azimuth - 0.5);\n\n        light.position.x = parameters.distance * Math.cos( phi );\n        light.position.y = parameters.distance * Math.sin( phi ) * Math.sin( theta );\n        light.position.z = parameters.distance * Math.sin( phi ) * Math.cos( theta );\n\n        sky.material.uniforms[ \"sunPosition\" ].value = light.position.copy( light.position );\n        water && water.material.uniforms[ \"sunDirection\" ].value.copy( light.position ).normalize();\n\n        cubeCamera.update( renderer, sky );\n\n    }\n\n\n\n    controls = new OrbitControls( camera, renderer.domElement );\n    controls.maxPolarAngle = Math.PI * 0.45;\n    controls.target.set( 0, 0, 0 );\n    controls.minDistance = 40.0;\n    controls.maxDistance = 1000.0;\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.02;\n    controls.update();\n\n    // stats = new Stats();\n    // container.appendChild( stats.dom );\n\n    // GUI\n\n    //const gui = new GUI();\n\n    // const folder = gui.addFolder( \"Sky\" );\n    // folder.add( parameters, \"inclination\", 0, 0.5, 0.0001 ).onChange( updateSun );\n    // folder.add( parameters, \"azimuth\", 0, 1, 0.0001 ).onChange( updateSun );\n    // folder.open();\n    //\n    // const uniforms = water.material.uniforms;\n    //\n    // const folder = gui.addFolder( \"Water\" );\n    // folder.add( uniforms.distortionScale, \"value\", 0, 8, 0.1 ).name( \"distortionScale\" );\n    // folder.add( uniforms.size, \"value\", 0.1, 10, 0.1 ).name( \"size\" );\n    // folder.add( uniforms.alpha, \"value\", 0.9, 1, .001 ).name( \"alpha\" );\n    // folder.open();\n\n\n    window.addEventListener( \"resize\", onWindowResize, false );\n\n    ////////////////\n    \n    addHeightMap();\n\n}\n\nfunction onWindowResize() {\n\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n\n    renderer.setSize( window.innerWidth, window.innerHeight );\n\n}\n\nfunction mainLoop() {\n\n    render();\n    //stats.update();\n    controls.update()\n    raf( mainLoop );\n\n}\n\nfunction render() {\n\n    const time = performance.now() * 0.001;\n\n    // sphere.position.y = Math.sin( time ) * 5 + 1;\n    // sphere.rotation.x = time * 0.5;\n    // sphere.rotation.z = time * 0.51;\n\n    if (water)\n    {\n        water.material.uniforms[ \"time\" ].value += 1.0 / 60.0;\n    }\n\n    renderer.render( scene, camera );\n\n}\n\n\nlet waterNormals;\n\n\nfunction extractMarchingSquares(scene)\n{\n    const { children } = scene;\n\n    const map = new Map();\n\n    for (let i = 0; i < children.length; i++)\n    {\n        const kid = children[i];\n        if (kid.name.indexOf(\"case-\") === 0)\n        {\n            map.set(kid.name, kid);\n        }\n    }\n    return map;\n}\n\n\nPromise.all([\n0,//        loadScene(\"assets/tiles.glb\"),\n0,//        loadScene(\"assets/ground.glb\"),\n        loadScene(\"assets/ms.glb\"),\n        loadScene(\"assets/ms-raised.glb\"),\n        loadTexture(\"assets/waternormals.jpg\")\n    ])\n    .then(([\n        tiles,\n        ground,\n        marchingSquares,\n        marchingSquaresRaised,\n        tWaterNormals\n        ]) => {\n\n        //scene.add( tiles.scene );\n\n        function dump(obj, level = \"\")\n        {\n            const { type }  = obj;\n            if (type === \"Group\")\n            {\n                console.log(level + \"GROUP\", obj.name)\n\n                const nextLevel = level + \"    \"\n\n                const { children }  = obj;\n                for (let i = 0; i < children.length; i++)\n                {\n                    dump(children[i], nextLevel);\n                }\n            }\n            else if (type === \"Mesh\")\n            {\n                console.log(level + \"MESH\", obj.name)\n            }\n        }\n\n        console.log({ground});\n\n\n        // const msMap = extractMarchingSquares(marchingSquares.scene);\n        // const msMapRaised = extractMarchingSquares(marchingSquaresRaised.scene);\n        //\n        // console.log({msMap, msMapRaised})\n\n        // dump(marchingSquares.scene, \"ms-normal: \");\n        // dump(marchingSquaresRaised.scene, \"ms-raised: \");\n\n        console.log(\"GLTF\", tiles)\n\n        // console.log(\"Scene Objects\", tiles.scene.children.map(kid => kid.name).join(\", \"))\n        //\n        // const obj  = tiles.scene.children.find(\n        //     kid => kid.name === \"tree_default\"\n        // );\n\n        tWaterNormals.wrapS = tWaterNormals.wrapT = RepeatWrapping;\n        waterNormals = tWaterNormals;\n\n        // tiles.animations; // Array<AnimationClip>\n        // tiles.scene; // Group\n        // tiles.scenes; // Array<Group>\n        // tiles.cameras; // Array<Camera>\n        // tiles.asset; // Object\n\n        // ReactDOM.render(\n        //     <Game/>,\n        //     document.getElementById(\"root\")\n        // )\n\n        init();\n        mainLoop();\n    })\n\n\n\n","\n// Instantiate a loader\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\n\nconst loader = new GLTFLoader();\n\nexport default function(url, onProgress = null)\n{\n    return new Promise(((resolve, reject) => {\n        // Load a glTF resource\n        loader.load(\n            // resource URL\n            url,\n            // called when the resource is loaded\n            resolve,\n            // called while loading is progressing\n            onProgress,\n            // called when loading has errors\n            reject\n        );\n\n    }))\n}\n","// Instantiate a loader\nimport { TextureLoader } from \"three\";\n\nconst loader = new TextureLoader();\n\nexport default function(url, onProgress = null)\n{\n    return new Promise(((resolve, reject) => {\n        // Load a glTF resource\n        loader.load(\n            // resource URL\n            url,\n            // called when the resource is loaded\n            resolve,\n            // called while loading is progressing\n            onProgress,\n            // called when loading has errors\n            reject\n        );\n\n    }))\n}\n","// extracted by mini-css-extract-plugin"],"sourceRoot":""}