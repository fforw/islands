{"version":3,"sources":["webpack://App/webpack/bootstrap","webpack://App/./src/constants.js","webpack://App/./src/editor/Grid.js","webpack://App/./src/editor/EditorUI.js","webpack://App/./src/editor/EditorState.js","webpack://App/./src/editor/default-tiles.js","webpack://App/./src/editor/Cursor.js","webpack://App/./src/editor/TileInstance.js","webpack://App/./src/util/download.js","webpack://App/./src/util/findNamed.js","webpack://App/./src/editor/prepareTiles.js","webpack://App/./src/editor/editor.js","webpack://App/./src/editor/loadInstanceJSON.js","webpack://App/./src/loadScene.js","webpack://App/./src/util/threeJsThumbnailer.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","WATER","SAND","GRASS","FOREST","STONE","DIRT","UNDEFINED","MATERIAL_NAMES","CASE_NAMES","GROUND_COLORS","TAU","Math","PI","PHI","sqrt","numMaterials","Grid","size","scene","materials","this","Float64Array","offsets","x","y","dx","dy","index","rotateEvery","rotateCount","flag","group","Group","curr","geo","PlaneBufferGeometry","mat","clone","side","DoubleSide","mesh","Mesh","position","set","add","tmp","rotation","material","tx","ty","tile","cleanFn","gridSize","sizeX","sizeZ","rotationIndex","posX","posY","directions","matOff","clean","indexes","Array","lineDx","lineDy","offset","pattern","instance","setTile","SelectButton","elem","active","onClick","ref","useRef","useEffect","current","appendChild","type","className","cx","SizeBadge","memo","sizeY","style","visibility","EditorUI","observer","editorState","download","clearAll","tiles","visible","activeTileIndex","activeTile","dirty","accessKey","toggleVisible","onFocusCapture","map","idx","selectTile","thumbnail","title","confirm","EditorState","action","bound","observable","DEFAULT_TILES","VALID_COLOR","Color","INVALID_COLOR","Cursor","grid","raycaster","Raycaster","lineMat","LineBasicMaterial","color","linewidth","depthTest","opacity","transparent","points","Vector3","border","Line","BufferGeometry","setFromPoints","insidePlane","MeshBasicMaterial","cursor","createCursorGeometry","valid","children","mouse","camera","setFromCamera","intersects","intersectObjects","substr","point","offX","offY","floor","z","setValid","objectX","objectY","idCounter","TileInstance","id","createObject","variants","variant","random","newObject","scale","copy","remove","filename","text","mediaType","element","document","createElement","setAttribute","encodeURIComponent","display","body","click","removeChild","findNamed","array","e","createEmptyThumbnail","canvas","width","thumbnailWidth","height","thumbnailHeight","ctx","getContext","lineWidth","strokeStyle","fillStyle","hw","hh","min","beginPath","moveTo","lineTo","rect","stroke","fillText","container","renderer","light","controls","uiContainer","cubeCamera","sky","instances","Set","skyParameters","getWidth","innerWidth","onDocumentMouseMove","event","preventDefault","clientX","clientY","innerHeight","Vector2","onWindowResize","aspect","updateProjectionMatrix","setSize","mainLoop","update","ghost","performance","now","render","raf","convertTimestamp","timestamp","Date","loadInstances","json","localStorage","getItem","JSON","parse","loadFromLocalStorage","getTime","inputData","console","info","rawInstances","notFound","raw","log","loadInstanceJSON","getCurrentInstancesAsJSON","stringify","version","toISOString","timerId","history","historyPos","historyEnd","debouncedSync","setDirty","clearTimeout","setTimeout","sync","setItem","onCanvasClick","ev","removed","indexOf","clearTile","removeObject","delete","addHistoryEntry","added","newEntry","onKeyDown","keyCode","shiftKey","ctrlKey","redo","undo","Promise","all","loadScene","then","tilesGLTF","pos","idCount","filter","sort","a","b","forEach","isArray","Error","thumbNames","objects","threeJsThumbnailer","thumbnails","th","unshift","ground","_tiles","kid","find","getElementById","WebGLRenderer","setPixelRatio","devicePixelRatio","outputEncoding","sRGBEncoding","domElement","Scene","PerspectiveCamera","up","lookAt","DirectionalLight","CubeCamera","background","renderTarget","Sky","uniforms","texture","theta","phi","cos","sin","updateSun","OrbitControls","maxPolarAngle","target","minDistance","maxDistance","enableDamping","dampingFactor","mouseButtons","MIDDLE","MOUSE","ROTATE","RIGHT","PAN","addEventListener","resolve","reject","ReactDOM","reaction","clear","disposeMaterials","dispose","setOpacity","v","Output","KEY","loader","GLTFLoader","url","onProgress","load","names","top","left","alpha","images","box","Box3","expandByObject","max","isSmall","dist","pow","drawImage","thumbName"],"mappings":"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","file":"bundle-editor-2564f8d7b425fe24474c.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonpApp\"] = window[\"webpackJsonpApp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([40,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export const WATER = 0;\nexport const SAND = 1;\nexport const GRASS = 2;\nexport const FOREST = 3;\nexport const STONE = 4;\nexport const ICE = 5;\nexport const DIRT = 6;\nexport const PACKED_ICE = 7;\nexport const UNDEFINED = 8;\n\nexport const MATERIAL_NAMES = [\n    \"Water\", // WATER\n    \"Sand\", // SAND\n    \"Grass\", // GRASS\n    \"Forest\", // FOREST\n    \"Stone\", // STONE\n    \"Ice\", // ICE\n    \"Dirt\", // DIRT\n    \"Packed_Ice\", // PACKED_ICE\n];\nexport const CASE_NAMES = [\n    null,\n    \"case-1\",\n    \"case-2\",\n    \"case-3\",\n    \"case-4\",\n    \"case-5-1\",\n    \"case-6\",\n    \"case-7\",\n    \"case-8\",\n    \"case-9\",\n    \"case-10-1\",\n    \"case-11\",\n    \"case-12\",\n    \"case-13\",\n    \"case-14\",\n    \"case-15\",\n    \"case-m1\",\n    \"case-m2\",\n    \"case-m3\",\n    \"case-m4\",\n    \"case-5-2\",\n    \"case-10-2\"\n];\nexport const GROUND_COLORS = {\n    [WATER]: [0, 0.4, 0.8],\n    [SAND]: [0.8, 0.8, 0],\n    [GRASS]: [0, 0.7, 0],\n    [DIRT]: [0.5, 0.3, 0.1],\n    [FOREST]: [0.2, 0.5, 0.3],\n    [STONE]: [0.5, 0.5, 0.5],\n    [ICE]: [1, 1, 1],\n    [PACKED_ICE]: [1, 1, 1],\n    [UNDEFINED]: [1, 0, 1]\n}\nconst GROUND_ROUGHNESS = {\n    [WATER]: 0,\n    [SAND]: 1,\n    [GRASS]: 1,\n    [DIRT]: 1,\n    [FOREST]: 1,\n    [STONE]: 0.4,\n    [ICE]: 0.9,\n    [PACKED_ICE]: 0.8,\n    [UNDEFINED]: 0\n}\n\n\nexport const TAU = Math.PI * 2;\n\nexport const PHI = (1 + Math.sqrt(5)) / 2;\n","import { DoubleSide, Group, Mesh, PlaneBufferGeometry, Scene } from \"three\";\nimport { DIRT, TAU } from \"../constants\";\n\nexport const TILE_SIZE = 1;\n\nexport const numMaterials = DIRT;\n\nexport default class Grid\n{\n    /**\n     * Construct a new material grid.\n     *\n     * @param {Number} size         edge length of one material field (int)\n     * @param {Scene} [scene]         three.js scene\n     * @param {Array} [materials]     array with materials\n     */\n    constructor(size, scene, materials)\n    {\n        this.scene = scene;\n        this.size = size;\n\n        this.data = new Float64Array(size * size * numMaterials)\n\n        const offsets = new Float64Array(numMaterials * 2);\n        this.offsets = offsets;\n\n\n        let x = -size*TILE_SIZE/2;\n        let y = -size*TILE_SIZE/2;\n\n        let dx = 0;\n        let dy = size * TILE_SIZE;\n\n        let index = 0;\n        let rotateEvery = 1;\n        let rotateCount = rotateEvery;\n        let flag = false;\n\n            const group = new Group();\n            group.name = \"MaterialGrid\"\n\n            for (let curr = 0; curr < numMaterials; curr++)\n            {\n                offsets[index++] = x;\n                offsets[index++] = y;\n\n                //console.log(\"MATERIAL #\", curr, \"at\", x, y);\n\n                if (scene)\n                {\n                    const geo = new PlaneBufferGeometry(TILE_SIZE * size, TILE_SIZE * size, 1, 1);\n                    const mat = materials[curr].clone();\n                    mat.side = DoubleSide;\n                    const mesh = new Mesh(geo, mat);\n                    mesh.name = \"M\" + curr;\n                    mesh.position.set(x, y, 0);\n                    //mesh.rotation.y = -Math.PI\n                    group.add(mesh);\n                }\n\n\n                x += dx;\n                y += dy;\n\n                if (--rotateCount === 0)\n                {\n                    const tmp = dx;\n                    dx = -dy;\n                    dy = tmp;\n\n                    if (flag)\n                    {\n                        rotateEvery++;\n                    }\n                    flag = !flag;\n\n                    rotateCount = rotateEvery;\n                }\n            }\n\n            group.rotation.x = TAU/4;\n\n        if (scene)\n        {\n            this.group = group;\n\n            scene.add(group);\n        }\n\n    }\n\n\n    /**\n     * Sets or clears a tile or multi-tile in the grid. The given position must be a valid location to set a tile of that size.\n     *\n     * @param {Number} material                 material index\n     * @param {Number} tx                       x-position in material\n     * @param {Number} ty                       y-position in material\n     * @param {TileDefinition} tile             tile definition\n     * @param {Number} rotation                 tile rotation 0-3\n     * @param {function|boolean} [cleanFn]      callback to clean other tiles from a given offset. If not given, the method will clear the multi tile on that offset\n     */\n    setTile(material, tx, ty, tile, rotation, cleanFn = null)\n    {\n        const { size : gridSize } = this;\n        const { sizeX, sizeZ } = tile;\n\n        const rotationIndex = rotation * 2;\n\n        let posX = tx + offsets[rotationIndex] * (sizeX - 1);\n        let posY = ty + offsets[rotationIndex + 1] * (sizeZ - 1);\n\n        const dx = directions[rotationIndex];\n        const dy = directions[rotationIndex + 1];\n\n        const matOff = material * gridSize * gridSize;\n\n        const clean = !cleanFn;\n        const indexes = !clean && new Array(sizeX * sizeZ);\n\n        // correction of line plus rotated vector\n        const lineDx = - dx * sizeX - dy;\n        const lineDy = - dy * sizeZ + dx;\n\n\n        let index = 0;\n        for (let y = 0; y < sizeZ; y++)\n        {\n            for (let x = 0; x < sizeX; x++)\n            {\n                const offset = matOff + posX + posY * gridSize;\n\n                const value = tile.pattern[y * sizeX + x];\n\n                if (clean)\n                {\n                    if (this.data[offset] === value)\n                    {\n                        this.data[offset] = 0;\n                    }\n                }\n                else\n                {\n                    if (this.data[offset] !== 0)\n                    {\n                        if (typeof cleanFn === \"function\")\n                        {\n                            cleanFn(offset);\n                        }\n                    }\n                    indexes[index++] = offset;\n                    this.data[offset] = value;\n                }\n\n                posX += dx;\n                posY += dy;\n            }\n            posX += lineDx;\n            posY += lineDy;\n        }\n\n        return indexes;\n    }\n\n    clearTile(instance)\n    {\n        this.setTile(instance.material, instance.x, instance.y, instance.tile, instance.rotation, null);\n    }\n}\n\nconst offsets = [\n    0,0,\n    1,0,\n    1,1,\n    0,1\n]\n\nconst directions = [\n    1,0,\n    0,1,\n    -1,0,\n    0,-1\n]\n","import React, { memo, useEffect, useRef } from \"react\"\nimport cx from \"classnames\"\n// noinspection ES6UnusedImports\nimport STYLE from \"./ui.css\"\nimport { observer } from \"mobx-react-lite\";\n\nconst SelectButton = ({elem, index, active, onClick}) => {\n\n    const ref = useRef(null)\n\n    useEffect(() => {\n        ref.current.appendChild(elem);\n    }, [])\n\n    return (\n        <button\n            ref={ ref }\n            type=\"button\"\n            className={ cx(\"btn btn-sm m-1\", active === index ? \"btn-light\" : \"btn-default\") }\n            onClick={ onClick }\n        />\n    )\n}\n\n\nconst SizeBadge = memo(({sizeX, sizeY }) => {\n\n    return (\n        <span\n            className=\"badge badge-secondary ml-1\"\n            style={{\n                visibility: sizeX === 1 && sizeY === 1 && \"hidden\"\n            }}\n        >\n            {\n                sizeX + \"x\" + sizeY\n            }\n        </span>\n    )\n})\n\nconst EditorUI = observer(({ editorState, download, clearAll }) =>\n{\n    const { tiles, visible, activeTileIndex, activeTile, dirty } = editorState;\n\n    return (\n        <>\n            <button\n                type=\"button\"\n                accessKey=\"u\"\n                className={ cx(\"btn btn-default toggle\", visible && \"visible\") }\n                onClick={ () => editorState.toggleVisible()}\n            >\n                <i className=\"fas fa-arrows-alt-h\"/>\n\n            </button>\n            <div\n                className={ cx(\"sidebar\", visible && \"visible\") }\n                onFocusCapture={ () => editorState.toggleVisible(true)}\n\n            >\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <p className=\"form-control-plaintext border-bottom\">\n                                <strong>Island Rules Builder</strong>\n                            </p>\n                        </div>\n                    </div>\n                    <div className=\"row small\">\n                        <div className=\"col\">\n\n                            <strong>Selected:</strong>&nbsp;\n                            {\n                                activeTile.name\n                            }\n                            <SizeBadge sizeX={ activeTile.sizeX } sizeY={ activeTile.sizeZ }/>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"tile-selector flex\">\n                            {\n                                tiles.map( (tile,idx) => (\n                                    <SelectButton\n                                        key={ idx }\n                                        index={idx}\n                                        active={ activeTileIndex }\n                                        onClick={() => editorState.selectTile(idx)}\n                                        elem={ tile.thumbnail }\n                                    />\n                                ))\n                            }\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <i\n                                className={ cx(\"fas mr-1\", dirty ? \"fa-spinner rotating\" : \"fa-check\", dirty ? \"text-muted\" : \"text-success\" ) }\n                                title={ dirty ? \"Write pending\" : \"Synched to localStorage\" }\n                            />\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-sm btn-secondary mr-1\"\n                                onClick={ download }\n                                >\n                                Download JSON\n                            </button>\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-sm btn-danger mr-1\"\n                                onClick={ () =>{\n                                    if (confirm(\"Do you really want to delete all tiles?\"))\n                                    {\n                                        clearAll();\n                                    }\n                                } }\n                                >\n                                Clear\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n})\n\nexport default EditorUI\n","import { action, observable } from \"mobx\";\n\n\n/**\n * Observable editor state.\n *\n * Created and kept outside react, modified by react.\n */\nexport default class EditorState\n{\n    /**\n     * Creates a new instance\n     *\n     * @param tiles     tiles array\n     */\n    constructor(tiles)\n    {\n        this.tiles = tiles;\n    }\n\n    @observable\n    visible = true;\n\n    @observable\n    dirty = false;\n\n    @observable\n    activeTileIndex = 0;\n\n    @action\n    toggleVisible(value = !this.visible)\n    {\n        this.visible = value;\n    }\n\n\n    @action.bound\n    selectTile(tile)\n    {\n        this.activeTileIndex = tile;\n    }\n\n    @action\n    setDirty(dirty)\n    {\n        this.dirty = dirty;\n    }\n\n    get activeTile()\n    {\n        const { activeTileIndex, tiles } = this;\n        return tiles[activeTileIndex];\n    }\n}\n\n","import { Object3D } from \"three\"\n\n/**\n * @typedef {Object} TileDefinition\n *\n * @property {Array<Object3D>} variants         imported variants objects for this tile\n * @property {Number} id                        tile id. For multi-tiles the id of the upper left tile in rotation 0.\n * @property {Number} size                      tile size. default is 1\n * @property {HTMLCanvasElement} thumbnail      generated thumbnail as canvas\n *\n */\n\n\n\nexport const DEFAULT_TILES = {\n        \"cactus\": {\n            \"variants\": [\"cactus_short\", \"cactus_tall\"]\n        },\n        \"flower\": {\n            \"variants\": [\n                \"flower_purpleA\",\n                \"flower_purpleB\",\n                \"flower_purpleC\",\n                \"flower_redA\",\n                \"flower_redB\",\n                \"flower_redC\",\n                \"flower_yellowA\",\n                \"flower_yellowB\",\n                \"flower_yellowC\"\n            ]\n        },\n        \"stone_large\": {\n            \"variants\": [\"stone_largeD\", \"stone_largeE\", \"stone_largeF\"]\n        },\n        \"stone_small\": {\n            \"variants\": [\"stone_smallD\"]\n        },\n        \"palm_tree\": {\n            \"variants\": [\"tree_palmDetailedTall\", \"tree_palmShort\", \"tree_palmTall\"]\n        },\n        \"pine\": {\n            \"variants\": [\"tree_pineRoundD\", \"tree_pineTallC_detailed\", \"tree_pineTallD\"]\n        },\n        \"tree_plateau\": {\n            \"variants\": [\"tree_plateau\"]\n        },\n        \"tree_tall_dark\": {\n            \"variants\": [\"tree_tall_dark\"]\n        },\n        \"tree_thin\": {\n            \"variants\": [\"tree_thin\"]\n        },\n        \"house\": {\n            \"variants\": [\"House\"],\n            \"sizeX\" : 3,\n            \"sizeY\" : 2,\n            \"sizeZ\" : 3,\n            \n            \"idCount\" : 2,\n            \"pattern\" : [\n                1,1,1,\n                1,0,1,\n                1,1,1\n            ]\n        }\n    }\n;\n\n","import {\n    Color, Group,\n    Line,\n    LineBasicMaterial,\n    Mesh,\n    MeshBasicMaterial,\n    PlaneBufferGeometry,\n    Raycaster,\n    Vector3\n} from \"three\";\nimport { BufferGeometry } from \"three/src/core/BufferGeometry\";\nimport { TAU } from \"../constants\";\nimport { TILE_SIZE } from \"./Grid\";\n\nconst VALID_COLOR = new Color(\"#fff\");\nconst INVALID_COLOR = new Color(\"#ff3c78\");\n\nfunction createCursorGeometry()\n{\n    const lineMat = new LineBasicMaterial({\n        color: 0x000000,\n        linewidth: 1.5,\n        depthTest: false,\n        opacity: 0.5,\n        transparent: true\n    });\n\n    const points = [];\n    points.push(new Vector3(-0.5, 0, -0.5));\n    points.push(new Vector3(0.5, 0, -0.5));\n    points.push(new Vector3(0.5, 0, 0.5));\n    points.push(new Vector3(-0.5, 0, 0.5));\n    points.push(new Vector3(-0.5, 0, -0.5));\n\n    const border = new Line(\n        new BufferGeometry().setFromPoints(points),\n        lineMat\n    );\n\n    const insidePlane = new Mesh(\n        new PlaneBufferGeometry(\n            1,\n            1\n        ),\n        new MeshBasicMaterial({\n            color: 0xffffff,\n            depthTest: false,\n            opacity: 0.2,\n            transparent: true\n        })\n    );\n    insidePlane.rotation.x = -TAU / 4;\n\n    const cursor = new Group();\n    cursor.add(insidePlane)\n    cursor.add(border)\n\n    return cursor;\n}\n\n/**\n * Encapsulates the cursor 3D objects and hold the current selection position etc\n */\nexport default class Cursor\n{\n    constructor(scene, grid, editorState)\n    {\n        this.grid = grid;\n        this.editorState = editorState;\n\n        this.raycaster = new Raycaster();\n        this.material = 0;\n        this.current = null;\n\n        this.object = createCursorGeometry();\n        this.valid = false;\n\n        scene.add( this.object );\n\n    }\n\n    setValid(valid)\n    {\n        this.valid = !!valid;\n        this.object.children[0].material.color = valid ? VALID_COLOR : INVALID_COLOR;\n        this.object.children[0].material.opacity = valid ? 0.2 : 0.8;\n    }\n\n    update(mouse, camera)\n    {\n        const { grid, raycaster, object, editorState } = this;\n\n        raycaster.setFromCamera( mouse, camera );\n\n        const intersects = raycaster.intersectObjects( grid.group.children );\n\n        if (intersects.length > 0)\n        {\n\n            if (this.current !== intersects[0].object)\n            {\n\n                //if ( INTERSECTED ) INTERSECTED.material.emissive.setHex( INTERSECTED.currentHex );\n                this.current = intersects[0].object;\n                this.material = +this.current.name.substr(1);\n            }\n\n            const { point } = intersects[0];\n            const { sizeX, sizeY, sizeZ } = editorState.activeTile;\n\n            const matOff = this.material * 2;\n\n            const offX = grid.offsets[matOff];\n            const offY = grid.offsets[matOff + 1];\n\n            // pos on current material (0 to grid.size - cursor_size )\n            const x = Math.floor((point.x - offX ) / TILE_SIZE) + grid.size/2;\n            const y = Math.floor((point.z - offY ) / TILE_SIZE) + grid.size/2;\n\n            const valid =  x + sizeX <= grid.size && y + sizeZ <= grid.size;\n            this.setValid(valid);\n\n            const objectX = offX + (x - grid.size/2) * TILE_SIZE + sizeX / 2;\n            const objectY = offY + (y - grid.size/2) * TILE_SIZE + sizeZ / 2;\n\n            if (object.position.x !== objectX || object.position.z !== objectY)\n            {\n                //console.log(\"Material\", this.material, \"pos\", x, y)\n\n                this.x = x;\n                this.y = y;\n\n                object.position.set(\n                    objectX,\n                    0,\n                    objectY\n                );\n            }\n\n            this.object.visible = true;\n        }\n        else\n        {\n            this.object.visible = false;\n            this.valid = false;\n            this.current = null;\n        }\n\n    }\n}\n","import { TILE_SIZE } from \"./Grid\";\n\nimport { Scene, Vector3 } from \"three\"\nimport { TAU } from \"../constants\";\n\n\nlet idCounter = 0;\n\nexport default class TileInstance\n{\n    scene;\n    tile;\n    position;\n    object = null;\n    indexes = null;\n\n    /**\n     *  Creates a new tile instance\n     *\n     * @param {Scene} scene             three.js scene\n     * @param {TileDefinition} tile     tile definition\n     * @param {Vector3} position        position of the tile\n     * @param {number} rotation         tile rotation (0-3)\n     * @param {Number} material         material index\n     * @param {Number} x                tile x\n     * @param {Number} y                tile y\n     */\n    constructor(scene, tile, position, rotation, material, x, y)\n    {\n        this.id = ++idCounter;\n\n        this.scene = scene;\n        this.tile = tile;\n        this.position = position.clone();\n        this.rotation = rotation;\n\n        this.material = material;\n        this.x = x;\n        this.y = y;\n\n        if (scene)\n        {\n            this.createObject();\n        }\n    }\n\n    createObject()\n    {\n        const { tile, scene, position, rotation } = this;\n        const { variants } = tile;\n\n        this.variant = Math.random() * variants.length|0;\n\n        const newObject = variants[this.variant].clone();\n        newObject.scale.set(TILE_SIZE, TILE_SIZE, TILE_SIZE)\n        newObject.position.copy(position)\n\n        newObject.rotation.y = TAU * rotation / 4;\n\n        this.object = newObject;\n        scene.add(newObject);\n    }\n\n    removeObject()\n    {\n        const { scene, object } = this;\n\n        if (object)\n        {\n            scene.remove(object);\n            this.object = null;\n        }\n    }\n\n}\n","/**\n * HTML5 Helper function to trigger a text file download from javascript\n *\n * @param {string} filename         default filename for the client\n * @param {string} text             text context\n * @param {String} [mediaType]      media type to export file as (default \"text/plain\")\n */\nexport default function (filename, text, mediaType = \"text/plain\")\n{\n    const element = document.createElement(\"a\");\n    element.setAttribute(\"href\", \"data:\" + mediaType+ \";charset=utf-8,\" + encodeURIComponent(text));\n    element.setAttribute(\"download\", filename);\n    element.style.display = \"none\";\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n}\n","/**\n * Finds a named element\n *\n * @param array     array of elements\n * @param name      name\n * @return {?Object} element or null\n */\nexport default function findNamed(array, name)\n{\n    for (let i = 0; i < array.length; i++)\n    {\n        const e = array[i];\n        if (e.name === name)\n        {\n            return e;\n        }\n    }\n    return null;\n}\n","import { DEFAULT_TILES } from \"./default-tiles\";\nimport threeJsThumbnailer from \"../util/threeJsThumbnailer\";\n\n\nexport function getMaxId(tiles)\n{\n    return tiles[tiles.length - 1].id + tiles[tiles.length - 1].idCount;\n}\n\nfunction createEmptyThumbnail()\n{\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = thumbnailWidth;\n    canvas.height = thumbnailHeight;\n    const ctx = canvas.getContext(\"2d\");\n\n    ctx.lineWidth = 4;\n    ctx.strokeStyle = \"rgba(255,64,64,0.5)\";\n    ctx.fillStyle = \"#fff\";\n\n    const hw = thumbnailWidth * 0.5;\n    const hh = thumbnailHeight * 0.5;\n    const size = Math.min(hh,hw) * 0.3;\n\n    ctx.beginPath();\n    ctx.moveTo(-size + hw,-size + hh);\n    ctx.lineTo( size + hw, size + hh);\n    ctx.moveTo( size + hw,-size + hh);\n    ctx.lineTo(-size + hw, size + hh);\n    ctx.rect(0,0,thumbnailWidth,thumbnailHeight)\n    ctx.stroke();\n\n    ctx.fillText(\"None\", 4, thumbnailHeight - 4);\n    return canvas;\n}\n    \nconst thumbnailWidth = 40;\nconst thumbnailHeight = thumbnailWidth / 0.75;\n\nexport default function prepareTiles(tilesGLTF)\n{\n    const tiles = [];\n\n    let pos = 0;\n    for (let name in DEFAULT_TILES)\n    {\n        if (DEFAULT_TILES.hasOwnProperty(name))\n        {\n            const raw = DEFAULT_TILES[name];\n            const { variants, sizeX = 1, sizeY = 1, sizeZ = 1 } = raw;\n            tiles[pos] = {\n                ... raw,\n                \n                id: -1,\n                idCount: raw.idCount || 1,\n                name,\n                sizeX,\n                sizeY,\n                sizeZ,\n                variants: tilesGLTF ? tilesGLTF.scene.children.filter(o => variants.indexOf(o.name) >= 0) : variants,\n                thumbnail: null\n            };\n            pos++;\n        }\n    }\n\n    tiles.sort((a, b) => a.name === b.name ? 0 : a.name < b.name ? -1 : 1);\n\n    // provide ids\n    let idCounter = 1;\n    tiles.forEach(t => {\n\n        const { name, idCount, pattern, sizeX, sizeZ } = t;\n\n        t.id = idCounter;\n        idCounter += idCount;\n\n        if (idCount > 1)\n        {\n            if (!pattern || !Array.isArray(pattern))\n            {\n                throw new Error(\"Tile '\" + name + \"': tiles with idCount > 1 must define a pattern\");\n            }\n\n            const size = sizeX * sizeZ;\n            if (pattern.length !== size)\n            {\n                throw new Error(\"Tile '\" + name + \"': Pattern must be \" + sizeX + \" x \" + sizeZ + \" = \" + size + \" elements long: \" + pattern);\n            }\n\n            for (let i = 0; i < pattern.length; i++)\n            {\n                pattern[i] += t.id;\n            }\n        }\n        else\n        {\n            // create 1x1 \"pattern\"\n            t.pattern = [ t.id ];\n        }\n    });\n\n    if (tilesGLTF)\n    {\n        const thumbNames = [];\n        const objects = [];\n\n        tiles.forEach((t, idx) => {\n            thumbNames[idx] = t.name;\n            objects[idx] = t.variants[0];\n        });\n\n        //console.log({objects, thumbNames, tiles})\n\n        return threeJsThumbnailer(\n            objects,\n            thumbnailWidth,\n            thumbnailHeight,\n            thumbNames\n        ).then(thumbnails => {\n\n            thumbnails.forEach((th, idx) => tiles[idx].thumbnail = th);\n\n            tiles.unshift({\n                id: 0,\n                idCount: 1,\n                name: \"empty\",\n                variants: [],\n                sizeX: 1,\n                sizeY: 0.1,\n                sizeZ: 1,\n                thumbnail: createEmptyThumbnail(),\n                pattern: [0]\n            });\n\n            return tiles;\n        })\n    }\n    else\n    {\n        tiles.unshift({\n            id: 0,\n            name: \"empty\",\n            variants: [],\n            sizeX: 1,\n            sizeY: 0.1,\n            sizeZ: 1,\n            thumbnail: null\n        });\n\n\n        return tiles;\n    }\n\n}\n","import raf from \"raf\"\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\n// noinspection ES6UnusedImports\nimport STYLE from \"../style.css\"\nimport {\n    CubeCamera,\n    DirectionalLight,\n    MOUSE,\n    PerspectiveCamera,\n    Scene,\n    sRGBEncoding,\n    Vector2,\n    Vector3,\n    WebGLRenderer\n} from \"three\"\nimport loadScene from \"../loadScene\";\nimport { MATERIAL_NAMES } from \"../constants\";\nimport Grid, { TILE_SIZE } from \"./Grid\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { Sky } from \"three/examples/jsm/objects/Sky\";\nimport EditorUI from \"./EditorUI\";\nimport EditorState from \"./EditorState\";\nimport { reaction } from \"mobx\";\nimport \"mobx-react-lite/batchingForReactDom\"\nimport threeJsThumbnailer from \"../util/threeJsThumbnailer\";\nimport { DEFAULT_TILES } from \"./default-tiles\";\nimport Cursor from \"./Cursor\";\nimport TileInstance from \"./TileInstance\";\n\nimport inputData from \"../../input.json\"\nimport download from \"../util/download\";\nimport loadInstanceJSON from \"./loadInstanceJSON\";\nimport prepareTiles from \"./prepareTiles\";\n\nconst TAU = Math.PI * 2;\n\n// maximum coverage a tile kind can have in the editor.\nconst TILE_MAXIMUM = 0.5;\n\nconst GRID_SIZE = 12;\n\n//////////////////////////////////////////////////////////////////////\n\nconst LOCAL_STORAGE_KEY =\"@fforw/islands:data\"\n\nconst HISTORY_LIMIT = 32;\nlet container, stats, grid;\nlet camera, scene, renderer, light;\nlet controls, water;\n\nlet instances = new Set();\n\nlet materials, cursor;\n\nlet uiContainer;\n\nconst sidebarWidth = 220;\n\n\nconst skyParameters = {\n    distance: 1000,\n    inclination: 0.1,\n    azimuth: 0.1\n};\n\nlet cubeCamera, sky;\n\nfunction getWidth()\n{\n    return window.innerWidth - (editorState.visible ?  sidebarWidth : 0);\n}\n\n\nfunction onDocumentMouseMove( event ) {\n\n    event.preventDefault();\n\n    mouse.x = ( event.clientX / getWidth() ) * 2 - 1;\n    mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\n\n}\nlet mouse = new Vector2(100,0)\n\nfunction onWindowResize()\n{\n\n    camera.aspect = getWidth() / window.innerHeight;\n    camera.updateProjectionMatrix();\n\n    renderer.setSize(getWidth(), window.innerHeight);\n\n}\n\nfunction mainLoop()\n{\n    cursor.update(mouse, camera);\n\n    if (ghost)\n    {\n        ghost.rotation.y = TAU * rotation / 4;\n        ghost.position.copy(cursor.object.position);\n    }\n\n    render();\n\n    if (controls)\n    {\n        controls.update()\n    }\n    raf(mainLoop);\n\n}\n\n\nfunction render()\n{\n\n    const time = performance.now() * 0.0001;\n\n    // sphere.position.y = Math.sin( time ) * 5 + 1;\n    // sphere.rotation.x = time * 0.5;\n    // sphere.rotation.z = time * 0.51;\n\n    renderer.render(scene, camera);\n}\n\nconst tiles = [];\nlet envMap;\n\nfunction updateSun()\n{\n\n    if (!sky)\n    {\n        return;\n    }\n\n    const theta = Math.PI * (skyParameters.inclination - 0.5);\n    const phi = 2 * Math.PI * (skyParameters.azimuth - 0.5);\n\n    light.position.x = skyParameters.distance * Math.cos(phi);\n    light.position.y = skyParameters.distance * Math.sin(phi) * Math.sin(theta);\n    light.position.z = skyParameters.distance * Math.sin(phi) * Math.cos(theta);\n\n    sky.material.uniforms[\"sunPosition\"].value = light.position.copy(light.position);\n    water && water.material.uniforms[\"sunDirection\"].value.copy(light.position).normalize();\n\n    cubeCamera.update(renderer, sky);\n\n}\n\n\n\n\nfunction convertTimestamp(data)\n{\n    const { timestamp } = data;\n\n    if (typeof timestamp === \"string\")\n    {\n        data.timestamp = new Date(timestamp);\n    }\n}\n\n\nconvertTimestamp(inputData);\n\nfunction loadFromLocalStorage()\n{\n    const json = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (!json)\n    {\n        return null;\n    }\n\n    const data = JSON.parse(json);\n    convertTimestamp(data);\n    return data;\n}\n\n\n\n\nfunction loadInstances()\n{\n    let data = loadFromLocalStorage();\n\n    if (!data || data.timestamp.getTime() < inputData.timestamp.getTime())\n    {\n        console.info(\"Loading input JSON\");\n        data = inputData;\n    }\n    else\n    {\n        console.info(\"Loading from localStorage\");\n    }\n\n    return loadInstanceJSON(data, tiles, grid, instances, scene);\n}\n\nfunction getCurrentInstancesAsJSON()\n{\n    return JSON.stringify(\n        {\n            version: 1,\n            timestamp: new Date().toISOString(),\n            instances: [ ... instances].map( i => ({\n                name: i.tile.name,\n                position: [\n                    i.position.x,\n                    i.position.y,\n                    i.position.z\n                ],\n                rotation: i.rotation,\n                material: i.material,\n                //indexes: i.indexes,\n                x: i.x,\n                y: i.y\n            }))\n        },\n        null,\n        4\n    );\n}\n\nlet history = [];\nlet historyPos = 0;\nlet historyEnd = 0;\n\nlet timerId;\n\nfunction debouncedSync()\n{\n    editorState.setDirty(true);\n\n    if (timerId)\n    {\n        clearTimeout(timerId);\n        timerId = null;\n    }\n\n    timerId = setTimeout(sync, 1000);\n}\n\nfunction sync()\n{\n    timerId = null;\n    editorState.setDirty(false);\n    localStorage.setItem(LOCAL_STORAGE_KEY, getCurrentInstancesAsJSON())\n}\n\n\nfunction onCanvasClick(ev)\n{\n    const { activeTile } = editorState;\n\n    if (cursor.valid)\n    {\n        const instance = activeTile.id !== 0 ? new TileInstance(\n            scene,\n            activeTile,\n            ghost.position,\n            rotation,\n            cursor.material,\n            cursor.x,\n            cursor.y\n        ) : null;\n\n        const removed = [];\n\n        const indexes = grid.setTile(cursor.material, cursor.x, cursor.y, activeTile, rotation, offset => {\n\n            for (let curr of instances)\n            {\n                if (curr.indexes.indexOf(offset) >= 0)\n                {\n                    grid.clearTile(curr);\n                    curr.removeObject();\n                    removed.push(curr);\n                    instances.delete(curr)\n                    break;\n                }\n            }\n        })\n\n        if (instance)\n        {\n            instance.indexes = indexes;\n            instances.add(instance);\n        }\n        addHistoryEntry(instance, removed);\n\n\n        debouncedSync();\n\n    }\n}\n\nfunction addHistoryEntry(added, removed)\n{\n    const newEntry = {\n        added,\n        removed\n    };\n\n    if (historyPos < HISTORY_LIMIT)\n    {\n        history[historyPos++] = newEntry;\n        historyEnd = historyPos;\n    }\n    else\n    {\n        for (let i = 0; i < historyPos; i++)\n        {\n            history[i] = history[i + 1];\n        }\n        history[historyPos] = newEntry;\n    }\n\n    //console.log(\"after addHistoryEntry: newEntry = \", newEntry, \"grid.data = \",grid.data, \"history = \", history)\n\n}\n\nfunction redo()\n{\n    if (historyPos < historyEnd)\n    {\n        //console.log(\"REDO\", history, historyPos)\n\n        const { added, removed } = history[historyPos++];\n\n        if (added)\n        {\n            grid.setTile(added.material, added.x, added.y, added.tile, added.rotation, true);\n            added.createObject();\n\n            instances.add(added)\n        }\n\n        if (removed)\n        {\n            for (let i = 0; i < removed.length; i++)\n            {\n                const instance = removed[i];\n                grid.clearTile(instance);\n                instance.removeObject();\n\n                instances.delete(instance)\n            }\n        }\n\n        debouncedSync();\n\n    }\n}\n\n\nfunction undo()\n{\n    if (historyPos > 0)\n    {\n        //console.log(\"UNDO\")\n\n        const { added, removed } = history[--historyPos];\n\n        if (added)\n        {\n            grid.clearTile(added);\n            added.removeObject();\n            instances.delete(added)\n        }\n\n        if (removed)\n        {\n            for (let i = 0; i < removed.length; i++)\n            {\n                const instance = removed[i];\n                grid.setTile(instance.material, instance.x, instance.y, instance.tile, instance.rotation, true);\n                instance.createObject();\n                instances.add(instance)\n            }\n        }\n\n        debouncedSync();\n\n    }\n}\n\n\nfunction onKeyDown(ev)\n{\n    const { keyCode } = ev;\n\n    if (keyCode === 82) // R / shift-R\n    {\n         rotation = (rotation + (ev.shiftKey ? 1 : -1)) & 3;\n    }\n    else if (keyCode === 90 && ev.ctrlKey) // ctrl+Z / ctrl+shift+Z\n    {\n        if (ev.shiftKey)\n        {\n            redo();\n        }\n        else\n        {\n            undo();\n        }\n    }\n\n}\n\n\nPromise.all([\n    loadScene(\"assets/ground.glb\"),\n    loadScene(\"assets/tiles.glb\").then( prepareTiles )\n])\n    .then(([ ground, _tiles  ]) => {\n\n        tiles.push(...  _tiles);\n\n        console.log({tiles});\n\n        materials = MATERIAL_NAMES.map(n => {\n            const kid = ground.scene.children.find(kid => kid.name === n);\n            if (!kid)\n            {\n                throw new Error(\"Could not find \" + n);\n            }\n            return kid.material;\n        })\n\n\n        //dump(_tiles.scene, \"_tiles: \")\n        //console.log(materials);\n\n\n        document.title += \" Rule Editor\"\n\n        container = document.getElementById(\"container\");\n\n        renderer = new WebGLRenderer();\n        renderer.setPixelRatio(window.devicePixelRatio);\n        renderer.setSize(getWidth(), window.innerHeight);\n\n        renderer.outputEncoding = sRGBEncoding\n\n        container.appendChild(renderer.domElement);\n\n        uiContainer = document.createElement(\"div\");\n        uiContainer.setAttribute(\"id\", \"root\");\n        container.appendChild(uiContainer)\n\n        scene = new Scene();\n\n        camera = new PerspectiveCamera(55, getWidth() / window.innerHeight, 1, 20000);\n        camera.up.set(0,1,0);\n\n        const dist = 35;\n\n        camera.position.set(-dist, dist, 0);\n        camera.lookAt(new Vector3(0,0,0));\n        camera.updateProjectionMatrix();\n\n        light = new DirectionalLight(\"#fff8d5\", 1.4);\n        scene.add(light);\n\n        cubeCamera = new CubeCamera(0.2, 1, 512);\n        // cubeCamera.renderTarget.texture.generateMipmaps = true;\n        // cubeCamera.renderTarget.texture.minFilter = LinearMipmapLinearFilter;\n\n        scene.background = cubeCamera.renderTarget;\n\n        sky = new Sky();\n\n        const uniforms = sky.material.uniforms;\n\n        // uniforms[\"turbidity\"].value = 5;\n        // uniforms[\"rayleigh\"].value = 1.2;\n        // uniforms[\"luminance\"].value = 1;\n        // uniforms[\"mieCoefficient\"].value = 0.05;\n        // uniforms[\"mieDirectionalG\"].value = 0.9;\n\n        envMap = cubeCamera.renderTarget.texture\n\n\n        updateSun();\n\n\n        // stats = new Stats();\n        // container.appendChild( stats.dom );\n\n        // GUI\n\n        //const gui = new GUI();\n\n        // const folder = gui.addFolder( \"Sky\" );\n        // folder.add( skyParameters, \"inclination\", 0, 0.5, 0.0001 ).onChange( updateSun );\n        // folder.add( skyParameters, \"azimuth\", 0, 1, 0.0001 ).onChange( updateSun );\n        // folder.open();\n        //\n        // const uniforms = water.material.uniforms;\n        //\n        // const folder = gui.addFolder( \"Water\" );\n        // folder.add( uniforms.distortionScale, \"value\", 0, 8, 0.1 ).name( \"distortionScale\" );\n        // folder.add( uniforms.size, \"value\", 0.1, 10, 0.1 ).name( \"size\" );\n        // folder.add( uniforms.alpha, \"value\", 0.9, 1, .001 ).name( \"alpha\" );\n        // folder.open();\n\n\n        // const { children } = _tiles.scene;\n        //\n        // for (let i = 1; i < children.length; i++)\n        // {\n        //     const child = children[i];\n        //     console.log(\"ADD\", child)\n        //     scene.add(child.clone());\n        // }\n\n        // const plane = new PlaneBufferGeometry(1000,1000,1,1);\n        //\n        // planeMesh = new Mesh(plane, materials[0]);\n        // planeMesh.rotation.x = TAU/4;\n        // scene.add(planeMesh)\n\n\n        controls = new OrbitControls(camera, renderer.domElement);\n        //controls.maxPolarAngle = Math.PI * 0.45;\n        controls.maxPolarAngle = Math.PI;\n        controls.target.set(0, 0, 0);\n        controls.minDistance = 0.0;\n        controls.maxDistance = 1500.0;\n        controls.enableDamping = true;\n        controls.dampingFactor = 0.02;\n        controls.mouseButtons = {\n            MIDDLE: MOUSE.ROTATE,\n            RIGHT: MOUSE.PAN\n        }\n        controls.update();\n\n        grid = new Grid( GRID_SIZE, scene, materials);\n        cursor = new Cursor(scene, grid, editorState);\n        cursor.update(mouse,camera)\n\n        document.addEventListener( 'mousemove', onDocumentMouseMove, false );\n        document.addEventListener( 'keydown', onKeyDown, false );\n\n        window.addEventListener(\"resize\", onWindowResize, false);\n        container.addEventListener(\"click\", onCanvasClick, false);\n\n        loadInstances()\n\n        editorState.selectTile(1);\n\n        renderUI().then(mainLoop);\n    })\n\nconst editorState = new EditorState(tiles);\n\nreaction(\n    () => editorState.visible,\n    onWindowResize\n)\n\nlet ghost;\nlet rotation = 0;\n\nreaction(\n    () => editorState.activeTileIndex,\n    () => {\n\n        const { activeTile, activeTileIndex } = editorState;\n        cursor.object.scale.set(activeTile.sizeX,activeTile.sizeY,activeTile.sizeZ);\n\n\n        if (ghost)\n        {\n            disposeMaterials(ghost);\n            scene.remove(ghost);\n        }\n\n        if (activeTileIndex === 0)\n        {\n            ghost = null;\n        }\n        else\n        {\n            ghost = tiles[activeTileIndex].variants[0].clone();\n            ghost.scale.set(TILE_SIZE, TILE_SIZE, TILE_SIZE)\n            setOpacity(ghost,0.2)\n\n            ghost.rotation.y = TAU * rotation / 4;\n\n            console.log({ghost})\n            scene.add(ghost)\n        }\n        console.log(\"ACTIVE\", activeTile)\n    }\n)\n\nfunction setOpacity(o, v)\n{\n    if (o.material)\n    {\n        o.material = o.material.clone();\n\n        o.material.transparent = v < 1;\n        o.material.opacity = v;\n    }\n\n    const { children } = o;\n    if (children)\n    {\n        for (let i = 0; i < children.length; i++)\n        {\n            setOpacity(children[i], v);\n        }\n    }\n}\n\nfunction disposeMaterials(o)\n{\n    if (o.material)\n    {\n        o.material.dispose();\n    }\n\n    const { children } = o;\n    if (children)\n    {\n        for (let i = 0; i < children.length; i++)\n        {\n            disposeMaterials(children[i]);\n        }\n    }\n}\n\nfunction clearAll()\n{\n    for (let curr of instances)\n    {\n        curr.removeObject();\n        grid.clearTile(curr);\n    }\n    addHistoryEntry(null, [ ... instances ])\n    instances.clear();\n    debouncedSync();\n}\n\nfunction renderUI()\n{\n    return new Promise(\n        (resolve, reject) => {\n            try\n            {\n                ReactDOM.render(\n                    <EditorUI\n                        editorState={ editorState }\n                        clearAll={ clearAll }\n                        download={ () => {\n                            download(\"input.json\", getCurrentInstancesAsJSON(), \"text/json\");\n                        }}\n                    />,\n                    uiContainer,\n                    resolve\n                );\n\n            }\n            catch(e)\n            {\n                reject(e);\n            }\n        }\n    );\n}\n\n\nclass Output\n{\n    KEY = LOCAL_STORAGE_KEY;\n\n    download = download;\n\n    get grid()\n    {\n        return grid;\n    }\n}\n\nexport default new Output()\n","import TileInstance from \"./TileInstance\";\nimport { Vector3, Scene } from \"three\";\nimport findNamed from \"../util/findNamed\";\n\n\n/**\n * Loads the input instance data from a JSON file\n *\n * @param {Object} data                     raw JSON data\n * @param {Array<TileDefinition>} tiles     array of tile definition\n * @param {Grid} grid                       grid instance\n * @param {Set<TileInstance>} [instances]   set of tile instances\n * @param {Scene} [scene]                   scene\n */\nexport default function loadInstanceJSON(data, tiles, grid, instances, scene)\n{\n    const { instances: rawInstances } = data;\n\n    const notFound = new Set();\n\n    for (let i = 0; i < rawInstances.length; i++)\n    {\n        const raw = rawInstances[i];\n\n        const tile = findNamed(tiles, raw.name);\n\n        if (tile)\n        {\n            const instance = new TileInstance(\n                scene,\n                tile,\n                new Vector3(raw.position[0], raw.position[1], raw.position[2]),\n                raw.rotation,\n                raw.material,\n                raw.x,\n                raw.y\n            );\n\n            instance.variant = (Math.random() * tile.variants.length)|0;\n            instance.indexes = raw.indexes;\n\n            instance.indexes = grid.setTile(instance.material, instance.x, instance.y, instance.tile, instance.rotation, true);\n\n            if (instances)\n            {\n                instances.add(instance);\n            }\n        }\n        else\n        {\n            notFound.add(raw.name);\n        }\n    }\n\n    if (notFound.size > 0)\n    {\n        console.log(\"Could not find some tiles: \", notFound)\n    }\n\n}\n","\n// Instantiate a loader\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\n\nconst loader = new GLTFLoader();\n\nexport default function(url, onProgress = null)\n{\n    return new Promise(((resolve, reject) => {\n        // Load a glTF resource\n        loader.load(\n            // resource URL\n            url,\n            // called when the resource is loaded\n            resolve,\n            // called while loading is progressing\n            onProgress,\n            // called when loading has errors\n            reject\n        );\n\n    }))\n}\n","import { Box3, Color, DirectionalLight, Object3D, PerspectiveCamera, Scene, Vector3, WebGLRenderer } from \"three\"\n\n\n\n/**\n * Takes an array of three.js objects and resolves to an array of#\n * canvases containing thumbnails\n *\n * @param {Array<Object3D>} objects     array of objects\n * @param {Number} width                thumbnail image width\n * @param {Number} height               thumbnail image height\n * @param {Array<String>} [names]        optional array of names\n * @return {Promise<Array<HTMLCanvasElement>>}\n */\nexport default function threeJsThumbnailer(objects, width, height, names) {\n    return new Promise(\n        resolve => {\n\n            const canvases = [];\n\n            const container = document.createElement(\"div\");\n            document.body.appendChild(container)\n            container.style.position = \"absolute\";\n            container.style.top = \"0px\";\n            container.style.left = \"-10000px\";\n\n            const renderer = new WebGLRenderer({\n                alpha: true\n            });\n            renderer.setPixelRatio(window.devicePixelRatio);\n            renderer.setSize(width, height);\n\n            container.appendChild(renderer.domElement);\n\n            const scene = new Scene();\n            //scene.background = new Color(\"#888\")\n\n            const camera = new PerspectiveCamera(55, width / height, 0.1, 100);\n\n            const light = new DirectionalLight(\"#fff8d5\", 1.4);\n            light.position.set(0, 3, -1.5)\n            scene.add(light);\n\n            const images = [];\n\n            let current;\n            for (let i = 0; i < objects.length; i++)\n            {\n                if (current)\n                {\n                    scene.remove(current)\n                }\n\n                current = objects[i].clone();\n\n                const box = new Box3();\n                box.expandByObject(current)\n\n                const size = Math.max(\n                    box.max.x - box.min.x,\n                    box.max.y - box.min.y\n                )\n\n                const isSmall = size < 1.5;\n                const dist = isSmall ? Math.pow(size, 0.9) * 1.2 : size * 1.5;\n                camera.up.set(0, 1, 0);\n\n                //console.log(current.name, direction, box)\n                camera.position.set(0, box.max.y * (isSmall ? 1.1 : 0.9), -dist);\n                camera.lookAt(new Vector3(0, (box.max.y + box.min.y) / (isSmall ? 2 : 4), 0));\n                camera.updateProjectionMatrix();\n\n                current.position.set(0, 0, 0)\n                scene.add(current);\n\n                renderer.render(scene, camera);\n\n                const copy = document.createElement(\"canvas\")\n\n                copy.width = width;\n                copy.height = height;\n\n                const ctx = copy.getContext(\"2d\");\n                ctx.drawImage(\n                    renderer.domElement,\n                    0,0\n                );\n                ctx.strokeStyle = \"rgba(255,255,255,0.4)\";\n                ctx.fillStyle = \"#fff\";\n                ctx.lineWidth = 2;\n                ctx.beginPath();\n                ctx.rect(0,0,width, height)\n                ctx.stroke();\n\n                const thumbName = names ? names[i] : current.name;\n                ctx.fillText(thumbName, 4, height - 4)\n\n\n                // const img = new Image();\n                // img.src = renderer.domElement.toDataURL();\n                //\n                // images.push(img);\n                images.push(copy);\n            }\n\n            resolve(images);\n\n            scene.dispose();\n            renderer.dispose();\n\n            document.body.removeChild(container)\n        }\n    )\n}\n"],"sourceRoot":""}