{"version":3,"sources":["webpack://App/webpack/bootstrap","webpack://App/./src/util/threeJsThumbnailer.js","webpack://App/./src/editor/TileInstance.js","webpack://App/./src/util/findNamed.js","webpack://App/./src/editor/loadInstanceJSON.js","webpack://App/./src/constants.js","webpack://App/./src/editor/Grid.js","webpack://App/./src/editor/EditorUI.js","webpack://App/./src/editor/EditorState.js","webpack://App/./src/editor/Cursor.js","webpack://App/./src/util/download.js","webpack://App/./src/editor/editor.js","webpack://App/./src/editor/prepareTiles.js","webpack://App/./src/loadScene.js","webpack://App/./src/util/inputToWFC.js","webpack://App/./src/editor/default-tiles.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","threeJsThumbnailer","objects","width","height","names","Promise","resolve","container","document","createElement","body","appendChild","style","position","top","left","renderer","WebGLRenderer","alpha","setPixelRatio","devicePixelRatio","setSize","domElement","scene","Scene","camera","PerspectiveCamera","light","DirectionalLight","set","add","current","images","remove","clone","box","Box3","expandByObject","size","Math","max","x","min","y","isSmall","dist","pow","up","lookAt","Vector3","updateProjectionMatrix","render","copy","ctx","getContext","drawImage","strokeStyle","fillStyle","lineWidth","beginPath","rect","stroke","thumbName","fillText","dispose","removeChild","idCounter","TileInstance","tile","rotation","material","indexes","this","id","createObject","variants","variant","random","newObject","scale","TILE_SIZE","TAU","findNamed","array","e","loadInstanceJSON","tiles","grid","instances","rawInstances","notFound","Set","raw","instance","setTile","console","log","WATER","SAND","GRASS","FOREST","STONE","ICE","DIRT","UNDEFINED","MATERIAL_NAMES","CASE_NAMES","PI","PHI","sqrt","numMaterials","Grid","materials","Float64Array","offsets","dx","dy","index","rotateEvery","rotateCount","flag","group","Group","curr","geo","PlaneBufferGeometry","mat","side","DoubleSide","mesh","Mesh","tmp","tx","ty","cleanFn","gridSize","sizeX","sizeZ","rotationIndex","posX","posY","directions","matOff","clean","Uint32Array","lineDx","lineDy","offset","pattern","SelectButton","elem","active","onClick","ref","useRef","useEffect","type","className","cx","SizeBadge","memo","sizeY","visibility","EditorUI","observer","editorState","download","clearAll","visible","activeTileIndex","activeTile","dirty","accessKey","toggleVisible","onFocusCapture","map","idx","selectTile","thumbnail","title","confirm","EditorState","action","bound","observable","VALID_COLOR","Color","INVALID_COLOR","Cursor","raycaster","Raycaster","lineMat","LineBasicMaterial","color","linewidth","depthTest","opacity","transparent","points","border","Line","BufferGeometry","setFromPoints","insidePlane","MeshBasicMaterial","cursor","createCursorGeometry","valid","children","mouse","setFromCamera","intersects","intersectObjects","substr","point","offX","offY","floor","z","setValid","objectX","objectY","filename","text","mediaType","element","setAttribute","encodeURIComponent","display","click","controls","uiContainer","cubeCamera","sky","skyParameters","getWidth","innerWidth","onDocumentMouseMove","event","preventDefault","clientX","clientY","innerHeight","Vector2","onWindowResize","aspect","mainLoop","update","ghost","performance","now","raf","convertTimestamp","timestamp","Date","loadInstances","json","localStorage","getItem","JSON","parse","loadFromLocalStorage","getTime","inputData","info","getCurrentInstancesAsJSON","stringify","version","toISOString","timerId","history","historyPos","historyEnd","debouncedSync","setDirty","clearTimeout","setTimeout","sync","setItem","onCanvasClick","ev","removed","indexOf","clearTile","removeObject","delete","addHistoryEntry","added","newEntry","onKeyDown","keyCode","shiftKey","ctrlKey","redo","undo","all","loadScene","then","prepareTiles","ground","_tiles","kid","find","Error","getElementById","outputEncoding","sRGBEncoding","CubeCamera","background","renderTarget","Sky","uniforms","texture","theta","phi","cos","sin","updateSun","OrbitControls","maxPolarAngle","target","minDistance","maxDistance","enableDamping","dampingFactor","mouseButtons","MIDDLE","MOUSE","ROTATE","RIGHT","PAN","addEventListener","reject","ReactDOM","reaction","clear","disposeMaterials","setOpacity","v","Output","KEY","getMaxId","idCount","createEmptyThumbnail","canvas","thumbnailWidth","thumbnailHeight","hw","hh","moveTo","lineTo","tilesGLTF","pos","DEFAULT_TILES","reachable","filter","sort","a","b","forEach","Array","isArray","thumbNames","thumbnails","th","unshift","colors","loader","GLTFLoader","url","onProgress","load","tmpMask","tileName","tileId","inputToWFC","weightTargets","maxId","numInts","last","adjacencies","tileA","tileB","bit","numEntries","changed","numWeights","weights","numAdjacencies","right","bottom","fill","sum","emptyWeight"],"mappings":"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","file":"bundle-editor-bf866271acceda6551f2.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonpApp\"] = window[\"webpackJsonpApp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([47,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Box3, Color, DirectionalLight, Object3D, PerspectiveCamera, Scene, Vector3, WebGLRenderer } from \"three\"\n\n\n\n/**\n * Takes an array of three.js objects and resolves to an array of#\n * canvases containing thumbnails\n *\n * @param {Array<Object3D>} objects     array of objects\n * @param {Number} width                thumbnail image width\n * @param {Number} height               thumbnail image height\n * @param {Array<String>} [names]        optional array of names\n * @return {Promise<Array<HTMLCanvasElement>>}\n */\nexport default function threeJsThumbnailer(objects, width, height, names) {\n    return new Promise(\n        resolve => {\n\n            const canvases = [];\n\n            const container = document.createElement(\"div\");\n            document.body.appendChild(container)\n            container.style.position = \"absolute\";\n            container.style.top = \"0px\";\n            container.style.left = \"-10000px\";\n\n            const renderer = new WebGLRenderer({\n                alpha: true\n            });\n            renderer.setPixelRatio(window.devicePixelRatio);\n            renderer.setSize(width, height);\n\n            container.appendChild(renderer.domElement);\n\n            const scene = new Scene();\n            //scene.background = new Color(\"#888\")\n\n            const camera = new PerspectiveCamera(55, width / height, 0.1, 100);\n\n            const light = new DirectionalLight(\"#fff8d5\", 1.4);\n            light.position.set(0, 3, -1.5)\n            scene.add(light);\n\n            const images = [];\n\n            let current;\n            for (let i = 0; i < objects.length; i++)\n            {\n                if (current)\n                {\n                    scene.remove(current)\n                }\n\n                current = objects[i].clone();\n\n                const box = new Box3();\n                box.expandByObject(current)\n\n                const size = Math.max(\n                    box.max.x - box.min.x,\n                    box.max.y - box.min.y\n                )\n\n                const isSmall = size < 1.5;\n                const dist = isSmall ? Math.pow(size, 0.9) * 1.2 : size * 1.5;\n                camera.up.set(0, 1, 0);\n\n                //console.log(current.name, direction, box)\n                camera.position.set(0, box.max.y * (isSmall ? 1.1 : 0.9), -dist);\n                camera.lookAt(new Vector3(0, (box.max.y + box.min.y) / (isSmall ? 2 : 4), 0));\n                camera.updateProjectionMatrix();\n\n                current.position.set(0, 0, 0)\n                scene.add(current);\n\n                renderer.render(scene, camera);\n\n                const copy = document.createElement(\"canvas\")\n\n                copy.width = width;\n                copy.height = height;\n\n                const ctx = copy.getContext(\"2d\");\n                ctx.drawImage(\n                    renderer.domElement,\n                    0,0\n                );\n                ctx.strokeStyle = \"rgba(255,255,255,0.4)\";\n                ctx.fillStyle = \"#fff\";\n                ctx.lineWidth = 2;\n                ctx.beginPath();\n                ctx.rect(0,0,width, height)\n                ctx.stroke();\n\n                const thumbName = names ? names[i] : current.name;\n                ctx.fillText(thumbName, 4, height - 4)\n\n\n                // const img = new Image();\n                // img.src = renderer.domElement.toDataURL();\n                //\n                // images.push(img);\n                images.push(copy);\n            }\n\n            resolve(images);\n\n            scene.dispose();\n            renderer.dispose();\n\n            document.body.removeChild(container)\n        }\n    )\n}\n","import { TILE_SIZE } from \"./Grid\";\n\nimport { Scene, Vector3 } from \"three\"\nimport { TAU } from \"../constants\";\n\n\nlet idCounter = 0;\n\nexport default class TileInstance\n{\n    scene;\n    tile;\n    position;\n    object = null;\n    indexes = null;\n\n    /**\n     *  Creates a new tile instance\n     *\n     * @param {Scene} scene             three.js scene\n     * @param {TileDefinition} tile     tile definition\n     * @param {Vector3} position        position of the tile\n     * @param {number} rotation         tile rotation (0-3)\n     * @param {Number} material         material index\n     * @param {Number} x                tile x\n     * @param {Number} y                tile y\n     */\n    constructor(scene, tile, position, rotation, material, x, y)\n    {\n        this.id = ++idCounter;\n\n        this.scene = scene;\n        this.tile = tile;\n        this.position = position.clone();\n        this.rotation = rotation;\n\n        this.material = material;\n        this.x = x;\n        this.y = y;\n\n        if (scene)\n        {\n            this.createObject();\n        }\n    }\n\n    createObject()\n    {\n        const { tile, scene, position, rotation } = this;\n        const { variants } = tile;\n\n        this.variant = Math.random() * variants.length|0;\n\n        const newObject = variants[this.variant].clone();\n        newObject.scale.set(TILE_SIZE, TILE_SIZE, TILE_SIZE)\n        newObject.position.copy(position)\n\n        newObject.rotation.y = TAU * rotation / 4;\n\n        this.object = newObject;\n        scene.add(newObject);\n    }\n\n    removeObject()\n    {\n        const { scene, object } = this;\n\n        if (object)\n        {\n            scene.remove(object);\n            this.object = null;\n        }\n    }\n\n}\n","/**\n * Finds a named element\n *\n * @param array     array of elements\n * @param name      name\n * @return {?Object} element or null\n */\nexport default function findNamed(array, name)\n{\n    for (let i = 0; i < array.length; i++)\n    {\n        const e = array[i];\n        if (e.name === name)\n        {\n            return e;\n        }\n    }\n    return null;\n}\n","import TileInstance from \"./TileInstance\";\nimport { Vector3, Scene } from \"three\";\nimport findNamed from \"../util/findNamed\";\n\n\n/**\n * Loads the input instance data from a JSON file\n *\n * @param {Object} data                     raw JSON data\n * @param {Array<TileDefinition>} tiles     array of tile definition\n * @param {Grid} grid                       grid instance\n * @param {Set<TileInstance>} [instances]   set of tile instances\n * @param {Scene} [scene]                   scene\n */\nexport default function loadInstanceJSON(data, tiles, grid, instances, scene)\n{\n    const { instances: rawInstances } = data;\n\n    const notFound = new Set();\n\n    for (let i = 0; i < rawInstances.length; i++)\n    {\n        const raw = rawInstances[i];\n\n        const tile = findNamed(tiles, raw.name);\n\n        if (tile)\n        {\n            const instance = new TileInstance(\n                scene,\n                tile,\n                new Vector3(raw.position[0], raw.position[1], raw.position[2]),\n                (Math.random() * 4)|0,\n                raw.material,\n                raw.x,\n                raw.y\n            );\n\n            instance.variant = (Math.random() * tile.variants.length)|0;\n\n            instance.indexes = grid.setTile(instance.material, instance.x, instance.y, instance.tile, instance.rotation, true);\n\n            if (instances)\n            {\n                instances.add(instance);\n            }\n        }\n        else\n        {\n            notFound.add(raw.name);\n        }\n    }\n\n    if (notFound.size > 0)\n    {\n        console.log(\"Could not find some tiles: \", notFound)\n    }\n\n}\n","export const WATER = 0;\nexport const SAND = 1;\nexport const GRASS = 2;\nexport const FOREST = 3;\nexport const STONE = 4;\nexport const ICE = 5;\nexport const DIRT = 6;\nexport const PACKED_ICE = 7;\nexport const UNDEFINED = 8;\n\nexport const MATERIAL_NAMES = [\n    \"Water\", // WATER\n    \"Sand\", // SAND\n    \"Grass\", // GRASS\n    \"Forest\", // FOREST\n    \"Stone\", // STONE\n    \"Ice\", // ICE\n    \"Dirt\", // DIRT\n    \"Packed_Ice\", // PACKED_ICE\n];\nexport const CASE_NAMES = [\n    null,\n    \"case-1\",\n    \"case-2\",\n    \"case-3\",\n    \"case-4\",\n    \"case-5-1\",\n    \"case-6\",\n    \"case-7\",\n    \"case-8\",\n    \"case-9\",\n    \"case-10-1\",\n    \"case-11\",\n    \"case-12\",\n    \"case-13\",\n    \"case-14\",\n    \"case-15\",\n    \"case-m1\",\n    \"case-m2\",\n    \"case-m3\",\n    \"case-m4\",\n    \"case-5-2\",\n    \"case-10-2\"\n];\nexport const GROUND_COLORS = {\n    [WATER]: [0, 0.4, 0.8],\n    [SAND]: [0.8, 0.8, 0],\n    [GRASS]: [0, 0.7, 0],\n    [DIRT]: [0.5, 0.3, 0.1],\n    [FOREST]: [0.2, 0.5, 0.3],\n    [STONE]: [0.5, 0.5, 0.5],\n    [ICE]: [1, 1, 1],\n    [PACKED_ICE]: [1, 1, 1],\n    [UNDEFINED]: [1, 0, 1]\n}\nconst GROUND_ROUGHNESS = {\n    [WATER]: 0,\n    [SAND]: 1,\n    [GRASS]: 1,\n    [DIRT]: 1,\n    [FOREST]: 1,\n    [STONE]: 0.4,\n    [ICE]: 0.9,\n    [PACKED_ICE]: 0.8,\n    [UNDEFINED]: 0\n}\n\n\nexport const TAU = Math.PI * 2;\n\nexport const PHI = (1 + Math.sqrt(5)) / 2;\n","import { DoubleSide, Group, Mesh, PlaneBufferGeometry, Scene } from \"three\";\nimport { DIRT, TAU } from \"../constants\";\nimport { tileName } from \"../util/inputToWFC\";\n\nexport const TILE_SIZE = 1;\n\nexport const numMaterials = DIRT;\n\nexport default class Grid\n{\n    /**\n     * Construct a new material grid.\n     *\n     * @param {Number} size         edge length of one material field (int)\n     * @param {Scene} [scene]         three.js scene\n     * @param {Array} [materials]     array with materials\n     */\n    constructor(size, scene, materials)\n    {\n        this.scene = scene;\n        this.size = size;\n\n        this.data = new Float64Array(size * size * numMaterials)\n\n        const offsets = new Float64Array(numMaterials * 2);\n        this.offsets = offsets;\n\n\n        let x = -size*TILE_SIZE/2;\n        let y = -size*TILE_SIZE/2;\n\n        let dx = 0;\n        let dy = size * TILE_SIZE;\n\n        let index = 0;\n        let rotateEvery = 1;\n        let rotateCount = rotateEvery;\n        let flag = false;\n\n            const group = new Group();\n            group.name = \"MaterialGrid\"\n\n            for (let curr = 0; curr < numMaterials; curr++)\n            {\n                offsets[index++] = x;\n                offsets[index++] = y;\n\n                //console.log(\"MATERIAL #\", curr, \"at\", x, y);\n\n                if (scene)\n                {\n                    const geo = new PlaneBufferGeometry(TILE_SIZE * size, TILE_SIZE * size, 1, 1);\n                    const mat = materials[curr].clone();\n                    mat.side = DoubleSide;\n                    const mesh = new Mesh(geo, mat);\n                    mesh.name = \"M\" + curr;\n                    mesh.position.set(x, y, 0);\n                    //mesh.rotation.y = -Math.PI\n                    group.add(mesh);\n                }\n\n\n                x += dx;\n                y += dy;\n\n                if (--rotateCount === 0)\n                {\n                    const tmp = dx;\n                    dx = -dy;\n                    dy = tmp;\n\n                    if (flag)\n                    {\n                        rotateEvery++;\n                    }\n                    flag = !flag;\n\n                    rotateCount = rotateEvery;\n                }\n            }\n\n            group.rotation.x = TAU/4;\n\n        if (scene)\n        {\n            this.group = group;\n\n            scene.add(group);\n        }\n\n    }\n\n\n    /**\n     * Sets or clears a tile or multi-tile in the grid. The given position must be a valid location to set a tile of that size.\n     *\n     * @param {Number} material                 material index\n     * @param {Number} tx                       x-position in material\n     * @param {Number} ty                       y-position in material\n     * @param {TileDefinition} tile             tile definition\n     * @param {Number} rotation                 tile rotation 0-3\n     * @param {function|boolean} [cleanFn]      callback to clean other tiles from a given offset. If not given, the method will clear the multi tile on that offset\n     */\n    setTile(material, tx, ty, tile, rotation, cleanFn = null)\n    {\n        const { size : gridSize } = this;\n        const { sizeX, sizeZ } = tile;\n\n        const rotationIndex = rotation * 2;\n\n        let posX = tx + offsets[rotationIndex] * (sizeX - 1);\n        let posY = ty + offsets[rotationIndex + 1] * (sizeZ - 1);\n\n        const dx = directions[rotationIndex];\n        const dy = directions[rotationIndex + 1];\n\n        const matOff = material * gridSize * gridSize;\n\n        const clean = !cleanFn;\n        const indexes = !clean && new Uint32Array(sizeX * sizeZ);\n\n        // correction of line plus rotated vector\n        const lineDx = - dx * sizeX - dy;\n        const lineDy = - dy * sizeZ + dx;\n\n\n        let index = 0;\n        for (let y = 0; y < sizeZ; y++)\n        {\n            for (let x = 0; x < sizeX; x++)\n            {\n                const offset = matOff + posX + posY * gridSize;\n\n                const value = tile.pattern[y * sizeX + x];\n\n                if (clean)\n                {\n                    if (this.data[offset] === value)\n                    {\n                        this.data[offset] = 0;\n                    }\n                }\n                else\n                {\n                    if (this.data[offset] !== 0)\n                    {\n                        if (typeof cleanFn === \"function\")\n                        {\n                            cleanFn(offset);\n                        }\n                    }\n                    indexes[index++] = offset;\n                    this.data[offset] = value;\n                }\n\n                posX += dx;\n                posY += dy;\n            }\n            posX += lineDx;\n            posY += lineDy;\n        }\n\n        return indexes;\n    }\n\n    clearTile(instance)\n    {\n        this.setTile(instance.material, instance.x, instance.y, instance.tile, instance.rotation, null);\n    }\n}\n\nconst offsets = [\n    0,0,\n    1,0,\n    1,1,\n    0,1\n]\n\nconst directions = [\n    1,0,\n    0,1,\n    -1,0,\n    0,-1\n]\n","import React, { memo, useEffect, useRef } from \"react\"\nimport cx from \"classnames\"\n// noinspection ES6UnusedImports\nimport STYLE from \"./ui.css\"\nimport { observer } from \"mobx-react-lite\";\n\nconst SelectButton = ({elem, index, active, onClick}) => {\n\n    const ref = useRef(null)\n\n    useEffect(() => {\n        ref.current.appendChild(elem);\n    }, [])\n\n    return (\n        <button\n            ref={ ref }\n            type=\"button\"\n            className={ cx(\"btn btn-sm m-1\", active === index ? \"btn-light\" : \"btn-default\") }\n            onClick={ onClick }\n        />\n    )\n}\n\n\nconst SizeBadge = memo(({sizeX, sizeY }) => {\n\n    return (\n        <span\n            className=\"badge badge-secondary ml-1\"\n            style={{\n                visibility: sizeX === 1 && sizeY === 1 && \"hidden\"\n            }}\n        >\n            {\n                sizeX + \"x\" + sizeY\n            }\n        </span>\n    )\n})\n\nconst EditorUI = observer(({ editorState, download, clearAll }) =>\n{\n    const { tiles, visible, activeTileIndex, activeTile, dirty } = editorState;\n\n    return (\n        <>\n            <button\n                type=\"button\"\n                accessKey=\"u\"\n                className={ cx(\"btn btn-default toggle\", visible && \"visible\") }\n                onClick={ () => editorState.toggleVisible()}\n            >\n                <i className=\"fas fa-arrows-alt-h\"/>\n\n            </button>\n            <div\n                className={ cx(\"sidebar\", visible && \"visible\") }\n                onFocusCapture={ () => editorState.toggleVisible(true)}\n\n            >\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <p className=\"form-control-plaintext border-bottom\">\n                                <strong>Island Rules Builder</strong>\n                            </p>\n                        </div>\n                    </div>\n                    <div className=\"row small\">\n                        <div className=\"col\">\n\n                            <strong>Selected:</strong>&nbsp;\n                            {\n                                activeTile.name\n                            }\n                            <SizeBadge sizeX={ activeTile.sizeX } sizeY={ activeTile.sizeZ }/>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"tile-selector flex\">\n                            {\n                                tiles.map( (tile,idx) => (\n                                    <SelectButton\n                                        key={ idx }\n                                        index={idx}\n                                        active={ activeTileIndex }\n                                        onClick={() => editorState.selectTile(idx)}\n                                        elem={ tile.thumbnail }\n                                    />\n                                ))\n                            }\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <i\n                                className={ cx(\"fas mr-1\", dirty ? \"fa-spinner rotating\" : \"fa-check\", dirty ? \"text-muted\" : \"text-success\" ) }\n                                title={ dirty ? \"Write pending\" : \"Synched to localStorage\" }\n                            />\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-sm btn-secondary mr-1\"\n                                onClick={ download }\n                                >\n                                Download JSON\n                            </button>\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-sm btn-danger mr-1\"\n                                onClick={ () =>{\n                                    if (confirm(\"Do you really want to delete all tiles?\"))\n                                    {\n                                        clearAll();\n                                    }\n                                } }\n                                >\n                                Clear\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n})\n\nexport default EditorUI\n","import { action, observable } from \"mobx\";\n\n\n/**\n * Observable editor state.\n *\n * Created and kept outside react, modified by react.\n */\nexport default class EditorState\n{\n    /**\n     * Creates a new instance\n     *\n     * @param tiles     tiles array\n     */\n    constructor(tiles)\n    {\n        this.tiles = tiles;\n    }\n\n    @observable\n    visible = true;\n\n    @observable\n    dirty = false;\n\n    @observable\n    activeTileIndex = 0;\n\n    @action\n    toggleVisible(value = !this.visible)\n    {\n        this.visible = value;\n    }\n\n\n    @action.bound\n    selectTile(tile)\n    {\n        this.activeTileIndex = tile;\n    }\n\n    @action\n    setDirty(dirty)\n    {\n        this.dirty = dirty;\n    }\n\n    get activeTile()\n    {\n        const { activeTileIndex, tiles } = this;\n        return tiles[activeTileIndex];\n    }\n}\n\n","import {\n    Color, Group,\n    Line,\n    LineBasicMaterial,\n    Mesh,\n    MeshBasicMaterial,\n    PlaneBufferGeometry,\n    Raycaster,\n    Vector3\n} from \"three\";\nimport { BufferGeometry } from \"three/src/core/BufferGeometry\";\nimport { TAU } from \"../constants\";\nimport { TILE_SIZE } from \"./Grid\";\n\nconst VALID_COLOR = new Color(\"#fff\");\nconst INVALID_COLOR = new Color(\"#ff3c78\");\n\nfunction createCursorGeometry()\n{\n    const lineMat = new LineBasicMaterial({\n        color: 0x000000,\n        linewidth: 1.5,\n        depthTest: false,\n        opacity: 0.5,\n        transparent: true\n    });\n\n    const points = [];\n    points.push(new Vector3(-0.5, 0, -0.5));\n    points.push(new Vector3(0.5, 0, -0.5));\n    points.push(new Vector3(0.5, 0, 0.5));\n    points.push(new Vector3(-0.5, 0, 0.5));\n    points.push(new Vector3(-0.5, 0, -0.5));\n\n    const border = new Line(\n        new BufferGeometry().setFromPoints(points),\n        lineMat\n    );\n\n    const insidePlane = new Mesh(\n        new PlaneBufferGeometry(\n            1,\n            1\n        ),\n        new MeshBasicMaterial({\n            color: 0xffffff,\n            depthTest: false,\n            opacity: 0.2,\n            transparent: true\n        })\n    );\n    insidePlane.rotation.x = -TAU / 4;\n\n    const cursor = new Group();\n    cursor.add(insidePlane)\n    cursor.add(border)\n\n    return cursor;\n}\n\n/**\n * Encapsulates the cursor 3D objects and hold the current selection position etc\n */\nexport default class Cursor\n{\n    constructor(scene, grid, editorState)\n    {\n        this.grid = grid;\n        this.editorState = editorState;\n\n        this.raycaster = new Raycaster();\n        this.material = 0;\n        this.current = null;\n\n        this.object = createCursorGeometry();\n        this.valid = false;\n\n        scene.add( this.object );\n\n    }\n\n    setValid(valid)\n    {\n        this.valid = !!valid;\n        this.object.children[0].material.color = valid ? VALID_COLOR : INVALID_COLOR;\n        this.object.children[0].material.opacity = valid ? 0.2 : 0.8;\n    }\n\n    update(mouse, camera)\n    {\n        const { grid, raycaster, object, editorState } = this;\n\n        raycaster.setFromCamera( mouse, camera );\n\n        const intersects = raycaster.intersectObjects( grid.group.children );\n\n        if (intersects.length > 0)\n        {\n\n            if (this.current !== intersects[0].object)\n            {\n\n                //if ( INTERSECTED ) INTERSECTED.material.emissive.setHex( INTERSECTED.currentHex );\n                this.current = intersects[0].object;\n                this.material = +this.current.name.substr(1);\n            }\n\n            const { point } = intersects[0];\n            const { sizeX, sizeY, sizeZ } = editorState.activeTile;\n\n            const matOff = this.material * 2;\n\n            const offX = grid.offsets[matOff];\n            const offY = grid.offsets[matOff + 1];\n\n            // pos on current material (0 to grid.size - cursor_size )\n            const x = Math.floor((point.x - offX ) / TILE_SIZE) + grid.size/2;\n            const y = Math.floor((point.z - offY ) / TILE_SIZE) + grid.size/2;\n\n            const valid =  x + sizeX <= grid.size && y + sizeZ <= grid.size;\n            this.setValid(valid);\n\n            const objectX = offX + (x - grid.size/2) * TILE_SIZE + sizeX / 2;\n            const objectY = offY + (y - grid.size/2) * TILE_SIZE + sizeZ / 2;\n\n            if (object.position.x !== objectX || object.position.z !== objectY)\n            {\n                //console.log(\"Material\", this.material, \"pos\", x, y)\n\n                this.x = x;\n                this.y = y;\n\n                object.position.set(\n                    objectX,\n                    0,\n                    objectY\n                );\n            }\n\n            this.object.visible = true;\n        }\n        else\n        {\n            this.object.visible = false;\n            this.valid = false;\n            this.current = null;\n        }\n\n    }\n}\n","/**\n * HTML5 Helper function to trigger a text file download from javascript\n *\n * @param {string} filename         default filename for the client\n * @param {string} text             text context\n * @param {String} [mediaType]      media type to export file as (default \"text/plain\")\n */\nexport default function (filename, text, mediaType = \"text/plain\")\n{\n    const element = document.createElement(\"a\");\n    element.setAttribute(\"href\", \"data:\" + mediaType+ \";charset=utf-8,\" + encodeURIComponent(text));\n    element.setAttribute(\"download\", filename);\n    element.style.display = \"none\";\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n}\n","import raf from \"raf\"\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\n// noinspection ES6UnusedImports\nimport STYLE from \"../style.css\"\nimport {\n    CubeCamera,\n    DirectionalLight,\n    MOUSE,\n    PerspectiveCamera,\n    Scene,\n    sRGBEncoding,\n    Vector2,\n    Vector3,\n    WebGLRenderer\n} from \"three\"\nimport loadScene from \"../loadScene\";\nimport { MATERIAL_NAMES } from \"../constants\";\nimport Grid, { TILE_SIZE } from \"./Grid\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { Sky } from \"three/examples/jsm/objects/Sky\";\nimport EditorUI from \"./EditorUI\";\nimport EditorState from \"./EditorState\";\nimport { reaction } from \"mobx\";\nimport \"mobx-react-lite/batchingForReactDom\"\nimport threeJsThumbnailer from \"../util/threeJsThumbnailer\";\nimport { DEFAULT_TILES } from \"./default-tiles\";\nimport Cursor from \"./Cursor\";\nimport TileInstance from \"./TileInstance\";\n\nimport inputData from \"../../input.json\"\nimport download from \"../util/download\";\nimport loadInstanceJSON from \"./loadInstanceJSON\";\nimport prepareTiles from \"./prepareTiles\";\n\nconst TAU = Math.PI * 2;\n\n// maximum coverage a tile kind can have in the editor.\nconst TILE_MAXIMUM = 0.5;\n\nconst GRID_SIZE = 12;\n\n//////////////////////////////////////////////////////////////////////\n\nconst LOCAL_STORAGE_KEY =\"@fforw/islands:data\"\n\nconst HISTORY_LIMIT = 32;\nlet container, stats, grid;\nlet camera, scene, renderer, light;\nlet controls, water;\n\nlet instances = new Set();\n\nlet materials, cursor;\n\nlet uiContainer;\n\nconst sidebarWidth = 220;\n\n\nconst skyParameters = {\n    distance: 1000,\n    inclination: 0.1,\n    azimuth: 0.1\n};\n\nlet cubeCamera, sky;\n\nfunction getWidth()\n{\n    return window.innerWidth - (editorState.visible ?  sidebarWidth : 0);\n}\n\n\nfunction onDocumentMouseMove( event ) {\n\n    event.preventDefault();\n\n    mouse.x = ( event.clientX / getWidth() ) * 2 - 1;\n    mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\n\n}\nlet mouse = new Vector2(100,0)\n\nfunction onWindowResize()\n{\n\n    camera.aspect = getWidth() / window.innerHeight;\n    camera.updateProjectionMatrix();\n\n    renderer.setSize(getWidth(), window.innerHeight);\n\n}\n\nfunction mainLoop()\n{\n    cursor.update(mouse, camera);\n\n    if (ghost)\n    {\n        ghost.rotation.y = TAU * rotation / 4;\n        ghost.position.copy(cursor.object.position);\n    }\n\n    render();\n\n    if (controls)\n    {\n        controls.update()\n    }\n    raf(mainLoop);\n\n}\n\n\nfunction render()\n{\n\n    const time = performance.now() * 0.0001;\n\n    // sphere.position.y = Math.sin( time ) * 5 + 1;\n    // sphere.rotation.x = time * 0.5;\n    // sphere.rotation.z = time * 0.51;\n\n    renderer.render(scene, camera);\n}\n\nconst tiles = [];\nlet envMap;\n\nfunction updateSun()\n{\n\n    if (!sky)\n    {\n        return;\n    }\n\n    const theta = Math.PI * (skyParameters.inclination - 0.5);\n    const phi = 2 * Math.PI * (skyParameters.azimuth - 0.5);\n\n    light.position.x = skyParameters.distance * Math.cos(phi);\n    light.position.y = skyParameters.distance * Math.sin(phi) * Math.sin(theta);\n    light.position.z = skyParameters.distance * Math.sin(phi) * Math.cos(theta);\n\n    sky.material.uniforms[\"sunPosition\"].value = light.position.copy(light.position);\n    water && water.material.uniforms[\"sunDirection\"].value.copy(light.position).normalize();\n\n    cubeCamera.update(renderer, sky);\n\n}\n\n\n\n\nfunction convertTimestamp(data)\n{\n    const { timestamp } = data;\n\n    if (typeof timestamp === \"string\")\n    {\n        data.timestamp = new Date(timestamp);\n    }\n}\n\n\nconvertTimestamp(inputData);\n\nfunction loadFromLocalStorage()\n{\n    const json = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (!json)\n    {\n        return null;\n    }\n\n    const data = JSON.parse(json);\n    convertTimestamp(data);\n    return data;\n}\n\n\n\n\nfunction loadInstances()\n{\n    let data = loadFromLocalStorage();\n\n    if (!data || data.timestamp.getTime() < inputData.timestamp.getTime())\n    {\n        console.info(\"Loading input JSON\");\n        data = inputData;\n    }\n    else\n    {\n        console.info(\"Loading from localStorage\");\n    }\n\n    return loadInstanceJSON(data, tiles, grid, instances, scene);\n}\n\nfunction getCurrentInstancesAsJSON()\n{\n    return JSON.stringify(\n        {\n            version: 1,\n            timestamp: new Date().toISOString(),\n            instances: [ ... instances].map( i => ({\n                name: i.tile.name,\n                position: [\n                    i.position.x,\n                    i.position.y,\n                    i.position.z\n                ],\n                material: i.material,\n                //indexes: i.indexes,\n                x: i.x,\n                y: i.y\n            }))\n        },\n        null,\n        4\n    );\n}\n\nlet history = [];\nlet historyPos = 0;\nlet historyEnd = 0;\n\nlet timerId;\n\nfunction debouncedSync()\n{\n    editorState.setDirty(true);\n\n    if (timerId)\n    {\n        clearTimeout(timerId);\n        timerId = null;\n    }\n\n    timerId = setTimeout(sync, 1000);\n}\n\nfunction sync()\n{\n    timerId = null;\n    editorState.setDirty(false);\n    localStorage.setItem(LOCAL_STORAGE_KEY, getCurrentInstancesAsJSON())\n}\n\n\nfunction onCanvasClick(ev)\n{\n    const { activeTile } = editorState;\n\n    if (cursor.valid)\n    {\n        const instance = activeTile.id !== 0 ? new TileInstance(\n            scene,\n            activeTile,\n            ghost.position,\n            rotation,\n            cursor.material,\n            cursor.x,\n            cursor.y\n        ) : null;\n\n        const removed = [];\n\n        const indexes = grid.setTile(cursor.material, cursor.x, cursor.y, activeTile, rotation, offset => {\n\n            for (let curr of instances)\n            {\n                if (curr.indexes.indexOf(offset) >= 0)\n                {\n                    grid.clearTile(curr);\n                    curr.removeObject();\n                    removed.push(curr);\n                    instances.delete(curr)\n                    break;\n                }\n            }\n        })\n\n        if (instance)\n        {\n            instance.indexes = indexes;\n            instances.add(instance);\n        }\n        addHistoryEntry(instance, removed);\n\n\n        debouncedSync();\n\n    }\n}\n\nfunction addHistoryEntry(added, removed)\n{\n    const newEntry = {\n        added,\n        removed\n    };\n\n    if (historyPos < HISTORY_LIMIT)\n    {\n        history[historyPos++] = newEntry;\n        historyEnd = historyPos;\n    }\n    else\n    {\n        for (let i = 0; i < historyPos; i++)\n        {\n            history[i] = history[i + 1];\n        }\n        history[historyPos] = newEntry;\n    }\n\n    //console.log(\"after addHistoryEntry: newEntry = \", newEntry, \"grid.data = \",grid.data, \"history = \", history)\n\n}\n\nfunction redo()\n{\n    if (historyPos < historyEnd)\n    {\n        //console.log(\"REDO\", history, historyPos)\n\n        const { added, removed } = history[historyPos++];\n\n        if (added)\n        {\n            grid.setTile(added.material, added.x, added.y, added.tile, added.rotation, true);\n            added.createObject();\n\n            instances.add(added)\n        }\n\n        if (removed)\n        {\n            for (let i = 0; i < removed.length; i++)\n            {\n                const instance = removed[i];\n                grid.clearTile(instance);\n                instance.removeObject();\n\n                instances.delete(instance)\n            }\n        }\n\n        debouncedSync();\n\n    }\n}\n\n\nfunction undo()\n{\n    if (historyPos > 0)\n    {\n        //console.log(\"UNDO\")\n\n        const { added, removed } = history[--historyPos];\n\n        if (added)\n        {\n            grid.clearTile(added);\n            added.removeObject();\n            instances.delete(added)\n        }\n\n        if (removed)\n        {\n            for (let i = 0; i < removed.length; i++)\n            {\n                const instance = removed[i];\n                grid.setTile(instance.material, instance.x, instance.y, instance.tile, instance.rotation, true);\n                instance.createObject();\n                instances.add(instance)\n            }\n        }\n\n        debouncedSync();\n\n    }\n}\n\n\nfunction onKeyDown(ev)\n{\n    const { keyCode } = ev;\n\n    if (keyCode === 82) // R / shift-R\n    {\n         rotation = (rotation + (ev.shiftKey ? 1 : -1)) & 3;\n    }\n    else if (keyCode === 90 && ev.ctrlKey) // ctrl+Z / ctrl+shift+Z\n    {\n        if (ev.shiftKey)\n        {\n            redo();\n        }\n        else\n        {\n            undo();\n        }\n    }\n\n}\n\n\nPromise.all([\n    loadScene(\"assets/ground.glb\"),\n    loadScene(\"assets/tiles.glb\").then( prepareTiles )\n])\n    .then(([ ground, _tiles  ]) => {\n\n        tiles.push(...  _tiles);\n\n        console.log({tiles});\n\n        materials = MATERIAL_NAMES.map(n => {\n            const kid = ground.scene.children.find(kid => kid.name === n);\n            if (!kid)\n            {\n                throw new Error(\"Could not find \" + n);\n            }\n            return kid.material;\n        })\n\n\n        //dump(_tiles.scene, \"_tiles: \")\n        //console.log(materials);\n\n\n        document.title += \" Rule Editor\"\n\n        container = document.getElementById(\"container\");\n\n        renderer = new WebGLRenderer();\n        renderer.setPixelRatio(window.devicePixelRatio);\n        renderer.setSize(getWidth(), window.innerHeight);\n\n        renderer.outputEncoding = sRGBEncoding\n\n        container.appendChild(renderer.domElement);\n\n        uiContainer = document.createElement(\"div\");\n        uiContainer.setAttribute(\"id\", \"root\");\n        container.appendChild(uiContainer)\n\n        scene = new Scene();\n\n        camera = new PerspectiveCamera(55, getWidth() / window.innerHeight, 1, 20000);\n        camera.up.set(0,1,0);\n\n        const dist = 35;\n\n        camera.position.set(-dist, dist, 0);\n        camera.lookAt(new Vector3(0,0,0));\n        camera.updateProjectionMatrix();\n\n        light = new DirectionalLight(\"#fff8d5\", 1.4);\n        scene.add(light);\n\n        cubeCamera = new CubeCamera(0.2, 1, 512);\n        // cubeCamera.renderTarget.texture.generateMipmaps = true;\n        // cubeCamera.renderTarget.texture.minFilter = LinearMipmapLinearFilter;\n\n        scene.background = cubeCamera.renderTarget;\n\n        sky = new Sky();\n\n        const uniforms = sky.material.uniforms;\n\n        // uniforms[\"turbidity\"].value = 5;\n        // uniforms[\"rayleigh\"].value = 1.2;\n        // uniforms[\"luminance\"].value = 1;\n        // uniforms[\"mieCoefficient\"].value = 0.05;\n        // uniforms[\"mieDirectionalG\"].value = 0.9;\n\n        envMap = cubeCamera.renderTarget.texture\n\n\n        updateSun();\n\n\n        // stats = new Stats();\n        // container.appendChild( stats.dom );\n\n        // GUI\n\n        //const gui = new GUI();\n\n        // const folder = gui.addFolder( \"Sky\" );\n        // folder.add( skyParameters, \"inclination\", 0, 0.5, 0.0001 ).onChange( updateSun );\n        // folder.add( skyParameters, \"azimuth\", 0, 1, 0.0001 ).onChange( updateSun );\n        // folder.open();\n        //\n        // const uniforms = water.material.uniforms;\n        //\n        // const folder = gui.addFolder( \"Water\" );\n        // folder.add( uniforms.distortionScale, \"value\", 0, 8, 0.1 ).name( \"distortionScale\" );\n        // folder.add( uniforms.size, \"value\", 0.1, 10, 0.1 ).name( \"size\" );\n        // folder.add( uniforms.alpha, \"value\", 0.9, 1, .001 ).name( \"alpha\" );\n        // folder.open();\n\n\n        // const { children } = _tiles.scene;\n        //\n        // for (let i = 1; i < children.length; i++)\n        // {\n        //     const child = children[i];\n        //     console.log(\"ADD\", child)\n        //     scene.add(child.clone());\n        // }\n\n        // const plane = new PlaneBufferGeometry(1000,1000,1,1);\n        //\n        // planeMesh = new Mesh(plane, materials[0]);\n        // planeMesh.rotation.x = TAU/4;\n        // scene.add(planeMesh)\n\n\n        controls = new OrbitControls(camera, renderer.domElement);\n        //controls.maxPolarAngle = Math.PI * 0.45;\n        controls.maxPolarAngle = Math.PI;\n        controls.target.set(0, 0, 0);\n        controls.minDistance = 0.0;\n        controls.maxDistance = 1500.0;\n        controls.enableDamping = true;\n        controls.dampingFactor = 0.02;\n        controls.mouseButtons = {\n            MIDDLE: MOUSE.ROTATE,\n            RIGHT: MOUSE.PAN\n        }\n        controls.update();\n\n        grid = new Grid( GRID_SIZE, scene, materials);\n        cursor = new Cursor(scene, grid, editorState);\n        cursor.update(mouse,camera)\n\n        document.addEventListener( 'mousemove', onDocumentMouseMove, false );\n        document.addEventListener( 'keydown', onKeyDown, false );\n\n        window.addEventListener(\"resize\", onWindowResize, false);\n        container.addEventListener(\"click\", onCanvasClick, false);\n\n        loadInstances()\n\n        editorState.selectTile(1);\n\n        renderUI().then(mainLoop);\n    })\n\nconst editorState = new EditorState(tiles);\n\nreaction(\n    () => editorState.visible,\n    onWindowResize\n)\n\nlet ghost;\nlet rotation = 0;\n\nreaction(\n    () => editorState.activeTileIndex,\n    () => {\n\n        const { activeTile, activeTileIndex } = editorState;\n        cursor.object.scale.set(activeTile.sizeX,activeTile.sizeY,activeTile.sizeZ);\n\n\n        if (ghost)\n        {\n            disposeMaterials(ghost);\n            scene.remove(ghost);\n        }\n\n        if (activeTileIndex === 0)\n        {\n            ghost = null;\n        }\n        else\n        {\n            ghost = tiles[activeTileIndex].variants[0].clone();\n            ghost.scale.set(TILE_SIZE, TILE_SIZE, TILE_SIZE)\n            setOpacity(ghost,0.2)\n\n            ghost.rotation.y = TAU * rotation / 4;\n\n            console.log({ghost})\n            scene.add(ghost)\n        }\n        console.log(\"ACTIVE\", activeTile)\n    }\n)\n\nfunction setOpacity(o, v)\n{\n    if (o.material)\n    {\n        o.material = o.material.clone();\n\n        o.material.transparent = v < 1;\n        o.material.opacity = v;\n    }\n\n    const { children } = o;\n    if (children)\n    {\n        for (let i = 0; i < children.length; i++)\n        {\n            setOpacity(children[i], v);\n        }\n    }\n}\n\nfunction disposeMaterials(o)\n{\n    if (o.material)\n    {\n        o.material.dispose();\n    }\n\n    const { children } = o;\n    if (children)\n    {\n        for (let i = 0; i < children.length; i++)\n        {\n            disposeMaterials(children[i]);\n        }\n    }\n}\n\nfunction clearAll()\n{\n    for (let curr of instances)\n    {\n        curr.removeObject();\n        grid.clearTile(curr);\n    }\n    addHistoryEntry(null, [ ... instances ])\n    instances.clear();\n    debouncedSync();\n}\n\nfunction renderUI()\n{\n    return new Promise(\n        (resolve, reject) => {\n            try\n            {\n                ReactDOM.render(\n                    <EditorUI\n                        editorState={ editorState }\n                        clearAll={ clearAll }\n                        download={ () => {\n                            download(\"input.json\", getCurrentInstancesAsJSON(), \"text/json\");\n                        }}\n                    />,\n                    uiContainer,\n                    resolve\n                );\n\n            }\n            catch(e)\n            {\n                reject(e);\n            }\n        }\n    );\n}\n\n\nclass Output\n{\n    KEY = LOCAL_STORAGE_KEY;\n\n    download = download;\n\n    get grid()\n    {\n        return grid;\n    }\n}\n\nexport default new Output()\n","import { DEFAULT_TILES } from \"./default-tiles\";\nimport threeJsThumbnailer from \"../util/threeJsThumbnailer\";\n\n\nexport function getMaxId(tiles)\n{\n    return tiles[tiles.length - 1].id + tiles[tiles.length - 1].idCount;\n}\n\nfunction createEmptyThumbnail()\n{\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = thumbnailWidth;\n    canvas.height = thumbnailHeight;\n    const ctx = canvas.getContext(\"2d\");\n\n    ctx.lineWidth = 4;\n    ctx.strokeStyle = \"rgba(255,64,64,0.5)\";\n    ctx.fillStyle = \"#fff\";\n\n    const hw = thumbnailWidth * 0.5;\n    const hh = thumbnailHeight * 0.5;\n    const size = Math.min(hh,hw) * 0.3;\n\n    ctx.beginPath();\n    ctx.moveTo(-size + hw,-size + hh);\n    ctx.lineTo( size + hw, size + hh);\n    ctx.moveTo( size + hw,-size + hh);\n    ctx.lineTo(-size + hw, size + hh);\n    ctx.rect(0,0,thumbnailWidth,thumbnailHeight)\n    ctx.stroke();\n\n    ctx.fillText(\"None\", 4, thumbnailHeight - 4);\n    return canvas;\n}\n    \nconst thumbnailWidth = 40;\nconst thumbnailHeight = thumbnailWidth / 0.75;\n\nexport default function prepareTiles(tilesGLTF)\n{\n    const tiles = [];\n\n    let pos = 0;\n    for (let name in DEFAULT_TILES)\n    {\n        if (DEFAULT_TILES.hasOwnProperty(name))\n        {\n            const raw = DEFAULT_TILES[name];\n            const { variants, sizeX = 1, sizeY = 1, sizeZ = 1 } = raw;\n            tiles[pos] = {\n                ... raw,\n                \n                id: -1,\n                idCount: raw.idCount || 1,\n                name,\n                sizeX,\n                sizeY,\n                sizeZ,\n                reachable: raw.reachable || false,\n                pattern: raw.pattern ? raw.pattern.slice() : null,\n                variants: tilesGLTF ? tilesGLTF.scene.children.filter(o => variants.indexOf(o.name) >= 0) : variants,\n                thumbnail: null\n            };\n            pos++;\n        }\n    }\n\n    tiles.sort((a, b) => a.name === b.name ? 0 : a.name < b.name ? -1 : 1);\n\n    // provide ids\n    let idCounter = 1;\n    tiles.forEach(t => {\n\n        const { name, idCount, pattern, sizeX, sizeZ } = t;\n\n        t.id = idCounter;\n        idCounter += idCount;\n\n        if (idCount > 1)\n        {\n            if (!pattern || !Array.isArray(pattern))\n            {\n                throw new Error(\"Tile '\" + name + \"': tiles with idCount > 1 must define a pattern\");\n            }\n\n            const size = sizeX * sizeZ;\n            if (pattern.length !== size)\n            {\n                throw new Error(\"Tile '\" + name + \"': Pattern must be \" + sizeX + \" x \" + sizeZ + \" = \" + size + \" elements long: \" + pattern);\n            }\n\n            for (let i = 0; i < pattern.length; i++)\n            {\n                pattern[i] += t.id;\n            }\n        }\n        else\n        {\n            // create 1x1 \"pattern\"\n            t.pattern = [ t.id ];\n        }\n    });\n\n    if (tilesGLTF)\n    {\n        const thumbNames = [];\n        const objects = [];\n\n        tiles.forEach((t, idx) => {\n            thumbNames[idx] = t.name;\n            objects[idx] = t.variants[0];\n        });\n\n        //console.log({objects, thumbNames, tiles})\n\n        return threeJsThumbnailer(\n            objects,\n            thumbnailWidth,\n            thumbnailHeight,\n            thumbNames\n        ).then(thumbnails => {\n\n            thumbnails.forEach((th, idx) => tiles[idx].thumbnail = th);\n\n            tiles.unshift({\n                id: 0,\n                idCount: 1,\n                name: \"empty\",\n                variants: [],\n                sizeX: 1,\n                sizeY: 0.1,\n                sizeZ: 1,\n                thumbnail: createEmptyThumbnail(),\n                pattern: [0]\n            });\n\n            return tiles;\n        })\n    }\n    else\n    {\n        tiles.unshift({\n            id: 0,\n            idCount: 1,\n            name: \"empty\",\n            variants: [],\n            sizeX: 1,\n            sizeY: 0.1,\n            sizeZ: 1,\n            reachable:false,\n            colors: [\"#000\"],\n            thumbnail: null\n        });\n\n\n        return tiles;\n    }\n\n}\n","\n// Instantiate a loader\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\n\nconst loader = new GLTFLoader();\n\nexport default function(url, onProgress = null)\n{\n    return new Promise(((resolve, reject) => {\n        // Load a glTF resource\n        loader.load(\n            // resource URL\n            url,\n            // called when the resource is loaded\n            resolve,\n            // called while loading is progressing\n            onProgress,\n            // called when loading has errors\n            reject\n        );\n\n    }))\n}\n","import Grid, { numMaterials } from \"../editor/Grid\";\nimport loadInstanceJSON from \"../editor/loadInstanceJSON\";\nimport { MATERIAL_NAMES } from \"../constants\";\nimport { getMaxId } from \"../editor/prepareTiles\";\n\n\n\nexport function tileName(tiles, tileId)\n{\n    for (let i = 0; i < tiles.length; i++)\n    {\n        const { name, id, idCount} = tiles[i];\n\n        if (tileId === id)\n        {\n            return name;\n        }\n\n        if (tileId > id && tileId < id + idCount)\n        {\n            return name + \"-\" + (tileId - id + 1);\n        }\n    }\n\n    return \"ERR:\" + tileId;\n}\n\nlet tmpMask;\n\n\n\n\nexport default function inputToWFC(inputData, size, tiles, weightTargets)\n{\n    const maxId = getMaxId(tiles);\n\n    // how many ints do we need to express a bitmask of with all possible tile states?\n    const numInts = (maxId + 31) >> 5;\n\n    if (!tmpMask || tmpMask.length < numInts)\n    {\n        tmpMask = new Uint32Array(numInts);\n    }\n\n    const grid = new Grid(size);\n    loadInstanceJSON(inputData, tiles, grid);\n\n    let index = 0;\n    const last = size - 1;\n\n    const  add = (adjacencies, mat, tileA, tileB) =>\n    {\n        const index = tileB >> 5;\n        const bit = 1 << (tileB - (index << 5));\n\n        const offset = mat * numEntries * numInts + tileA * numInts + index;\n        const value = adjacencies[offset ];\n        const changed = value | bit;\n        if (value !== changed)\n        {\n            adjacencies[offset ] = changed;\n\n            //console.log(MATERIAL_NAMES[mat], \":\", tileName(tiles, tileA), \" -> \", tileName(tiles, tileB), { index, bit} )\n        }\n    }\n\n    const numEntries = maxId + 1;\n\n    const numWeights = numMaterials * numEntries;\n    const weights = new Uint32Array( numWeights);\n\n    const numAdjacencies = numMaterials * numEntries * numInts;\n    const adjacencies = new Uint32Array(numAdjacencies);\n\n    for (let mat = 0; mat < numMaterials; mat++)\n    {\n        for (let y=0; y < size; y++)\n        {\n            for (let x = 0; x < size; x++)\n            {\n                const tileId = grid.data[index];\n\n                if (tileId !== 0)\n                {\n                    weights[mat * numEntries + 1 + tileId]++;\n                }\n\n                const top = y === 0 ? 0 : grid.data[index - size];\n                const right = x === last ? 0 : grid.data[index + 1];\n                const bottom = y === last ? 0 : grid.data[index + size];\n                const left = x === 0 ? 0 : grid.data[index - 1];\n\n                add(adjacencies, mat, tileId, top)\n                add(adjacencies, mat, tileId, right)\n                add(adjacencies, mat, tileId, bottom)\n                add(adjacencies, mat, tileId, left)\n                index++;\n            }\n        }\n    }\n\n\n    index = 0;\n    for (let i=0; i < numMaterials; i++)\n    {\n        tmpMask.fill(0)\n        let sum = 0;\n        for (let j = 0; j < maxId; j++)\n        {\n            const value = weights[index + 1 + j];\n            if (value > 0 || j === 0)\n            {\n                sum += value;\n\n                const index = j >> 5;\n                const bit = 1 << (j - (index << 5));\n                tmpMask[index] |= bit;\n            }\n        }\n        const offset = i * numEntries * numInts + maxId * numInts;\n\n        if (sum === 0)\n        {\n            weights[index + 1] = 1;\n            weights[index] = 1;\n\n            tmpMask[0] |= 1;\n\n        }\n        else\n        {\n            const r = weightTargets[i] / ( 1- weightTargets[i])\n\n            const emptyWeight = sum * r;\n            weights[index + 1] = emptyWeight;\n            weights[index] = sum + emptyWeight;\n        }\n\n        adjacencies.set(tmpMask, offset);\n\n        index += numEntries\n    }\n\n\n    return {\n        weights,\n        adjacencies\n    };\n}\n","import { Object3D } from \"three\"\n\n/**\n * @typedef {Object} TileDefinition\n *\n * @property {Array<Object3D>} variants         imported variants objects for this tile\n * @property {Number} id                        tile id. For multi-tiles the id of the upper left tile in rotation 0.\n * @property {Number} size                      tile size. default is 1\n * @property {HTMLCanvasElement} thumbnail      generated thumbnail as canvas\n *\n */\n\n\n\nexport const DEFAULT_TILES = {\n        \"cactus\": {\n            \"variants\": [\"cactus_short\", \"cactus_tall\"],\n            \"colors\" : [ \"#0c0\"]\n        },\n        \"flower\": {\n            \"variants\": [\n                \"flower_purpleA\",\n                \"flower_purpleB\",\n                \"flower_purpleC\",\n                \"flower_redA\",\n                \"flower_redB\",\n                \"flower_redC\",\n                \"flower_yellowA\",\n                \"flower_yellowB\",\n                \"flower_yellowC\"\n            ],\n            \"colors\" : [ \"#ff0\"]\n        },\n        \"stone_large\": {\n            \"variants\": [\"stone_largeD\", \"stone_largeE\", \"stone_largeF\"],\n            \"colors\" : [ \"#eee\"]\n        },\n        \"stone_small\": {\n            \"variants\": [\"stone_smallD\"],\n            \"colors\" : [ \"#888\"]\n        },\n        \"palm_tree\": {\n            \"variants\": [\"tree_palmDetailedTall\", \"tree_palmShort\", \"tree_palmTall\"],\n            \"colors\" : [ \"#8c0\"]\n        },\n        \"pine\": {\n            \"variants\": [\"tree_pineRoundD\", \"tree_pineTallC_detailed\", \"tree_pineTallD\"],\n            \"colors\" : [ \"#480\"]\n        },\n        \"tree_plateau\": {\n            \"variants\": [\"tree_plateau\"],\n            \"colors\" : [ \"#482\"]\n        },\n        \"tree_tall_dark\": {\n            \"variants\": [\"tree_tall_dark\"],\n            \"colors\" : [ \"#360\"]\n        },\n        \"tree_thin\": {\n            \"variants\": [\"tree_thin\"],\n            \"colors\" : [ \"#684\"]\n        },\n        \"house\": {\n            \"variants\": [\"House\"],\n            \"sizeX\" : 3,\n            \"sizeY\" : 2,\n            \"sizeZ\" : 3,\n            \"reachable\": true,\n            \"colors\" : [ \"#f00\", \"#00f\"],\n\n            \"idCount\" : 2,\n            \"pattern\" : [\n                1,1,1,\n                1,0,1,\n                1,1,1\n            ]\n        }\n    }\n;\n\n"],"sourceRoot":""}