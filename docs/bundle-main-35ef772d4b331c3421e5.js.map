{"version":3,"sources":["webpack://Demo/webpack/bootstrap","webpack://Demo/../src/index.js","webpack://Demo/../src/vector.js","webpack://Demo/./src/index.js","webpack://Demo/./src/loadScene.js","webpack://Demo/./src/loadTexture.js","webpack://Demo/./src/style.css?e320","webpack://Demo/./src/worker/Services.js","webpack://Demo/./src/worker/_services.worker.js","webpack://Demo/./src/worker/services-constants.js"],"names":["f_x0","f_y0","f_x1","f_y1","f_x2","f_y2","f_x3","f_y3","f_count","f_outmostEdge","f_size","g_x","g_y","g_isEdge","g_count","g_edge0","g_edge1","g_edge2","g_edge3","g_edge4","g_edge5","g_size","TAU","Math","SIXTH","limit","DEFAULT_CONFIG","width","height","numberOfRings","removeEdges","animatedEasing","renderFirstPassEdges","debug","addQuads","weightFunction","dx","x1","dy","y1","edgeLength","maxIterations","animating","minTension","config","calculateNumberOfFaces","DIRECTIONS","Vector","faces","off","count","numTris","i","v0","v1","v2","pos","j","isOutmost","out","index","edge","length","stack","outmostEdge","targetIsOutmostFace","scaled","tmp","getEdgeStack","console","stackPos","eraseEdgesOfFaceInStack","success","code","x0","y0","findOtherEdge","otherIndex","otherEdge","x2","y2","outMostEdge","otherIsOutmostTri","tris","quads","QUAD_SIZE","firstPassLen","numNodes","calculateNumNodes","nodes","qPos","insertNode","isEdge","addQuad","insertEdge","n0","found","other","connect","firstEdgeIsOutmost","secondEdgeIsOutmost","m0x","m0y","m1x","m1y","m2x","m2y","cx","cy","n1","n2","n3","n4","n5","n6","x3","y3","m3x","m3y","n7","n8","graph","tension","edgeCount","centerX","centerY","sumWeight","k","weight","OrganicQuads","ctx","hw","hh","outerCount","node","drawEdge","relaxWeighted","updateConfig","createHexagonTriangles","start","removeRandomEdges","subdivide","sqrt","x","y","n","targetLength","organicQuads","container","stats","camera","scene","renderer","light","controls","water","sphere","init","document","getElementById","WebGLRenderer","setPixelRatio","window","devicePixelRatio","setSize","innerWidth","innerHeight","appendChild","domElement","Scene","PerspectiveCamera","position","set","DirectionalLight","add","waterGeometry","PlaneBufferGeometry","Water","textureWidth","textureHeight","waterNormals","alpha","sunDirection","clone","normalize","sunColor","waterColor","distortionScale","fog","undefined","rotation","PI","sky","Sky","uniforms","material","value","parameters","distance","inclination","azimuth","cubeCamera","CubeCamera","renderTarget","texture","generateMipmaps","minFilter","LinearMipmapLinearFilter","background","updateSun","theta","phi","cos","sin","z","copy","update","geometry","BoxBufferGeometry","attributes","colors","color","Color","setHex","random","push","r","g","b","setAttribute","Float32BufferAttribute","MeshStandardMaterial","vertexColors","roughness","flatShading","envMap","side","FrontSide","Mesh","OrbitControls","maxPolarAngle","target","minDistance","maxDistance","enableDamping","dampingFactor","addEventListener","onWindowResize","aspect","updateProjectionMatrix","mainLoop","render","raf","time","performance","now","Promise","all","loadScene","loadTexture","then","gltf","oceanNormals","wrapS","wrapT","RepeatWrapping","loader","GLTFLoader","url","onProgress","resolve","reject","load","TextureLoader","counter","storage","Map","webWorker","WPWorker","secret","Symbol","processWorkerMessage","data","ticket","message","entry","get","error","JSON","stringify","type","RESPONSE_PROGRESS","percent","log","round","RESPONSE_ERROR","onWorkerMessage","ev","e","postWithReply","promiseResolve","promiseReject","postMessage","internal","result","delete","err","Services","close","removeEventListener"],"mappings":"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","file":"bundle-main-35ef772d4b331c3421e5.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"main\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonpDemo\"] = window[\"webpackJsonpDemo\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./src/index.js\",\"vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import now from \"performance-now\"\nimport Vector from \"./vector\";\n\nconst f_x0 = 0;\nconst f_y0 = 1;\nconst f_x1 = 2;\nconst f_y1 = 3;\nconst f_x2 = 4;\nconst f_y2 = 5;\nconst f_x3 = 6;\nconst f_y3 = 7;\nconst f_count = 8;\nconst f_outmostEdge = 9;\nconst f_size = 10;\n\nconst g_x = 0;\nconst g_y = 1;\nconst g_isEdge = 2;\nconst g_count = 3;\nconst g_edge0 = 4;\nconst g_edge1 = 5;\nconst g_edge2 = 6;\nconst g_edge3 = 7;\nconst g_edge4 = 8;\nconst g_edge5 = 9;\nconst g_size = 10;\n\nconst TAU = Math.PI * 2;\n\nconst SIXTH = TAU / 6;\n\nfunction calculateNumberOfFaces(limit)\n{\n    return 6 * (limit + 1) * (limit + 1);\n}\n\n\nconst DEFAULT_CONFIG = {\n    /** coordinate width */\n    width: 0,\n    /** coordinate height */\n    height: 0,\n    /** number of rings in the hexagon / number of base intersections of hexaxgon */\n    numberOfRings: 5,\n    /** how many percent of the edges shall we attempt to remove? */\n    removeEdges: 50,\n\n    /** if true, the graph will be layouted a bit with every render. If false, the graph relaxation happens at creation */\n    animatedEasing: true,\n\n    /** Set to true to render the original triangles, set to \"merged\" to render the merged triangles before subdivision */\n    renderFirstPassEdges: false,\n\n     /** Set to true to enable some debug logging */\n    debug : false,\n\n    addQuads: false,\n\n    weightFunction : (x0,y0,x1,y1) => {\n        const dx = x1 - x0;\n        const dy = y1 - y0;\n        return Math.sqrt(dx * dx + dy * dy);\n    },\n\n    /// MOSTLY INTERNAL CONFIG ////\n    \n    // calculated internally to match the height\n    edgeLength: 80,\n    // number of iterations until we give up (we will drop out due to having reached low energy most likely much sooner)\n    maxIterations: 100,\n    // set to false if the graph is done animated on animatedEasing : true\n    animating: true,\n\n    // Minimum energy at which we stop relaxing the graph\n    minTension: 2\n};\n\nfunction updateConfig(config)\n{\n    config.numFaces = calculateNumberOfFaces(config.numberOfRings)\n    config.firstPassLen = config.numFaces * f_size\n    config.firstPassNumEdges = config.numFaces * 3\n    config.edgeLength = ( Math.min(config.width, config.height) / (config.numberOfRings * 2 + 2)) | 0;\n    config.animating = config.animatedEasing;\n    config.relaxCount = 0;\n}\n\n\nfunction createHexagonTriangles(config)\n{\n\n    const limit = config.numberOfRings;\n\n    //console.log(\"createHexagonTriangles\", limit);\n\n    const DIRECTIONS = [\n        new Vector(\n            Math.cos(0) * config.edgeLength,\n            Math.sin(0) * config.edgeLength\n        ),\n        new Vector(\n            Math.cos(SIXTH) * config.edgeLength,\n            Math.sin(SIXTH) * config.edgeLength\n        ),\n        new Vector(\n            Math.cos(SIXTH * 2) * config.edgeLength,\n            Math.sin(SIXTH * 2) * config.edgeLength\n        ),\n        new Vector(\n            Math.cos(SIXTH * 3) * config.edgeLength,\n            Math.sin(SIXTH * 3) * config.edgeLength\n        ),\n        new Vector(\n            Math.cos(SIXTH * 4) * config.edgeLength,\n            Math.sin(SIXTH * 4) * config.edgeLength\n        ),\n        new Vector(\n            Math.cos(SIXTH * 5) * config.edgeLength,\n            Math.sin(SIXTH * 5) * config.edgeLength\n        )\n    ];\n\n    const faces = new Float64Array(config.firstPassLen);\n\n    let off = 0;\n\n    let count = 0;\n    let numTris = 1;\n    do\n    {\n        for (let i = 0; i < 6; i++)\n        {\n            const v0 = DIRECTIONS[i];\n            const v1 = DIRECTIONS[(i + 1) % 6];\n            const v2 = DIRECTIONS[(i + 2) % 6];\n\n            let pos = v0.copy().scale(count);\n\n            for (let j = 0; j < numTris; j++)\n            {\n                if (j & 1)\n                {\n                    faces[off + f_x0] = (pos.x) | 0;\n                    faces[off + f_y0] = (pos.y) | 0;\n                    faces[off + f_x1] = (pos.x + v1.x) | 0;\n                    faces[off + f_y1] = (pos.y + v1.y) | 0;\n                    faces[off + f_x2] = (pos.x + v2.x) | 0;\n                    faces[off + f_y2] = (pos.y + v2.y) | 0;\n                    faces[off + f_count] = 3;\n                    faces[off + f_outmostEdge] = -1;\n\n                    off += f_size;\n\n                    pos.add(v2);\n                }\n                else\n                {\n\n                    // All tris in the last row all have their edge #1 on the outer edge of the big hexagon\n                    const isOutmost = count === limit;\n\n                    faces[off + f_x0] = (pos.x) | 0;\n                    faces[off + f_y0] = (pos.y) | 0;\n                    faces[off + f_x1] = (pos.x + v0.x) | 0;\n                    faces[off + f_y1] = (pos.y + v0.y) | 0;\n                    faces[off + f_x2] = (pos.x + v1.x) | 0;\n                    faces[off + f_y2] = (pos.y + v1.y) | 0;\n                    faces[off + f_count] = 3;\n                    faces[off + f_outmostEdge] = isOutmost ? 1 : -1;\n\n                    off += f_size;\n                }\n            }\n        }\n\n        numTris += 2;\n\n    } while (count++ < limit);\n\n    return faces;\n}\n\n\nfunction findOtherEdge(faces, x0, y0, x1, y1, index, out)\n{\n    for (let i = 0; i < faces.length; i += f_size)\n    {\n        if (i === index)\n        {\n            continue;\n        }\n\n        // console.log(\"find\", x0, y0, x1, y1, \":\",\n        //     faces[i + f_x0], faces[i + f_y0],\n        //     faces[i + f_x1], faces[i + f_y1],\n        //     faces[i + f_x2], faces[i + f_y2],\n        //     faces[i + f_x3], faces[i + f_y3],\n        // );\n\n        const count = faces[i + f_count];\n        if (\n            faces[i + f_x0] === x1 && faces[i + f_y0] === y1 &&\n            faces[i + f_x1] === x0 && faces[i + f_y1] === y0\n        )\n        {\n            out.index = i;\n            out.edge = 0;\n            return;\n        }\n        if (\n            faces[i + f_x1] === x1 && faces[i + f_y1] === y1 &&\n            faces[i + f_x2] === x0 && faces[i + f_y2] === y0\n        )\n        {\n            out.index = i;\n            out.edge = 1;\n            return;\n        }\n\n        if (count === 3)\n        {\n            if (\n                faces[i + f_x2] === x1 && faces[i + f_y2] === y1 &&\n                faces[i + f_x0] === x0 && faces[i + f_y0] === y0\n            )\n            {\n                out.index = i;\n                out.edge = 2;\n                return;\n            }\n        }\n        else\n        {\n            if (\n                faces[i + f_x2] === x1 && faces[i + f_y2] === y1 &&\n                faces[i + f_x3] === x0 && faces[i + f_y3] === y0\n            )\n            {\n                out.index = i;\n                out.edge = 2;\n                return;\n            }\n\n            if (\n                faces[i + f_x3] === x1 && faces[i + f_y3] === y1 &&\n                faces[i + f_x0] === x0 && faces[i + f_y0] === y0\n            )\n            {\n                out.index = i;\n                out.edge = 3;\n                return;\n            }\n\n        }\n    }\n\n    out.index = -1;\n}\n\n\nconst out = {index: -1, edge: 0};\n\n\nfunction getEdgeStack(config, faces)\n{\n    const length = config.numFaces * 3;\n    const stack = new Int32Array(length);\n\n    let pos = 0;\n    for (let i = 0; i < config.firstPassLen; i += f_size)\n    {\n        const outmostEdge = faces[i + f_outmostEdge];\n\n        const targetIsOutmostFace = outmostEdge >= 0;\n        // we can't remove any of the outmost edges around the big hexagon (and we avoid having an edge triange as\n        // first merged triangle to simplify edge removal\n        if (!targetIsOutmostFace)\n        {\n            const scaled = i << 2;\n            stack[pos++] = scaled ;\n            stack[pos++] = scaled + 1;\n            stack[pos++] = scaled + 2;\n        }\n    }\n\n    // fisher-yates shuffle the stack\n    for (let i  = 0; i < pos - 2; i++)\n    {\n        const j = i + ((Math.random() * pos - i - 1)|0)\n        const tmp = stack[i];\n        stack[i] = stack[j];\n        stack[j] = tmp;\n    }\n    return stack.slice(0, pos);\n}\n\n\nfunction removeRandomEdges(config, faces)\n{\n    const count = (config.firstPassNumEdges * config.removeEdges / 100)|0;\n\n    //console.log(\"remove attempts\", count);\n\n    const stack = getEdgeStack(config, faces);\n\n    if (config.debug)\n    {\n        console.log(\"Shuffled stack\", [ ... stack.slice() ])\n    }\n\n    let stackPos = 0;\n\n\n    const eraseEdgesOfFaceInStack = index => {\n\n        for (let i = stackPos; i < stack.length; i++)\n        {\n            if ((stack[i] >>> 2) === index)\n            {\n                stack[i] = -1;\n            }\n        }\n    }\n\n\n\n    let success = 0;\n\n    // function printEdge(faces, otherIndex, outMostEdge)\n    // {\n    //     const count = faces[otherIndex + f_count];\n    //     const x0 = faces[otherIndex + outMostEdge * 2]\n    //     const y0 = faces[otherIndex + outMostEdge * 2 + 1]\n    //     const x1 = outMostEdge === count -1 ? faces[otherIndex] : faces[otherIndex + (outMostEdge + 1) * 2]\n    //     const y1 = outMostEdge === count -1 ? faces[otherIndex + 1] : faces[otherIndex + (outMostEdge + 1) * 2 + 1]\n    //\n    //\n    //     return x0 + \",\" + y0 + \",\" + x1 + \",\" + y1;\n    // }\n\n    for (let i = 0; i < count; i++)\n    {\n        let code;\n        do\n        {\n            if (stackPos === stack.length)\n            {\n                if (config.debug)\n                {\n                    config.debug && console.log(\"Ran out of removal candidates after successfully removing\", success, \"out of\", count);\n                }\n                // no more valid removals\n                return;\n            }\n            code = stack[stackPos++];\n        } while (code === -1);\n\n\n        const index = code >> 2;\n        const edge = code & 3;\n\n        const x0 = faces[index + edge * 2];\n        const y0 = faces[index + edge * 2 + 1];\n        const x1 = edge === 2 ? faces[index + f_x0] : faces[index + (edge + 1) * 2];\n        const y1 = edge === 2 ? faces[index + f_y0] : faces[index + (edge + 1) * 2 + 1];\n\n        findOtherEdge(faces, x0, y0, x1, y1, index, out)\n        if (out.index >= 0 && faces[out.index + f_count] === 3)\n        {\n            const {index: otherIndex, edge: otherEdge} = out;\n            const x2 = edge === 0 ? faces[index + f_x2] : faces[index + (edge - 1) * 2];\n            const y2 = edge === 0 ? faces[index + f_y2] : faces[index + (edge - 1) * 2 + 1];\n\n            // check if we're merging with an outmost face\n            const outMostEdge = faces[otherIndex + 9];\n            const otherIsOutmostTri = outMostEdge >= 0;\n\n            //const before = printEdge(faces, otherIndex, outMostEdge)\n            // if (otherIsOutmostTri)\n            // {\n            //     console.log(\"OUTMOST edge before split\", printEdge(faces, otherIndex, outMostEdge),\"EDGE CASE\", otherEdge, \"outMostEdge\", outMostEdge)\n            //     console.log(\"face before\", faces.slice(otherIndex, otherIndex + f_size))\n            // }\n\n            faces[otherIndex + 8] = 4;\n            switch (otherEdge)\n            {\n                case 2:\n                    faces[otherIndex + f_x3] = x2;\n                    faces[otherIndex + f_y3] = y2;\n                    break;\n                case 1:\n                    faces[otherIndex + f_x3] = faces[otherIndex + f_x2];\n                    faces[otherIndex + f_y3] = faces[otherIndex + f_y2];\n                    faces[otherIndex + f_x2] = x2;\n                    faces[otherIndex + f_y2] = y2;\n                    break;\n                case 0:\n                    faces[otherIndex + f_x3] = faces[otherIndex + f_x2];\n                    faces[otherIndex + f_y3] = faces[otherIndex + f_y2];\n                    faces[otherIndex + f_x2] = faces[otherIndex + f_x1];\n                    faces[otherIndex + f_y2] = faces[otherIndex + f_y1];\n                    faces[otherIndex + f_x1] = x2\n                    faces[otherIndex + f_y1] = y2;\n\n                    if (otherIsOutmostTri)\n                    {\n                        faces[otherIndex + f_outmostEdge] = 2;\n                    }\n\n                    break;\n\n            }\n            eraseEdgesOfFaceInStack(otherIndex)\n\n            // remove our face\n            faces[index + f_count] = 0;\n\n            success++;\n        }\n        eraseEdgesOfFaceInStack(index)\n\n    }\n\n    config.debug && console.log(\"Successfully removed\", success, \"out of\", count);\n\n    return success;\n}\n\n\nfunction calculateNumNodes(config, faces)\n{\n    let tris = 0;\n    let quads = 0;\n    for (let i = 0; i < config.firstPassLen; i += f_size)\n    {\n        const count = faces[i + f_count];\n\n        if (count === 3)\n        {\n            tris++;\n        }\n        else if (count === 4)\n        {\n            quads++;\n        }\n    }\n\n    //console.log({quads,tris})\n\n    // we divide each quad in 9 nodes and each tri into 7 nodes\n    return quads * 9 + tris * 7;\n}\n\n\nconst QUAD_SIZE = 4;\n\n\nfunction subdivide(config, faces)\n{\n    const { firstPassLen, addQuads } = config;\n\n    const numNodes = calculateNumNodes(config, faces);\n\n    const nodes = new Float64Array(numNodes * g_size);\n\n\n    const quads = addQuads && new Int32Array(numNodes * QUAD_SIZE);\n\n    let pos = 0;\n    let qPos = 0;\n\n    const insertNode = (x0, y0, isEdge) => {\n\n        x0 |= 0;\n        y0 |= 0;\n\n        for (let i = 0; i < pos; i += g_size)\n        {\n            if (Math.abs(nodes[i] - x0) < 2 && Math.abs(nodes[i + 1] - y0) < 2)\n            {\n                // if we discover an odd face vertex touching the outmost edge, we will\n                // not register that because the odd tris are not marked as having an outmost edge, because they don't, they\n                // only have one vertices on the edge at most\n                // Later we might however return to that node within an outmost edge and we have to make sure that\n                // we take over the isEdge status from such a node\n                if (isEdge && !nodes[i + 2])\n                {\n                    nodes[i + 2] = 1;\n                }\n\n                return i;\n            }\n        }\n\n        const index = pos;\n\n        nodes[pos + g_x] = x0;\n        nodes[pos + g_y] = y0;\n        nodes[pos + g_isEdge] = isEdge ? 1 : 0;\n        nodes[pos + g_count] = 0;\n\n        pos += g_size;\n\n        return index;\n    }\n\n    const addQuad = addQuads && ((n0,n1,n2,n3) => {\n\n        quads[qPos++] = n0;\n        quads[qPos++] = n1;\n        quads[qPos++] = n2;\n        quads[qPos++] = n3;\n\n    });\n\n    const insertEdge = (n0, n1) => {\n        let count = nodes[n0 + 3];\n\n        let found = false;\n        for (let i = 0; i < count; i++)\n        {\n            const other = nodes[n0 + 4 + i];\n            if (other === n1)\n            {\n                found = true;\n                break;\n            }\n        }\n        if (!found)\n        {\n            if (count >= 10)\n            {\n                throw new Error(\"At most 10 edges per node\")\n            }\n\n            nodes[n0 + 4 + count++] = n1;\n            nodes[n0 + 3] = count;\n        }\n\n    }\n    const connect = (n0, n1) => {\n\n        insertEdge(n0, n1);\n        insertEdge(n1, n0);\n\n    }\n\n    for (let i = 0; i < firstPassLen; i += f_size)\n    {\n        const count = faces[i + f_count];\n        if (count === 0)\n        {\n            continue;\n        }\n\n        const x0 = faces[i + f_x0]\n        const y0 = faces[i + f_y0]\n        const x1 = faces[i + f_x1]\n        const y1 = faces[i + f_y1]\n        const x2 = faces[i + f_x2]\n        const y2 = faces[i + f_y2]\n\n        const outmostEdge = faces[i + f_outmostEdge ];\n\n        const firstEdgeIsOutmost = outmostEdge === 1;\n        const secondEdgeIsOutmost = outmostEdge === 2;\n\n        if (count === 3)\n        {\n            const m0x = (x0 + x1) / 2;\n            const m0y = (y0 + y1) / 2;\n            const m1x = (x1 + x2) / 2;\n            const m1y = (y1 + y2) / 2;\n            const m2x = (x2 + x0) / 2;\n            const m2y = (y2 + y0) / 2;\n\n            const cx = (x0 + x1 + x2) / 3\n            const cy = (y0 + y1 + y2) / 3\n\n            const n0 = insertNode(x0, y0);\n            const n1 = insertNode(m0x, m0y);\n            const n2 = insertNode(x1, y1, firstEdgeIsOutmost);\n            const n3 = insertNode(m1x, m1y, firstEdgeIsOutmost);\n            const n4 = insertNode(x2, y2, firstEdgeIsOutmost);\n            const n5 = insertNode(m2x, m2y);\n            const n6 = insertNode(cx, cy);\n\n            connect(n0, n1);\n            connect(n1, n6);\n            connect(n6, n5);\n            connect(n5, n0);\n\n            connect(n1, n2);\n            connect(n2, n3);\n            connect(n3, n6);\n            connect(n6, n1);\n\n            connect(n5, n6);\n            connect(n6, n3);\n            connect(n3, n4);\n            connect(n4, n5);\n\n            if (addQuads)\n            {\n                addQuad(n0,n1,n6,n5);\n                addQuad(n1,n2,n3,n6);\n                addQuad(n5,n6,n3,n4);\n            }\n\n        }\n        else\n        {\n            const x3 = faces[i + f_x3]\n            const y3 = faces[i + f_y3]\n\n            const m0x = (x0 + x1) / 2;\n            const m0y = (y0 + y1) / 2;\n            const m1x = (x1 + x2) / 2;\n            const m1y = (y1 + y2) / 2;\n            const m2x = (x2 + x3) / 2;\n            const m2y = (y2 + y3) / 2;\n            const m3x = (x3 + x0) / 2;\n            const m3y = (y3 + y0) / 2;\n\n            const cx = (x0 + x1 + x2 + x3) / 4\n            const cy = (y0 + y1 + y2 + y3) / 4\n\n            const n0 = insertNode(x0, y0);\n            const n1 = insertNode(m0x, m0y);\n            const n2 = insertNode(x1, y1, firstEdgeIsOutmost);\n            const n3 = insertNode(m1x, m1y, firstEdgeIsOutmost);\n            const n4 = insertNode(x2, y2, firstEdgeIsOutmost || secondEdgeIsOutmost);\n            const n5 = insertNode(m2x, m2y, secondEdgeIsOutmost);\n            const n6 = insertNode(x3, y3, secondEdgeIsOutmost);\n            const n7 = insertNode(m3x, m3y);\n            const n8 = insertNode(cx, cy);\n\n            connect(n0, n1);\n            connect(n1, n2);\n            connect(n2, n3);\n            connect(n3, n4);\n            connect(n4, n5);\n            connect(n5, n6);\n            connect(n6, n7);\n            connect(n7, n0);\n\n            connect(n8, n3);\n            connect(n8, n5);\n            connect(n8, n7);\n            connect(n8, n1);\n\n            if (addQuads)\n            {\n                addQuad(n0,n1,n8,n7);\n                addQuad(n1,n2,n3,n8);\n                addQuad(n8,n3,n4,n5);\n                addQuad(n7,n8,n5,n6);\n            }\n        }\n    }\n\n    //const fillRate = (pos / g_size) / numNodes;\n    //console.log(\"SUBDIVIDED: limit = \", numNodes, \", fill rate = \", fillRate);\n\n    return [nodes.slice(0, pos), quads && quads.slice(0, qPos)];\n}\n\n\nfunction relaxWeighted(config, graph, maxIterations = 1)\n{\n\n    const {length} = graph;\n\n    for (let i = 0; i < maxIterations; i++)\n    {\n        let tension = 0;\n        for (let j = 0; j < length; j += g_size)\n        {\n            if (!graph[j + g_isEdge])\n            {\n                const x0 = graph[j + g_x]\n                const y0 = graph[j + g_y]\n                const edgeCount = graph[j + g_count]\n\n                let centerX = 0;\n                let centerY = 0;\n                let sumWeight = 0;\n\n                for (let k = 0; k < edgeCount; k++)\n                {\n                    const other = graph[j + 4 + k];\n\n                    const x1 = graph[other];\n                    const y1 = graph[other + 1];\n\n                    const weight = config.weightFunction(x0, y0, x1, y1);\n\n                    centerX += x1 * weight;\n                    centerY += y1 * weight;\n                    sumWeight += weight;\n                }\n\n                const x1 = centerX / sumWeight\n                const y1 = centerY / sumWeight;\n\n                const dx = x1 - x0;\n                const dy = y1 - y0;\n\n                graph[j + g_x] = x1;\n                graph[j + g_y] = y1;\n\n                tension += dx * dx + dy * dy;\n\n            }\n        }\n\n        if (tension < config.minTension)\n        {\n            config.debug && console.log(\"Reached minimal tension\", config.minTension, \"after\", config.relaxCount, \"iterations\")\n            return true;\n        }\n        config.relaxCount++;\n    }\n\n    if (!config.animatedEasing)\n    {\n        config.debug && console.log(\"Stopping after max iterations = \" + config.maxIterations)\n    }\n\n    return false;\n}\n\n\n/**\n * A hexagon filled with quads forming organic shapes.\n */\nclass OrganicQuads {\n    constructor(cfg)\n    {\n\n        const config = {\n            ...DEFAULT_CONFIG,\n            ...cfg\n        }\n\n        updateConfig(config)\n\n        this.config = config;\n\n        const faces = createHexagonTriangles(config);\n\n        if (config.renderFirstPassEdges)\n        {\n            this.faces = config.renderFirstPassEdges !== \"merged\" ? faces.slice() : faces;\n        }\n\n        const start = config.debug && now();\n\n        removeRandomEdges(config, faces)\n\n        config.debug && console.log(\"Edge removal in \" , now() - start, \"ms\")\n\n        const [graph, quads] = subdivide(config, faces);\n        this.quads = quads;\n\n        if (!config.animating)\n        {\n            relaxWeighted(config, graph, config.maxIterations);\n        }\n        //console.log(\"GRAPH f_size\", graph.length / g_size, graph);\n        this.graph = graph;\n\n    }\n\n\n    render = ctx =>\n    {\n        const { config, graph, faces } = this;\n\n\n        ctx.save();\n\n        const hw = config.width / 2;\n        const hh = config.height / 2;\n\n        ctx.translate(hw, hh)\n\n        const {length} = graph;\n\n        ctx.fillStyle = \"#000\";\n        ctx.fillRect(-hw, -hh, config.width, config.height)\n\n        if (config.renderFirstPassEdges)\n        {\n\n            // draw original quads and tris\n\n            ctx.strokeStyle = \"#f00\";\n            ctx.lineWidth = 1;\n\n\n            let outerCount = 0;\n            for (let pos = 0; pos < config.firstPassLen; pos += f_size)\n            {\n                const count = faces[pos + f_count];\n\n                if (count >= 3)\n                {\n\n                    ctx.beginPath();\n                    ctx.moveTo(faces[pos + f_x0 ],faces[pos + f_y0]);\n\n                    for (let i = 1; i < count; i++)\n                    {\n                        ctx.lineTo(faces[pos + i*2],faces[pos +  i*2 + 1]);\n                    }\n\n                    ctx.closePath();\n                    ctx.stroke();\n\n                    const outmostEdge = faces[pos + f_outmostEdge];\n                    if (outmostEdge >= 0)\n                    {\n                        ctx.strokeStyle = \"#fe0\";\n                        ctx.beginPath();\n                        ctx.moveTo(faces[pos + outmostEdge * 2  ],faces[pos + outmostEdge * 2 + 1]);\n\n                        if (outmostEdge === count - 1)\n                        {\n                            ctx.lineTo(faces[pos + f_x0 ],faces[pos + f_y0]);\n                        }\n                        else\n                        {\n                            ctx.lineTo(faces[pos + (outmostEdge + 1 ) * 2  ],faces[pos + (outmostEdge + 1 ) * 2 + 1]);\n                        }\n                        ctx.stroke();\n                        ctx.strokeStyle = \"#f00\";\n\n                        outerCount++;\n\n                    }\n\n                }\n            }\n            //    console.log(\"Number of outer edges\", outerCount)\n\n            //console.log(\"DRAW EDGES\")\n        }\n\n        ctx.strokeStyle = \"#fff\";\n        ctx.lineWidth = 1;\n\n\n        function drawEdge(x0, y0, node)\n        {\n            const x1 = graph[node + g_x];\n            const y1 = graph[node + g_y];\n\n            ctx.beginPath();\n            ctx.moveTo(x0, y0);\n            ctx.lineTo(x1, y1);\n            ctx.stroke();\n        }\n\n\n        for (let i = 0; i < length; i += g_size)\n        {\n            const x0 = graph[i + g_x];\n            const y0 = graph[i + g_y];\n            const edgeCount = graph[i + g_count];\n\n            for (let j = 0; j < edgeCount; j++)\n            {\n                drawEdge(x0, y0, graph[i + g_edge0 + j])\n            }\n        }\n\n        //ctx.fillStyle = \"#f0f\";\n        //\n        // for (let i = 0; i < length; i += g_size)\n        // {\n        //     const x0 = graph[i + g_x];\n        //     const y0 = graph[i + g_y];\n        //     const isEdge = graph[i + g_isEdge];\n        //\n        //     if (isEdge)\n        //     {\n        //         ctx.fillRect(x0 - 4,  y0 - 4, 8, 8)\n        //     }\n        // }\n\n        // ctx.strokeStyle = \"#f00\";\n        // ctx.lineWidth = 4;\n        //\n        // for (let pos = 0; pos < config.firstPassLen; pos += f_size)\n        // {\n        //     const count = faces[pos + f_count];\n        //     const outmostEdge = faces[pos + f_outmostEdge];\n        //\n        //\n        //     const last = count - 1;\n        //     for (let i=0; i < count; i++)\n        //     {\n        //         if (i === outmostEdge)\n        //         {\n        //             ctx.strokeStyle = \"rgba(255,0,0,0.5)\";\n        //         }\n        //         else\n        //         {\n        //             ctx.strokeStyle = \"rgba(0,255,0,0.5)\";\n        //         }\n        //\n        //         ctx.beginPath();\n        //         ctx.moveTo(faces[pos + i * 2], faces[pos + i * 2 + 1]);\n        //         ctx.lineTo(\n        //             i === last ? faces[pos + f_x0 ] : faces[pos + (i+1) * 2],\n        //             i === last ? faces[pos + f_y0 ] : faces[pos + (i+1) * 2 + 1]\n        //         );\n        //         ctx.stroke();\n        //     }\n        // }\n\n        ctx.restore();\n\n        if (config.animating)\n        {\n            if (relaxWeighted(config, graph))\n            {\n                config.animating = false;\n            }\n            //            raf(redrawGraph)\n        }\n    }\n\n    get nodeSize()\n    {\n        return f_size;\n    }\n}\n\n\nexport {  Vector }\n\nexport default OrganicQuads\n","const sqrt = Math.sqrt;\n\nclass Vector\n{\n    constructor(x,y)\n    {\n        this.x = x;\n        this.y = y;\n    }\n\n    /**\n     * Returns a copy of this vector.\n     *\n     * @returns {Vector} copy\n     */\n    copy()\n    {\n        return new Vector(this.x,this.y);\n    }\n\n    /**\n     * Adds to this vector\n     *\n     * @param x     {number|Vector} x coordinate or a vector\n     * @param y     {number?} y coordinate, ignored if x is a vector\n     * @returns {Vector} this vector\n     */\n\n    add(x,y)\n    {\n        if (typeof x === \"number\")\n        {\n            this.x += x;\n            this.y += y;\n        }\n        else\n        {\n            this.x += x.x;\n            this.y += x.y;\n        }\n\n        return this;\n    }\n\n    /**\n     * Subtracts from this vector\n     *\n     * @param x     {number|Vector} x coordinate or a vector\n     * @param y     {number?} y coordinate, ignored if x is a vector\n     * @returns {Vector} this vector\n     */\n    subtract(x,y)\n    {\n        if (typeof x === \"number\")\n        {\n            this.x -= x;\n            this.y -= y;\n        }\n        else\n        {\n            this.x -= x.x;\n            this.y -= x.y;\n        }\n\n        return this;\n    }\n\n    /**\n     * Scales the vector by a planar number.\n     *\n     * @param n     scale\n     * @returns {Vector} this vector, scaled\n     */\n    scale(n)\n    {\n        this.x *= n;\n        this.y *= n;\n\n        return this;\n    }\n\n    /**\n     * Length of this vector\n     *\n     * @returns {number}    length\n     */\n    length()\n    {\n        const { x, y } = this;\n        return sqrt(x*x+y*y);\n    }\n\n    /**\n     * Scales the vector to normal length or a specified length\n     *\n     * @param targetLength      {number?} target length of the vector (default is 1, the normal vector length)\n     *\n     * @returns {Vector}\n     */\n    norm(targetLength = 1)\n    {\n        return this.scale(targetLength / this.length());\n    }\n\n    /**\n     * Rotate vector 90 degrees clockwise.\n     *\n     * @returns {Vector}\n     */\n    rotateClockwise()\n    {\n        const { x, y } = this;\n\n        //noinspection JSSuspiciousNameCombination\n        this.x = y;\n        this.y = -x;\n\n        return this;\n    }\n\n    /**\n     * Rotate vector 90 degrees counter clockwise.\n     *\n     * @returns {Vector}\n     */\n    rotateCounterClockwise()\n    {\n        const { x, y } = this;\n\n        this.x = -y;\n        //noinspection JSSuspiciousNameCombination\n        this.y = x;\n\n        return this;\n    }\n\n    /**\n     * Sets the coordinates of this vector\n     *\n     * @param x     {number|Vector} x coordinate or a vector\n     * @param y     {number?} y coordinate, ignored if x is a vector\n     * @returns {Vector} this vector\n     */\n    set(x,y)\n    {\n        if (typeof x === \"number\")\n        {\n            this.x = x;\n            this.y = y;\n        }\n        else\n        {\n            this.x = x.x;\n            this.y = x.y;\n        }\n\n    }\n}\n\nexport default Vector;\n","import React, { useMemo, useRef } from \"react\"\nimport raf   from \"raf\"\nimport ReactDOM from \"react-dom\"\n// noinspection ES6UnusedImports\nimport STYLE from \"./style.css\"\nimport {\n    Color,\n    CubeCamera,\n    DirectionalLight,\n    FrontSide,\n    Float32BufferAttribute,\n    IcosahedronBufferGeometry,\n    LinearMipmapLinearFilter,\n    Mesh,\n    MeshStandardMaterial,\n    PerspectiveCamera,\n    PlaneBufferGeometry,\n    RepeatWrapping,\n    Scene,\n    TextureLoader,\n    WebGLRenderer,\n    BoxBufferGeometry\n} from \"three\";\nimport OrganicQuads from \"@fforw/organic-quads\";\nimport loadScene from \"./loadScene\";\nimport { Water } from \"three/examples/jsm/objects/Water.js\";\nimport { Sky } from \"three/examples/jsm/objects/Sky.js\";\n\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport loadTexture from \"./loadTexture\";\nimport Services from \"./worker/Services\";\n\n\nconst organicQuads = new OrganicQuads({\n    numberOfRings: 4,\n    width: 100,\n    height: 100,\n    addQuads: true\n});\n\nlet container, stats;\nlet camera, scene, renderer, light;\nlet controls, water, sphere;\n\n\nfunction init() {\n\n    container = document.getElementById( \"container\" );\n\n    //\n\n    renderer = new WebGLRenderer();\n    renderer.setPixelRatio( window.devicePixelRatio );\n    renderer.setSize( window.innerWidth, window.innerHeight );\n    container.appendChild( renderer.domElement );\n\n    //\n\n    scene = new Scene();\n\n    //\n\n    camera = new PerspectiveCamera( 55, window.innerWidth / window.innerHeight, 1, 20000 );\n    camera.position.set( 30, 30, 100 );\n\n    //\n\n    light = new DirectionalLight( 0xffffff, 0.8 );\n    scene.add( light );\n\n    // Water\n\n    const waterGeometry = new PlaneBufferGeometry(10000, 10000);\n\n    water = new Water(\n        waterGeometry,\n        {\n            textureWidth: 512,\n            textureHeight: 512,\n            waterNormals,\n            alpha: 0.9,\n            sunDirection: light.position.clone().normalize(),\n            sunColor: \"#fff8d5\",\n            waterColor: \"#000e1e\",\n            distortionScale: 3.7,\n            fog: scene.fog !== undefined\n        }\n    );\n\n    water.rotation.x = - Math.PI / 2;\n\n    scene.add( water );\n\n    // Skybox\n\n    const sky = new Sky();\n\n    const uniforms = sky.material.uniforms;\n\n    uniforms[ \"turbidity\" ].value = 5;\n    uniforms[ \"rayleigh\" ].value = 1.5;\n    uniforms[ \"luminance\" ].value = 1;\n    uniforms[ \"mieCoefficient\" ].value = 0.05;\n    uniforms[ \"mieDirectionalG\" ].value = 0.8;\n\n    const parameters = {\n        distance: 1000,\n        inclination: 0.05,\n        azimuth: 0.25\n    };\n\n    const cubeCamera = new CubeCamera(0.1, 1, 512);\n    cubeCamera.renderTarget.texture.generateMipmaps = true;\n    cubeCamera.renderTarget.texture.minFilter = LinearMipmapLinearFilter;\n\n    scene.background = cubeCamera.renderTarget;\n\n    function updateSun() {\n\n        const theta = Math.PI * (parameters.inclination - 0.5);\n        const phi = 2 * Math.PI * (parameters.azimuth - 0.5);\n\n        light.position.x = parameters.distance * Math.cos( phi );\n        light.position.y = parameters.distance * Math.sin( phi ) * Math.sin( theta );\n        light.position.z = parameters.distance * Math.sin( phi ) * Math.cos( theta );\n\n        sky.material.uniforms[ \"sunPosition\" ].value = light.position.copy( light.position );\n        water.material.uniforms[ \"sunDirection\" ].value.copy( light.position ).normalize();\n\n        cubeCamera.update( renderer, sky );\n\n    }\n\n    updateSun();\n\n    //\n\n    const geometry = new BoxBufferGeometry(20, 20, 20);\n    const count = geometry.attributes.position.count;\n\n    const colors = [];\n    const color = new Color();\n\n    for (let i = 0; i < count; i += 3 ) {\n\n        color.setHex( Math.random() * 0xffffff );\n\n        colors.push( color.r, color.g, color.b );\n        colors.push( color.r, color.g, color.b );\n        colors.push( color.r, color.g, color.b );\n\n    }\n\n    geometry.setAttribute( \"color\", new Float32BufferAttribute( colors, 3 ) );\n\n    const material = new MeshStandardMaterial({\n        vertexColors: true,\n        roughness: 0.0,\n        flatShading: true,\n        envMap: cubeCamera.renderTarget.texture,\n        side: FrontSide\n    });\n\n    sphere = new Mesh( geometry, material );\n    scene.add( sphere );\n\n    //\n\n    controls = new OrbitControls( camera, renderer.domElement );\n    controls.maxPolarAngle = Math.PI * 0.45;\n    controls.target.set( 0, 0, 0 );\n    controls.minDistance = 40.0;\n    controls.maxDistance = 300.0;\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.02;\n    controls.update();\n\n    //\n\n    // stats = new Stats();\n    // container.appendChild( stats.dom );\n\n    // GUI\n\n    //var gui = new GUI();\n\n    // var folder = gui.addFolder( \"Sky\" );\n    // folder.add( parameters, \"inclination\", 0, 0.5, 0.0001 ).onChange( updateSun );\n    // folder.add( parameters, \"azimuth\", 0, 1, 0.0001 ).onChange( updateSun );\n    // folder.open();\n    //\n    // var uniforms = water.material.uniforms;\n    //\n    // var folder = gui.addFolder( \"Water\" );\n    // folder.add( uniforms.distortionScale, \"value\", 0, 8, 0.1 ).name( \"distortionScale\" );\n    // folder.add( uniforms.size, \"value\", 0.1, 10, 0.1 ).name( \"size\" );\n    // folder.add( uniforms.alpha, \"value\", 0.9, 1, .001 ).name( \"alpha\" );\n    // folder.open();\n\n    //\n\n    window.addEventListener( \"resize\", onWindowResize, false );\n\n}\n\nfunction onWindowResize() {\n\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n\n    renderer.setSize( window.innerWidth, window.innerHeight );\n\n}\n\nfunction mainLoop() {\n\n    render();\n    //stats.update();\n    controls.update()\n    raf( mainLoop );\n\n}\n\nfunction render() {\n\n    const time = performance.now() * 0.001;\n\n    sphere.position.y = Math.sin( time ) * 5 + 1;\n    sphere.rotation.x = time * 0.5;\n    sphere.rotation.z = time * 0.51;\n\n    water.material.uniforms[ \"time\" ].value += 1.0 / 60.0;\n\n    renderer.render( scene, camera );\n\n}\n\n\nlet waterNormals;\n\nPromise.all([\n    loadScene(\"assets/tiles.glb\"),\n    loadTexture(\"assets/waternormals.jpg\")\n])\n    .then(([gltf, oceanNormals]) => {\n\n        //scene.add( gltf.scene );\n\n        // console.log(\"Scene Objects\", gltf.scene.children.map(kid => kid.name).join(\", \"))\n        //\n        // const obj  = gltf.scene.children.find(\n        //     kid => kid.name === \"tree_default\"\n        // );\n\n        oceanNormals.wrapS = oceanNormals.wrapT = RepeatWrapping;\n        waterNormals = oceanNormals;\n\n        // gltf.animations; // Array<AnimationClip>\n        // gltf.scene; // Group\n        // gltf.scenes; // Array<Group>\n        // gltf.cameras; // Array<Camera>\n        // gltf.asset; // Object\n\n        // ReactDOM.render(\n        //     <Game/>,\n        //     document.getElementById(\"root\")\n        // )\n\n        init();\n        mainLoop();\n    })\n","\n// Instantiate a loader\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\n\nconst loader = new GLTFLoader();\n\nexport default function(url, onProgress = null)\n{\n    return new Promise(((resolve, reject) => {\n        // Load a glTF resource\n        loader.load(\n            // resource URL\n            url,\n            // called when the resource is loaded\n            resolve,\n            // called while loading is progressing\n            onProgress,\n            // called when loading has errors\n            reject\n        );\n\n    }))\n}\n","// Instantiate a loader\nimport { TextureLoader } from \"three\";\n\nconst loader = new TextureLoader();\n\nexport default function(url, onProgress = null)\n{\n    return new Promise(((resolve, reject) => {\n        // Load a glTF resource\n        loader.load(\n            // resource URL\n            url,\n            // called when the resource is loaded\n            resolve,\n            // called while loading is progressing\n            onProgress,\n            // called when loading has errors\n            reject\n        );\n\n    }))\n}\n","// extracted by mini-css-extract-plugin","import WPWorker from \"./_services.worker\";\n\nimport {\n    RESPONSE_ERROR,\n    RESPONSE_PROGRESS,\n} from \"./services-constants\";\n\n\nlet counter = 0;\n\nconst storage = new Map();\n\nconst webWorker = WPWorker();\n\nconst secret = Symbol(\"Services Secret\");\n\nfunction processWorkerMessage(data)\n{\n    //console.log(\"RESPONSE\", data);\n\n    const { ticket, message } = data;\n\n    const entry = storage.get(ticket);\n    if (!entry)\n    {\n        console.error(\"INVALID TICKET: \" + JSON.stringify(message));\n        return;\n    }\n\n    const { resolve, reject } = entry[secret];\n\n    const {type} = message;\n\n    switch (type)\n    {\n        // case RESPONSE_MAP:\n        //     resolve(\n        //         WorldMap.deserialize(message.payload)\n        //     );\n        //     break;\n        case RESPONSE_PROGRESS:\n        {\n\n            const {onProgress} = entry;\n            if (onProgress)\n            {\n                onProgress(message.percent);\n            }\n            else\n            {\n                console.log(Math.round(message.percent * 100) + \"%\");\n            }\n            break;\n        }\n        // case RESPONSE_SEGMENT:\n        // {\n        //     if (entry.onSegment(message.path) === false)\n        //     {\n        //         resolve({\n        //             path: false\n        //         });\n        //\n        //         webWorker.postMessage({\n        //             type: MESSAGE_CANCEL_PATH,\n        //             ticket: message.ticket\n        //         })\n        //     }\n        //     break;\n        // }\n        // case RESPONSE_PATH:\n        // {\n        //     resolve(\n        //         message\n        //     );\n        // }\n        case RESPONSE_ERROR:\n        // intentional fall-through\n        default:\n            reject(message);\n    }\n\n}\n\n\nconst onWorkerMessage = ev => {\n\n    try\n    {\n        processWorkerMessage(ev.data);\n    }\n    catch(e)\n    {\n        console.error(\"ERROR processing worker message\", e)\n    }\n};\n\nwebWorker.addEventListener(\"message\", onWorkerMessage, true);\n\n\n\n/**\n *\n * @param {Object} message      message object\n * @param {Object} [ctx]    context for handler\n * @return {Promise<any>}\n */\nfunction postWithReply(message, ctx)\n{\n    const ticket = ++counter;\n\n    return new Promise(((promiseResolve, promiseReject) => {\n\n        //console.log(\"POST-W-REPLY\", ticket, message);\n\n        webWorker.postMessage({\n            ticket,\n            message\n        });\n\n        // make sure to delete our stored ticket both when resolving and rejecting\n        const internal = {\n            resolve: result => {\n                storage.delete(ticket);\n                promiseResolve(result);\n\n            },\n            reject: err => {\n                storage.delete(ticket);\n                promiseReject(err);\n\n            }\n        };\n\n        if (ctx)\n        {\n            ctx[secret] = internal;\n        }\n        else\n        {\n            ctx = {\n                [secret] : internal,\n            };\n        }\n        storage.set(ticket, ctx);\n    }));\n}\n\n\nconst Services = {\n\n    // /**\n    //  * Generates the world map with the given seed. Returns a promise that resolves\n    //  * with the new map object\n    //  *\n    //  * @param {String|Number}   seed    seed value\n    //  * @param size\n    //  * @param {Function} [onProgress]   optional progress handler\n    //  * @return {Promise<any>}\n    //  */\n    // generateMap: (seed, size = 2048, onProgress) => {\n    //     return postWithReply({\n    //             type: QUERY_GENERATE,\n    //             seed,\n    //             size,\n    //             reportProgress: !!onProgress\n    //         }, {\n    //             onProgress\n    //         })\n    //         .catch(\n    //             e => {\n    //                 console.error(\"ERROR in generateMap\", e);\n    //                 return Promise.reject(e);\n    //             }\n    //         );\n    // },\n    //\n    // /**\n    //  * Plans a path starting at sx,sy and ending at ex,ey. The planning works on two levels. It uses a prepared\n    //  * navigation mesh to vastly cut down on computational complexity for very long paths connecting e.g. the next village.\n    //  *\n    //  * One the second level, a grid-based planning controls the path in between nodes of the navigation mesh. For short\n    //  * paths, only the second level might be needed.\n    //  *\n    //  * The promise returned resolves to the complete path\n    //  *\n    //  * @param {Number} worldId          world map id\n    //  * @param {Number} sx               starting point x-coordinate\n    //  * @param {Number} sy               starting point y-coordinate\n    //  * @param {Number} ex               end point x-coordinate\n    //  * @param {Number} ey               end point y-coordinate\n    //  * @param {Function} [onSegment]    optional callback to receive each second level sub path\n    //  * @return {Promise<any>}\n    //  */\n    // planPath: (worldId, sx, sy, ex, ey, onSegment) => {\n    //     return postWithReply({\n    //             type: QUERY_PATH,\n    //             worldId,\n    //             sx,\n    //             sy,\n    //             ex,\n    //             ey,\n    //             reportSegments: !!onSegment\n    //         }, {\n    //             onSegment\n    //         })\n    //         .catch(\n    //             e => {\n    //                 console.error(\"ERROR in planPath\", e)\n    //                 return Promise.reject(e);\n    //             }\n    //         );\n    // },\n\n    close: () => {\n        webWorker.removeEventListener(\"message\", onWorkerMessage, true);\n        webWorker.close();\n\n    }\n};\n\nexport default Services;\n\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"9986f4eb4cb578c82abb.worker.js\");\n};","// export const MESSAGE_CANCEL_PATH = \"MESSAGE_CANCEL_PATH\";\n// export const QUERY_GENERATE = \"QUERY_GENERATE\";\n// export const QUERY_PATH = \"QUERY_PATH\";\n\nexport const RESPONSE_PROGRESS = \"RESPONSE_PROGRESS\";\nexport const RESPONSE_ERROR = \"RESPONSE_ERROR\";\n"],"sourceRoot":""}