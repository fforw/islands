{"version":3,"sources":["webpack://Demo/webpack/bootstrap","webpack://Demo/./src/worker/_services.worker.js","webpack://Demo/./src/worker/services-constants.js"],"names":["reply","ticket","message","postMessage","error","type","RESPONSE_ERROR","handleIncomingMessage","ev","data","onmessage","RESPONSE_PROGRESS"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;;AAGA,SAASA,KAAT,CAAeC,MAAf,EAAuBC,OAAvB,EACA;AACIC,aAAW,CACP;AACIF,UAAM,EAANA,MADJ;AAEIC,WAAO,EAAPA;AAFJ,GADO,CAAX;AAMH;;AAED,SAASE,KAAT,CAAeH,MAAf,EAAuBG,KAAvB,EACA;AACIJ,OAAK,CACDC,MADC,EAED;AACII,QAAI,EAAEC,kEADV;AAEIF,SAAK,EAALA,KAFJ;AAGIH,UAAM,EAANA;AAHJ,GAFC,CAAL;AAQH;;AAED,SAASM,qBAAT,CAA+BC,EAA/B,EACA;AAAA,iBAC8BA,EAAE,CAACC,IADjC;AAAA,MACWP,OADX,YACWA,OADX;AAAA,MACoBD,MADpB,YACoBA,MADpB;AAAA,MAEWI,IAFX,GAEmBH,OAFnB,CAEWG,IAFX,EAII;;AAGA,UAAQA,IAAR;AAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACID,WAAK,CACDH,MADC,EAED,uBAAuBI,IAFtB,CAAL;AAIA;AAlGR;AAqGH;;AAGDK,SAAS,GAAG,mBAAAF,EAAE,EAAI;AAEd;AACA;AACI,SAAOD,qBAAqB,CAACC,EAAD,CAA5B,CAJU,CAKd;AACA;AACA;AACA;AACA;AACH,CAVD,C;;;;;;;;;;;;ACzIA;AAAA;AAAA;AAAA;AACA;AACA;AAEO,IAAMG,iBAAiB,GAAG,mBAA1B;AACA,IAAML,cAAc,GAAG,gBAAvB,C","file":"9986f4eb4cb578c82abb.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./node_modules/babel-loader/lib/index.js!./src/worker/_services.worker.js\");\n","import { RESPONSE_ERROR } from \"./services-constants\";\n\n\nfunction reply(ticket, message)\n{\n    postMessage(\n        {\n            ticket,\n            message\n        }\n    );\n}\n\nfunction error(ticket, error)\n{\n    reply(\n        ticket,\n        {\n            type: RESPONSE_ERROR,\n            error,\n            ticket\n        }\n    );\n}\n\nfunction handleIncomingMessage(ev)\n{\n    const {message, ticket} = ev.data;\n    const {type} = message;\n\n    //console.log(\"handleIncomingMessage\", ticket, message);\n\n\n    switch (type)\n    {\n        // case QUERY_GENERATE:\n        // {\n        //     const {seed, size, reportProgress} = message;\n        //\n        //     console.log(\"Generating world '\" + seed + \"'\");\n        //\n        //     const map = WorldMap.generate(\n        //         size,\n        //         seed,\n        //         reportProgress &&\n        //         (percent => reply(\n        //             ticket,\n        //             {\n        //                 type: RESPONSE_PROGRESS,\n        //                 percent,\n        //             }\n        //         ))\n        //     );\n        //\n        //     const id = uuid.v4();\n        //     map.worldId = id;\n        //\n        //     maps[id] = map;\n        //\n        //     reply(\n        //         ticket,\n        //         {\n        //             type: RESPONSE_MAP,\n        //             payload: map.serialize()\n        //         });\n        //     break;\n        //\n        // }\n        //\n        // case QUERY_PATH:\n        // {\n        //     const {worldId, sx, sy, ex, ey, reportSegments} = message;\n        //\n        //     //console.log(\"QUERY_PATH\", {worldId, sx, sy, ex, ey, reportSegments})\n        //\n        //     const map = maps[worldId];\n        //\n        //     if (!map)\n        //     {\n        //         error(\n        //             ticket,\n        //             \"Could not find map '\" + worldId + \"'\"\n        //         );\n        //         return;\n        //     }\n        //\n        //     const worldPath = macroPath(\n        //         map,\n        //         sx, sy,\n        //         ex, ey\n        //     );\n        //     //console.log(\"World path for ticket #\" + ticket, worldPath);\n        //\n        //     if (worldPath == null)\n        //     {\n        //         reply(\n        //             ticket,\n        //             {\n        //                 type: RESPONSE_PATH,\n        //                 path: null\n        //             }\n        //         );\n        //     }\n        //     else\n        //     {\n        //         paths.set(\n        //             ticket,\n        //             {\n        //                 map,\n        //                 worldPath,\n        //                 pos: 0,\n        //                 path: [],\n        //                 reportSegments\n        //             }\n        //         );\n        //\n        //         setTimeout(doSubPathRoundRobin, 1);\n        //     }\n        //\n        //     break;\n        // }\n        //\n        // case MESSAGE_CANCEL_PATH:\n        //     paths.delete(message.ticket);\n        //     break;\n\n        default:\n            error(\n                ticket,\n                \"Unhandled action: \" + type\n            );\n            break;\n    }\n\n}\n\n\nonmessage = ev => {\n\n    // try\n    // {\n        return handleIncomingMessage(ev);\n    // }\n    // catch(e)\n    // {\n    //     console.error(\"Error handling incoming message\", e);\n    // }\n};\n","// export const MESSAGE_CANCEL_PATH = \"MESSAGE_CANCEL_PATH\";\n// export const QUERY_GENERATE = \"QUERY_GENERATE\";\n// export const QUERY_PATH = \"QUERY_PATH\";\n\nexport const RESPONSE_PROGRESS = \"RESPONSE_PROGRESS\";\nexport const RESPONSE_ERROR = \"RESPONSE_ERROR\";\n"],"sourceRoot":""}